

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Mar 25 15:30:18 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,space=0,delta=2
    14                           	psect	clrtext,global,class=CODE,space=0,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    20                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    50                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    51                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,space=0,delta=2
    66                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2,group=2
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71     0000                     
    72                           ; Generated 12/10/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F887 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106     0004                     fsr             equ	4
   107     0004                     fsr0            equ	4
   108     0000                     indf            equ	0
   109     0000                     indf0           equ	0
   110     0002                     pc              equ	2
   111     0002                     pcl             equ	2
   112     000A                     pclath          equ	10
   113     0003                     status          equ	3
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     008F                     OSCCON          equ	143	;# 
   159     0090                     OSCTUNE         equ	144	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0093                     SSPMSK          equ	147	;# 
   164     0093                     MSK             equ	147	;# 
   165     0094                     SSPSTAT         equ	148	;# 
   166     0095                     WPUB            equ	149	;# 
   167     0096                     IOCB            equ	150	;# 
   168     0097                     VRCON           equ	151	;# 
   169     0098                     TXSTA           equ	152	;# 
   170     0099                     SPBRG           equ	153	;# 
   171     009A                     SPBRGH          equ	154	;# 
   172     009B                     PWM1CON         equ	155	;# 
   173     009C                     ECCPAS          equ	156	;# 
   174     009D                     PSTRCON         equ	157	;# 
   175     009E                     ADRESL          equ	158	;# 
   176     009F                     ADCON1          equ	159	;# 
   177     0105                     WDTCON          equ	261	;# 
   178     0107                     CM1CON0         equ	263	;# 
   179     0108                     CM2CON0         equ	264	;# 
   180     0109                     CM2CON1         equ	265	;# 
   181     010C                     EEDATA          equ	268	;# 
   182     010C                     EEDAT           equ	268	;# 
   183     010D                     EEADR           equ	269	;# 
   184     010E                     EEDATH          equ	270	;# 
   185     010F                     EEADRH          equ	271	;# 
   186     0185                     SRCON           equ	389	;# 
   187     0187                     BAUDCTL         equ	391	;# 
   188     0188                     ANSEL           equ	392	;# 
   189     0189                     ANSELH          equ	393	;# 
   190     018C                     EECON1          equ	396	;# 
   191     018D                     EECON2          equ	397	;# 
   192     0000                     INDF            equ	0	;# 
   193     0001                     TMR0            equ	1	;# 
   194     0002                     PCL             equ	2	;# 
   195     0003                     STATUS          equ	3	;# 
   196     0004                     FSR             equ	4	;# 
   197     0005                     PORTA           equ	5	;# 
   198     0006                     PORTB           equ	6	;# 
   199     0007                     PORTC           equ	7	;# 
   200     0008                     PORTD           equ	8	;# 
   201     0009                     PORTE           equ	9	;# 
   202     000A                     PCLATH          equ	10	;# 
   203     000B                     INTCON          equ	11	;# 
   204     000C                     PIR1            equ	12	;# 
   205     000D                     PIR2            equ	13	;# 
   206     000E                     TMR1            equ	14	;# 
   207     000E                     TMR1L           equ	14	;# 
   208     000F                     TMR1H           equ	15	;# 
   209     0010                     T1CON           equ	16	;# 
   210     0011                     TMR2            equ	17	;# 
   211     0012                     T2CON           equ	18	;# 
   212     0013                     SSPBUF          equ	19	;# 
   213     0014                     SSPCON          equ	20	;# 
   214     0015                     CCPR1           equ	21	;# 
   215     0015                     CCPR1L          equ	21	;# 
   216     0016                     CCPR1H          equ	22	;# 
   217     0017                     CCP1CON         equ	23	;# 
   218     0018                     RCSTA           equ	24	;# 
   219     0019                     TXREG           equ	25	;# 
   220     001A                     RCREG           equ	26	;# 
   221     001B                     CCPR2           equ	27	;# 
   222     001B                     CCPR2L          equ	27	;# 
   223     001C                     CCPR2H          equ	28	;# 
   224     001D                     CCP2CON         equ	29	;# 
   225     001E                     ADRESH          equ	30	;# 
   226     001F                     ADCON0          equ	31	;# 
   227     0081                     OPTION_REG      equ	129	;# 
   228     0085                     TRISA           equ	133	;# 
   229     0086                     TRISB           equ	134	;# 
   230     0087                     TRISC           equ	135	;# 
   231     0088                     TRISD           equ	136	;# 
   232     0089                     TRISE           equ	137	;# 
   233     008C                     PIE1            equ	140	;# 
   234     008D                     PIE2            equ	141	;# 
   235     008E                     PCON            equ	142	;# 
   236     008F                     OSCCON          equ	143	;# 
   237     0090                     OSCTUNE         equ	144	;# 
   238     0091                     SSPCON2         equ	145	;# 
   239     0092                     PR2             equ	146	;# 
   240     0093                     SSPADD          equ	147	;# 
   241     0093                     SSPMSK          equ	147	;# 
   242     0093                     MSK             equ	147	;# 
   243     0094                     SSPSTAT         equ	148	;# 
   244     0095                     WPUB            equ	149	;# 
   245     0096                     IOCB            equ	150	;# 
   246     0097                     VRCON           equ	151	;# 
   247     0098                     TXSTA           equ	152	;# 
   248     0099                     SPBRG           equ	153	;# 
   249     009A                     SPBRGH          equ	154	;# 
   250     009B                     PWM1CON         equ	155	;# 
   251     009C                     ECCPAS          equ	156	;# 
   252     009D                     PSTRCON         equ	157	;# 
   253     009E                     ADRESL          equ	158	;# 
   254     009F                     ADCON1          equ	159	;# 
   255     0105                     WDTCON          equ	261	;# 
   256     0107                     CM1CON0         equ	263	;# 
   257     0108                     CM2CON0         equ	264	;# 
   258     0109                     CM2CON1         equ	265	;# 
   259     010C                     EEDATA          equ	268	;# 
   260     010C                     EEDAT           equ	268	;# 
   261     010D                     EEADR           equ	269	;# 
   262     010E                     EEDATH          equ	270	;# 
   263     010F                     EEADRH          equ	271	;# 
   264     0185                     SRCON           equ	389	;# 
   265     0187                     BAUDCTL         equ	391	;# 
   266     0188                     ANSEL           equ	392	;# 
   267     0189                     ANSELH          equ	393	;# 
   268     018C                     EECON1          equ	396	;# 
   269     018D                     EECON2          equ	397	;# 
   270     0000                     INDF            equ	0	;# 
   271     0001                     TMR0            equ	1	;# 
   272     0002                     PCL             equ	2	;# 
   273     0003                     STATUS          equ	3	;# 
   274     0004                     FSR             equ	4	;# 
   275     0005                     PORTA           equ	5	;# 
   276     0006                     PORTB           equ	6	;# 
   277     0007                     PORTC           equ	7	;# 
   278     0008                     PORTD           equ	8	;# 
   279     0009                     PORTE           equ	9	;# 
   280     000A                     PCLATH          equ	10	;# 
   281     000B                     INTCON          equ	11	;# 
   282     000C                     PIR1            equ	12	;# 
   283     000D                     PIR2            equ	13	;# 
   284     000E                     TMR1            equ	14	;# 
   285     000E                     TMR1L           equ	14	;# 
   286     000F                     TMR1H           equ	15	;# 
   287     0010                     T1CON           equ	16	;# 
   288     0011                     TMR2            equ	17	;# 
   289     0012                     T2CON           equ	18	;# 
   290     0013                     SSPBUF          equ	19	;# 
   291     0014                     SSPCON          equ	20	;# 
   292     0015                     CCPR1           equ	21	;# 
   293     0015                     CCPR1L          equ	21	;# 
   294     0016                     CCPR1H          equ	22	;# 
   295     0017                     CCP1CON         equ	23	;# 
   296     0018                     RCSTA           equ	24	;# 
   297     0019                     TXREG           equ	25	;# 
   298     001A                     RCREG           equ	26	;# 
   299     001B                     CCPR2           equ	27	;# 
   300     001B                     CCPR2L          equ	27	;# 
   301     001C                     CCPR2H          equ	28	;# 
   302     001D                     CCP2CON         equ	29	;# 
   303     001E                     ADRESH          equ	30	;# 
   304     001F                     ADCON0          equ	31	;# 
   305     0081                     OPTION_REG      equ	129	;# 
   306     0085                     TRISA           equ	133	;# 
   307     0086                     TRISB           equ	134	;# 
   308     0087                     TRISC           equ	135	;# 
   309     0088                     TRISD           equ	136	;# 
   310     0089                     TRISE           equ	137	;# 
   311     008C                     PIE1            equ	140	;# 
   312     008D                     PIE2            equ	141	;# 
   313     008E                     PCON            equ	142	;# 
   314     008F                     OSCCON          equ	143	;# 
   315     0090                     OSCTUNE         equ	144	;# 
   316     0091                     SSPCON2         equ	145	;# 
   317     0092                     PR2             equ	146	;# 
   318     0093                     SSPADD          equ	147	;# 
   319     0093                     SSPMSK          equ	147	;# 
   320     0093                     MSK             equ	147	;# 
   321     0094                     SSPSTAT         equ	148	;# 
   322     0095                     WPUB            equ	149	;# 
   323     0096                     IOCB            equ	150	;# 
   324     0097                     VRCON           equ	151	;# 
   325     0098                     TXSTA           equ	152	;# 
   326     0099                     SPBRG           equ	153	;# 
   327     009A                     SPBRGH          equ	154	;# 
   328     009B                     PWM1CON         equ	155	;# 
   329     009C                     ECCPAS          equ	156	;# 
   330     009D                     PSTRCON         equ	157	;# 
   331     009E                     ADRESL          equ	158	;# 
   332     009F                     ADCON1          equ	159	;# 
   333     0105                     WDTCON          equ	261	;# 
   334     0107                     CM1CON0         equ	263	;# 
   335     0108                     CM2CON0         equ	264	;# 
   336     0109                     CM2CON1         equ	265	;# 
   337     010C                     EEDATA          equ	268	;# 
   338     010C                     EEDAT           equ	268	;# 
   339     010D                     EEADR           equ	269	;# 
   340     010E                     EEDATH          equ	270	;# 
   341     010F                     EEADRH          equ	271	;# 
   342     0185                     SRCON           equ	389	;# 
   343     0187                     BAUDCTL         equ	391	;# 
   344     0188                     ANSEL           equ	392	;# 
   345     0189                     ANSELH          equ	393	;# 
   346     018C                     EECON1          equ	396	;# 
   347     018D                     EECON2          equ	397	;# 
   348     0000                     INDF            equ	0	;# 
   349     0001                     TMR0            equ	1	;# 
   350     0002                     PCL             equ	2	;# 
   351     0003                     STATUS          equ	3	;# 
   352     0004                     FSR             equ	4	;# 
   353     0005                     PORTA           equ	5	;# 
   354     0006                     PORTB           equ	6	;# 
   355     0007                     PORTC           equ	7	;# 
   356     0008                     PORTD           equ	8	;# 
   357     0009                     PORTE           equ	9	;# 
   358     000A                     PCLATH          equ	10	;# 
   359     000B                     INTCON          equ	11	;# 
   360     000C                     PIR1            equ	12	;# 
   361     000D                     PIR2            equ	13	;# 
   362     000E                     TMR1            equ	14	;# 
   363     000E                     TMR1L           equ	14	;# 
   364     000F                     TMR1H           equ	15	;# 
   365     0010                     T1CON           equ	16	;# 
   366     0011                     TMR2            equ	17	;# 
   367     0012                     T2CON           equ	18	;# 
   368     0013                     SSPBUF          equ	19	;# 
   369     0014                     SSPCON          equ	20	;# 
   370     0015                     CCPR1           equ	21	;# 
   371     0015                     CCPR1L          equ	21	;# 
   372     0016                     CCPR1H          equ	22	;# 
   373     0017                     CCP1CON         equ	23	;# 
   374     0018                     RCSTA           equ	24	;# 
   375     0019                     TXREG           equ	25	;# 
   376     001A                     RCREG           equ	26	;# 
   377     001B                     CCPR2           equ	27	;# 
   378     001B                     CCPR2L          equ	27	;# 
   379     001C                     CCPR2H          equ	28	;# 
   380     001D                     CCP2CON         equ	29	;# 
   381     001E                     ADRESH          equ	30	;# 
   382     001F                     ADCON0          equ	31	;# 
   383     0081                     OPTION_REG      equ	129	;# 
   384     0085                     TRISA           equ	133	;# 
   385     0086                     TRISB           equ	134	;# 
   386     0087                     TRISC           equ	135	;# 
   387     0088                     TRISD           equ	136	;# 
   388     0089                     TRISE           equ	137	;# 
   389     008C                     PIE1            equ	140	;# 
   390     008D                     PIE2            equ	141	;# 
   391     008E                     PCON            equ	142	;# 
   392     008F                     OSCCON          equ	143	;# 
   393     0090                     OSCTUNE         equ	144	;# 
   394     0091                     SSPCON2         equ	145	;# 
   395     0092                     PR2             equ	146	;# 
   396     0093                     SSPADD          equ	147	;# 
   397     0093                     SSPMSK          equ	147	;# 
   398     0093                     MSK             equ	147	;# 
   399     0094                     SSPSTAT         equ	148	;# 
   400     0095                     WPUB            equ	149	;# 
   401     0096                     IOCB            equ	150	;# 
   402     0097                     VRCON           equ	151	;# 
   403     0098                     TXSTA           equ	152	;# 
   404     0099                     SPBRG           equ	153	;# 
   405     009A                     SPBRGH          equ	154	;# 
   406     009B                     PWM1CON         equ	155	;# 
   407     009C                     ECCPAS          equ	156	;# 
   408     009D                     PSTRCON         equ	157	;# 
   409     009E                     ADRESL          equ	158	;# 
   410     009F                     ADCON1          equ	159	;# 
   411     0105                     WDTCON          equ	261	;# 
   412     0107                     CM1CON0         equ	263	;# 
   413     0108                     CM2CON0         equ	264	;# 
   414     0109                     CM2CON1         equ	265	;# 
   415     010C                     EEDATA          equ	268	;# 
   416     010C                     EEDAT           equ	268	;# 
   417     010D                     EEADR           equ	269	;# 
   418     010E                     EEDATH          equ	270	;# 
   419     010F                     EEADRH          equ	271	;# 
   420     0185                     SRCON           equ	389	;# 
   421     0187                     BAUDCTL         equ	391	;# 
   422     0188                     ANSEL           equ	392	;# 
   423     0189                     ANSELH          equ	393	;# 
   424     018C                     EECON1          equ	396	;# 
   425     018D                     EECON2          equ	397	;# 
   426     0000                     INDF            equ	0	;# 
   427     0001                     TMR0            equ	1	;# 
   428     0002                     PCL             equ	2	;# 
   429     0003                     STATUS          equ	3	;# 
   430     0004                     FSR             equ	4	;# 
   431     0005                     PORTA           equ	5	;# 
   432     0006                     PORTB           equ	6	;# 
   433     0007                     PORTC           equ	7	;# 
   434     0008                     PORTD           equ	8	;# 
   435     0009                     PORTE           equ	9	;# 
   436     000A                     PCLATH          equ	10	;# 
   437     000B                     INTCON          equ	11	;# 
   438     000C                     PIR1            equ	12	;# 
   439     000D                     PIR2            equ	13	;# 
   440     000E                     TMR1            equ	14	;# 
   441     000E                     TMR1L           equ	14	;# 
   442     000F                     TMR1H           equ	15	;# 
   443     0010                     T1CON           equ	16	;# 
   444     0011                     TMR2            equ	17	;# 
   445     0012                     T2CON           equ	18	;# 
   446     0013                     SSPBUF          equ	19	;# 
   447     0014                     SSPCON          equ	20	;# 
   448     0015                     CCPR1           equ	21	;# 
   449     0015                     CCPR1L          equ	21	;# 
   450     0016                     CCPR1H          equ	22	;# 
   451     0017                     CCP1CON         equ	23	;# 
   452     0018                     RCSTA           equ	24	;# 
   453     0019                     TXREG           equ	25	;# 
   454     001A                     RCREG           equ	26	;# 
   455     001B                     CCPR2           equ	27	;# 
   456     001B                     CCPR2L          equ	27	;# 
   457     001C                     CCPR2H          equ	28	;# 
   458     001D                     CCP2CON         equ	29	;# 
   459     001E                     ADRESH          equ	30	;# 
   460     001F                     ADCON0          equ	31	;# 
   461     0081                     OPTION_REG      equ	129	;# 
   462     0085                     TRISA           equ	133	;# 
   463     0086                     TRISB           equ	134	;# 
   464     0087                     TRISC           equ	135	;# 
   465     0088                     TRISD           equ	136	;# 
   466     0089                     TRISE           equ	137	;# 
   467     008C                     PIE1            equ	140	;# 
   468     008D                     PIE2            equ	141	;# 
   469     008E                     PCON            equ	142	;# 
   470     008F                     OSCCON          equ	143	;# 
   471     0090                     OSCTUNE         equ	144	;# 
   472     0091                     SSPCON2         equ	145	;# 
   473     0092                     PR2             equ	146	;# 
   474     0093                     SSPADD          equ	147	;# 
   475     0093                     SSPMSK          equ	147	;# 
   476     0093                     MSK             equ	147	;# 
   477     0094                     SSPSTAT         equ	148	;# 
   478     0095                     WPUB            equ	149	;# 
   479     0096                     IOCB            equ	150	;# 
   480     0097                     VRCON           equ	151	;# 
   481     0098                     TXSTA           equ	152	;# 
   482     0099                     SPBRG           equ	153	;# 
   483     009A                     SPBRGH          equ	154	;# 
   484     009B                     PWM1CON         equ	155	;# 
   485     009C                     ECCPAS          equ	156	;# 
   486     009D                     PSTRCON         equ	157	;# 
   487     009E                     ADRESL          equ	158	;# 
   488     009F                     ADCON1          equ	159	;# 
   489     0105                     WDTCON          equ	261	;# 
   490     0107                     CM1CON0         equ	263	;# 
   491     0108                     CM2CON0         equ	264	;# 
   492     0109                     CM2CON1         equ	265	;# 
   493     010C                     EEDATA          equ	268	;# 
   494     010C                     EEDAT           equ	268	;# 
   495     010D                     EEADR           equ	269	;# 
   496     010E                     EEDATH          equ	270	;# 
   497     010F                     EEADRH          equ	271	;# 
   498     0185                     SRCON           equ	389	;# 
   499     0187                     BAUDCTL         equ	391	;# 
   500     0188                     ANSEL           equ	392	;# 
   501     0189                     ANSELH          equ	393	;# 
   502     018C                     EECON1          equ	396	;# 
   503     018D                     EECON2          equ	397	;# 
   504     0000                     INDF            equ	0	;# 
   505     0001                     TMR0            equ	1	;# 
   506     0002                     PCL             equ	2	;# 
   507     0003                     STATUS          equ	3	;# 
   508     0004                     FSR             equ	4	;# 
   509     0005                     PORTA           equ	5	;# 
   510     0006                     PORTB           equ	6	;# 
   511     0007                     PORTC           equ	7	;# 
   512     0008                     PORTD           equ	8	;# 
   513     0009                     PORTE           equ	9	;# 
   514     000A                     PCLATH          equ	10	;# 
   515     000B                     INTCON          equ	11	;# 
   516     000C                     PIR1            equ	12	;# 
   517     000D                     PIR2            equ	13	;# 
   518     000E                     TMR1            equ	14	;# 
   519     000E                     TMR1L           equ	14	;# 
   520     000F                     TMR1H           equ	15	;# 
   521     0010                     T1CON           equ	16	;# 
   522     0011                     TMR2            equ	17	;# 
   523     0012                     T2CON           equ	18	;# 
   524     0013                     SSPBUF          equ	19	;# 
   525     0014                     SSPCON          equ	20	;# 
   526     0015                     CCPR1           equ	21	;# 
   527     0015                     CCPR1L          equ	21	;# 
   528     0016                     CCPR1H          equ	22	;# 
   529     0017                     CCP1CON         equ	23	;# 
   530     0018                     RCSTA           equ	24	;# 
   531     0019                     TXREG           equ	25	;# 
   532     001A                     RCREG           equ	26	;# 
   533     001B                     CCPR2           equ	27	;# 
   534     001B                     CCPR2L          equ	27	;# 
   535     001C                     CCPR2H          equ	28	;# 
   536     001D                     CCP2CON         equ	29	;# 
   537     001E                     ADRESH          equ	30	;# 
   538     001F                     ADCON0          equ	31	;# 
   539     0081                     OPTION_REG      equ	129	;# 
   540     0085                     TRISA           equ	133	;# 
   541     0086                     TRISB           equ	134	;# 
   542     0087                     TRISC           equ	135	;# 
   543     0088                     TRISD           equ	136	;# 
   544     0089                     TRISE           equ	137	;# 
   545     008C                     PIE1            equ	140	;# 
   546     008D                     PIE2            equ	141	;# 
   547     008E                     PCON            equ	142	;# 
   548     008F                     OSCCON          equ	143	;# 
   549     0090                     OSCTUNE         equ	144	;# 
   550     0091                     SSPCON2         equ	145	;# 
   551     0092                     PR2             equ	146	;# 
   552     0093                     SSPADD          equ	147	;# 
   553     0093                     SSPMSK          equ	147	;# 
   554     0093                     MSK             equ	147	;# 
   555     0094                     SSPSTAT         equ	148	;# 
   556     0095                     WPUB            equ	149	;# 
   557     0096                     IOCB            equ	150	;# 
   558     0097                     VRCON           equ	151	;# 
   559     0098                     TXSTA           equ	152	;# 
   560     0099                     SPBRG           equ	153	;# 
   561     009A                     SPBRGH          equ	154	;# 
   562     009B                     PWM1CON         equ	155	;# 
   563     009C                     ECCPAS          equ	156	;# 
   564     009D                     PSTRCON         equ	157	;# 
   565     009E                     ADRESL          equ	158	;# 
   566     009F                     ADCON1          equ	159	;# 
   567     0105                     WDTCON          equ	261	;# 
   568     0107                     CM1CON0         equ	263	;# 
   569     0108                     CM2CON0         equ	264	;# 
   570     0109                     CM2CON1         equ	265	;# 
   571     010C                     EEDATA          equ	268	;# 
   572     010C                     EEDAT           equ	268	;# 
   573     010D                     EEADR           equ	269	;# 
   574     010E                     EEDATH          equ	270	;# 
   575     010F                     EEADRH          equ	271	;# 
   576     0185                     SRCON           equ	389	;# 
   577     0187                     BAUDCTL         equ	391	;# 
   578     0188                     ANSEL           equ	392	;# 
   579     0189                     ANSELH          equ	393	;# 
   580     018C                     EECON1          equ	396	;# 
   581     018D                     EECON2          equ	397	;# 
   582                           
   583                           	psect	idataBANK0
   584     113E                     __pidataBANK0:
   585                           
   586                           ;initializer for _sound_speed_cms
   587     113E  3400               	retlw	0
   588     113F  34FC               	retlw	252
   589     1140  3405               	retlw	5
   590     1141  3447               	retlw	71
   591                           
   592                           ;initializer for _crystal_freq_mhz
   593     1142  3400               	retlw	0
   594     1143  3400               	retlw	0
   595     1144  3440               	retlw	64
   596     1145  3441               	retlw	65
   597                           
   598                           ;initializer for _BackLight_State
   599     1146  3408               	retlw	8
   600                           
   601                           ;initializer for _timer_prescaler
   602     1147  3401               	retlw	1
   603                           
   604                           	psect	nvBANK0
   605     005E                     __pnvBANK0:
   606     005E                     _division_factor:
   607     005E                     	ds	4
   608     001A                     _RCREG          set	26
   609     0019                     _TXREG          set	25
   610     0013                     _SSPBUF         set	19
   611     0014                     _SSPCON         set	20
   612     000E                     _TMR1L          set	14
   613     000F                     _TMR1H          set	15
   614     0010                     _T1CON          set	16
   615     0007                     _PORTC          set	7
   616     0008                     _PORTD          set	8
   617     0065                     _RCIF           set	101
   618     00C4                     _CREN           set	196
   619     00C7                     _SPEN           set	199
   620     0063                     _SSPIF          set	99
   621     0080                     _TMR1ON         set	128
   622     0030                     _RB0            set	48
   623     0031                     _RB1            set	49
   624     005B                     _RBIE           set	91
   625     0058                     _RBIF           set	88
   626     005F                     _GIE            set	95
   627     0099                     _SPBRG          set	153
   628     0093                     _SSPADD         set	147
   629     0094                     _SSPSTAT        set	148
   630     0091                     _SSPCON2        set	145
   631     0087                     _TRISC          set	135
   632     0088                     _TRISD          set	136
   633     04C1                     _TRMT           set	1217
   634     04C5                     _TXEN           set	1221
   635     043F                     _TRISC7         set	1087
   636     043E                     _TRISC6         set	1086
   637     04C4                     _SYNC           set	1220
   638     04C2                     _BRGH           set	1218
   639     048B                     _RCEN           set	1163
   640     048C                     _ACKEN          set	1164
   641     048D                     _ACKDT          set	1165
   642     048A                     _PEN            set	1162
   643     0489                     _RSEN           set	1161
   644     0488                     _SEN            set	1160
   645     048E                     _ACKSTAT        set	1166
   646     043C                     _TRISC4         set	1084
   647     043B                     _TRISC3         set	1083
   648     04B0                     _IOCB0          set	1200
   649     0430                     _TRISB0         set	1072
   650     0431                     _TRISB1         set	1073
   651     0189                     _ANSELH         set	393
   652                           
   653                           	psect	strings
   654     1100                     __pstrings:
   655     1100                     stringtab:
   656     1100                     __stringtab:
   657                           
   658                           ;	String table - string pointers are 2 bytes each
   659     1100  1BFF               	btfsc	btemp+1,7
   660     1101  290A               	ljmp	stringcode
   661     1102  1383               	bcf	3,7
   662     1103  187F               	btfsc	btemp+1,0
   663     1104  1783               	bsf	3,7
   664     1105  0800               	movf	0,w
   665     1106  0A84               	incf	4,f
   666     1107  1903               	skipnz
   667     1108  0AFF               	incf	btemp+1,f
   668     1109  0008               	return
   669     110A                     stringcode:
   670     110A  087F               	movf	btemp+1,w
   671     110B  397F               	andlw	127
   672     110C  008A               	movwf	10
   673     110D  0804               	movf	4,w
   674     110E  0A84               	incf	4,f
   675     110F  1903               	skipnz
   676     1110  0AFF               	incf	btemp+1,f
   677     1111  0082               	movwf	2
   678     1112                     __stringbase:
   679     1112                     __end_of__stringtab:
   680                           
   681                           	psect	stringtext
   682     1000                     __pstringtext:
   683     1000                     STR_1:
   684     1000  3457               	retlw	87	;'W'
   685     1001  3465               	retlw	101	;'e'
   686     1002  346C               	retlw	108	;'l'
   687     1003  3463               	retlw	99	;'c'
   688     1004  346F               	retlw	111	;'o'
   689     1005  346D               	retlw	109	;'m'
   690     1006  3465               	retlw	101	;'e'
   691     1007  3420               	retlw	32	;' '
   692     1008  3474               	retlw	116	;'t'
   693     1009  346F               	retlw	111	;'o'
   694     100A  3420               	retlw	32	;' '
   695     100B  3474               	retlw	116	;'t'
   696     100C  3468               	retlw	104	;'h'
   697     100D  3465               	retlw	101	;'e'
   698     100E  3420               	retlw	32	;' '
   699     100F  3448               	retlw	72	;'H'
   700     1010  3443               	retlw	67	;'C'
   701     1011  342D               	retlw	45	;'-'
   702     1012  3453               	retlw	83	;'S'
   703     1013  3452               	retlw	82	;'R'
   704     1014  3430               	retlw	48	;'0'
   705     1015  3434               	retlw	52	;'4'
   706     1016  3420               	retlw	32	;' '
   707     1017  3444               	retlw	68	;'D'
   708     1018  3469               	retlw	105	;'i'
   709     1019  3473               	retlw	115	;'s'
   710     101A  3474               	retlw	116	;'t'
   711     101B  3461               	retlw	97	;'a'
   712     101C  346E               	retlw	110	;'n'
   713     101D  3463               	retlw	99	;'c'
   714     101E  3465               	retlw	101	;'e'
   715     101F  3420               	retlw	32	;' '
   716     1020  344D               	retlw	77	;'M'
   717     1021  3465               	retlw	101	;'e'
   718     1022  3461               	retlw	97	;'a'
   719     1023  3473               	retlw	115	;'s'
   720     1024  3475               	retlw	117	;'u'
   721     1025  3472               	retlw	114	;'r'
   722     1026  3465               	retlw	101	;'e'
   723     1027  346D               	retlw	109	;'m'
   724     1028  3465               	retlw	101	;'e'
   725     1029  346E               	retlw	110	;'n'
   726     102A  3474               	retlw	116	;'t'
   727     102B  3420               	retlw	32	;' '
   728     102C  3453               	retlw	83	;'S'
   729     102D  3479               	retlw	121	;'y'
   730     102E  3473               	retlw	115	;'s'
   731     102F  3474               	retlw	116	;'t'
   732     1030  3465               	retlw	101	;'e'
   733     1031  346D               	retlw	109	;'m'
   734     1032  340D               	retlw	13
   735     1033  340A               	retlw	10
   736     1034  3400               	retlw	0
   737     1035                     STR_2:
   738     1035  3450               	retlw	80	;'P'
   739     1036  3472               	retlw	114	;'r'
   740     1037  3465               	retlw	101	;'e'
   741     1038  3473               	retlw	115	;'s'
   742     1039  3473               	retlw	115	;'s'
   743     103A  3420               	retlw	32	;' '
   744     103B  3474               	retlw	116	;'t'
   745     103C  3468               	retlw	104	;'h'
   746     103D  3465               	retlw	101	;'e'
   747     103E  3420               	retlw	32	;' '
   748     103F  3462               	retlw	98	;'b'
   749     1040  3475               	retlw	117	;'u'
   750     1041  3474               	retlw	116	;'t'
   751     1042  3474               	retlw	116	;'t'
   752     1043  346F               	retlw	111	;'o'
   753     1044  346E               	retlw	110	;'n'
   754     1045  3420               	retlw	32	;' '
   755     1046  3474               	retlw	116	;'t'
   756     1047  346F               	retlw	111	;'o'
   757     1048  3420               	retlw	32	;' '
   758     1049  3473               	retlw	115	;'s'
   759     104A  3474               	retlw	116	;'t'
   760     104B  3461               	retlw	97	;'a'
   761     104C  3472               	retlw	114	;'r'
   762     104D  3474               	retlw	116	;'t'
   763     104E  342F               	retlw	47	;'/'
   764     104F  3470               	retlw	112	;'p'
   765     1050  3461               	retlw	97	;'a'
   766     1051  3475               	retlw	117	;'u'
   767     1052  3473               	retlw	115	;'s'
   768     1053  3465               	retlw	101	;'e'
   769     1054  3420               	retlw	32	;' '
   770     1055  3474               	retlw	116	;'t'
   771     1056  3468               	retlw	104	;'h'
   772     1057  3465               	retlw	101	;'e'
   773     1058  3420               	retlw	32	;' '
   774     1059  346D               	retlw	109	;'m'
   775     105A  3465               	retlw	101	;'e'
   776     105B  3461               	retlw	97	;'a'
   777     105C  3473               	retlw	115	;'s'
   778     105D  3475               	retlw	117	;'u'
   779     105E  3472               	retlw	114	;'r'
   780     105F  3465               	retlw	101	;'e'
   781     1060  346D               	retlw	109	;'m'
   782     1061  3465               	retlw	101	;'e'
   783     1062  346E               	retlw	110	;'n'
   784     1063  3474               	retlw	116	;'t'
   785     1064  340D               	retlw	13
   786     1065  340A               	retlw	10
   787     1066  3400               	retlw	0
   788     1067                     STR_8:
   789     1067  3445               	retlw	69	;'E'
   790     1068  3472               	retlw	114	;'r'
   791     1069  3472               	retlw	114	;'r'
   792     106A  346F               	retlw	111	;'o'
   793     106B  3472               	retlw	114	;'r'
   794     106C  343A               	retlw	58	;':'
   795     106D  3420               	retlw	32	;' '
   796     106E  344E               	retlw	78	;'N'
   797     106F  346F               	retlw	111	;'o'
   798     1070  3420               	retlw	32	;' '
   799     1071  3472               	retlw	114	;'r'
   800     1072  3465               	retlw	101	;'e'
   801     1073  3461               	retlw	97	;'a'
   802     1074  3464               	retlw	100	;'d'
   803     1075  3469               	retlw	105	;'i'
   804     1076  346E               	retlw	110	;'n'
   805     1077  3467               	retlw	103	;'g'
   806     1078  340D               	retlw	13
   807     1079  340A               	retlw	10
   808     107A  3400               	retlw	0
   809     107B                     STR_6:
   810     107B  3420               	retlw	32	;' '
   811     107C  3420               	retlw	32	;' '
   812     107D  3420               	retlw	32	;' '
   813     107E  3420               	retlw	32	;' '
   814     107F  3420               	retlw	32	;' '
   815     1080  3420               	retlw	32	;' '
   816     1081  3420               	retlw	32	;' '
   817     1082  3420               	retlw	32	;' '
   818     1083  3420               	retlw	32	;' '
   819     1084  3420               	retlw	32	;' '
   820     1085  3420               	retlw	32	;' '
   821     1086  3420               	retlw	32	;' '
   822     1087  3420               	retlw	32	;' '
   823     1088  3420               	retlw	32	;' '
   824     1089  3420               	retlw	32	;' '
   825     108A  3420               	retlw	32	;' '
   826     108B  3420               	retlw	32	;' '
   827     108C  3420               	retlw	32	;' '
   828     108D  3420               	retlw	32	;' '
   829     108E  3400               	retlw	0
   830     108F                     STR_11:
   831     108F  3444               	retlw	68	;'D'
   832     1090  3469               	retlw	105	;'i'
   833     1091  3473               	retlw	115	;'s'
   834     1092  3474               	retlw	116	;'t'
   835     1093  3461               	retlw	97	;'a'
   836     1094  346E               	retlw	110	;'n'
   837     1095  3463               	retlw	99	;'c'
   838     1096  3465               	retlw	101	;'e'
   839     1097  343A               	retlw	58	;':'
   840     1098  3420               	retlw	32	;' '
   841     1099  344D               	retlw	77	;'M'
   842     109A  3461               	retlw	97	;'a'
   843     109B  3478               	retlw	120	;'x'
   844     109C  3420               	retlw	32	;' '
   845     109D  3472               	retlw	114	;'r'
   846     109E  3461               	retlw	97	;'a'
   847     109F  346E               	retlw	110	;'n'
   848     10A0  3467               	retlw	103	;'g'
   849     10A1  3465               	retlw	101	;'e'
   850     10A2  3400               	retlw	0
   851     10A3                     STR_5:
   852     10A3  3442               	retlw	66	;'B'
   853     10A4  3454               	retlw	84	;'T'
   854     10A5  344C               	retlw	76	;'L'
   855     10A6  3420               	retlw	32	;' '
   856     10A7  3456               	retlw	86	;'V'
   857     10A8  3449               	retlw	73	;'I'
   858     10A9  3420               	retlw	32	;' '
   859     10AA  3444               	retlw	68	;'D'
   860     10AB  3449               	retlw	73	;'I'
   861     10AC  3445               	retlw	69	;'E'
   862     10AD  3455               	retlw	85	;'U'
   863     10AE  3420               	retlw	32	;' '
   864     10AF  344B               	retlw	75	;'K'
   865     10B0  3448               	retlw	72	;'H'
   866     10B1  3449               	retlw	73	;'I'
   867     10B2  3445               	retlw	69	;'E'
   868     10B3  344E               	retlw	78	;'N'
   869     10B4  3400               	retlw	0
   870     10B5                     STR_4:
   871     10B5  344E               	retlw	78	;'N'
   872     10B6  3467               	retlw	103	;'g'
   873     10B7  3475               	retlw	117	;'u'
   874     10B8  3479               	retlw	121	;'y'
   875     10B9  3465               	retlw	101	;'e'
   876     10BA  346E               	retlw	110	;'n'
   877     10BB  3420               	retlw	32	;' '
   878     10BC  3448               	retlw	72	;'H'
   879     10BD  3475               	retlw	117	;'u'
   880     10BE  346E               	retlw	110	;'n'
   881     10BF  3467               	retlw	103	;'g'
   882     10C0  3420               	retlw	32	;' '
   883     10C1  3444               	retlw	68	;'D'
   884     10C2  3475               	retlw	117	;'u'
   885     10C3  346F               	retlw	111	;'o'
   886     10C4  346E               	retlw	110	;'n'
   887     10C5  3467               	retlw	103	;'g'
   888     10C6  3400               	retlw	0
   889     10C7                     STR_9:
   890     10C7  3444               	retlw	68	;'D'
   891     10C8  3469               	retlw	105	;'i'
   892     10C9  3473               	retlw	115	;'s'
   893     10CA  3474               	retlw	116	;'t'
   894     10CB  3461               	retlw	97	;'a'
   895     10CC  346E               	retlw	110	;'n'
   896     10CD  3463               	retlw	99	;'c'
   897     10CE  3465               	retlw	101	;'e'
   898     10CF  3420               	retlw	32	;' '
   899     10D0  343D               	retlw	61	;'='
   900     10D1  3420               	retlw	32	;' '
   901     10D2  3425               	retlw	37	;'%'
   902     10D3  3464               	retlw	100	;'d'
   903     10D4  3420               	retlw	32	;' '
   904     10D5  3463               	retlw	99	;'c'
   905     10D6  346D               	retlw	109	;'m'
   906     10D7  3400               	retlw	0
   907     10D8                     STR_3:
   908     10D8  3448               	retlw	72	;'H'
   909     10D9  346F               	retlw	111	;'o'
   910     10DA  3461               	retlw	97	;'a'
   911     10DB  346E               	retlw	110	;'n'
   912     10DC  3467               	retlw	103	;'g'
   913     10DD  3420               	retlw	32	;' '
   914     10DE  3454               	retlw	84	;'T'
   915     10DF  3472               	retlw	114	;'r'
   916     10E0  3475               	retlw	117	;'u'
   917     10E1  346E               	retlw	110	;'n'
   918     10E2  3467               	retlw	103	;'g'
   919     10E3  3420               	retlw	32	;' '
   920     10E4  3441               	retlw	65	;'A'
   921     10E5  346E               	retlw	110	;'n'
   922     10E6  3400               	retlw	0
   923     10E7                     STR_7:
   924     10E7  344E               	retlw	78	;'N'
   925     10E8  346F               	retlw	111	;'o'
   926     10E9  3420               	retlw	32	;' '
   927     10EA  3472               	retlw	114	;'r'
   928     10EB  3465               	retlw	101	;'e'
   929     10EC  3461               	retlw	97	;'a'
   930     10ED  3464               	retlw	100	;'d'
   931     10EE  3469               	retlw	105	;'i'
   932     10EF  346E               	retlw	110	;'n'
   933     10F0  3467               	retlw	103	;'g'
   934     10F1  3400               	retlw	0
   935     1078                     STR_10          equ	STR_8+17
   936                           
   937                           	psect	cinit
   938     0013                     start_initialization:	
   939                           ; #config settings
   940                           
   941     0013                     __initialization:
   942                           
   943                           ; Initialize objects allocated to BANK0
   944     0013  1383               	bcf	3,7	;select IRP bank0
   945     0014  305E               	movlw	low (__pdataBANK0+10)
   946     0015  00FD               	movwf	btemp+-1
   947     0016  3011               	movlw	high __pidataBANK0
   948     0017  00FE               	movwf	btemp
   949     0018  303E               	movlw	low __pidataBANK0
   950     0019  00FF               	movwf	btemp+1
   951     001A  3054               	movlw	low __pdataBANK0
   952     001B  0084               	movwf	4
   953     001C  160A  118A  22B3  120A  118A  	fcall	init_ram0
   954                           
   955                           ; Clear objects allocated to BANK3
   956     0021  1783               	bsf	3,7	;select IRP bank2
   957     0022  30C0               	movlw	low __pbssBANK3
   958     0023  0084               	movwf	4
   959     0024  30DA               	movlw	low (__pbssBANK3+26)
   960     0025  160A  118A  216C  120A  118A  	fcall	clear_ram0
   961                           
   962                           ; Clear objects allocated to BANK2
   963     002A  3010               	movlw	low __pbssBANK2
   964     002B  0084               	movwf	4
   965     002C  3058               	movlw	low (__pbssBANK2+72)
   966     002D  160A  118A  216C  120A  118A  	fcall	clear_ram0
   967                           
   968                           ; Clear objects allocated to BANK0
   969     0032  1383               	bcf	3,7	;select IRP bank0
   970     0033  3049               	movlw	low __pbssBANK0
   971     0034  0084               	movwf	4
   972     0035  3054               	movlw	low (__pbssBANK0+11)
   973     0036  160A  118A  216C  120A  118A  	fcall	clear_ram0
   974     003B                     end_of_initialization:	
   975                           ;End of C runtime variable initialization code
   976                           
   977     003B                     __end_of__initialization:
   978     003B  0183               	clrf	3
   979     003C  160A  118A  2EC9   	ljmp	_main	;jump to C main() function
   980                           
   981                           	psect	bssBANK0
   982     0049                     __pbssBANK0:
   983     0049                     _width:
   984     0049                     	ds	2
   985     004B                     _prec:
   986     004B                     	ds	2
   987     004D                     _echo_start:
   988     004D                     	ds	2
   989     004F                     _flags:
   990     004F                     	ds	1
   991     0050                     _i2c_add:
   992     0050                     	ds	1
   993     0051                     _RS:
   994     0051                     	ds	1
   995     0052                     _lastButtonState:
   996     0052                     	ds	1
   997     0053                     _isPaused:
   998     0053                     	ds	1
   999                           
  1000                           	psect	dataBANK0
  1001     0054                     __pdataBANK0:
  1002     0054                     _sound_speed_cms:
  1003     0054                     	ds	4
  1004     0058                     _crystal_freq_mhz:
  1005     0058                     	ds	4
  1006     005C                     _BackLight_State:
  1007     005C                     	ds	1
  1008     005D                     _timer_prescaler:
  1009     005D                     	ds	1
  1010                           
  1011                           	psect	bssBANK3
  1012     01C0                     __pbssBANK3:
  1013     01C0                     _last_distance:
  1014     01C0                     	ds	2
  1015     01C2                     _distn:
  1016     01C2                     	ds	2
  1017     01C4                     _echo_state:
  1018     01C4                     	ds	1
  1019     01C5                     _echo_complete:
  1020     01C5                     	ds	1
  1021     01C6                     _out:
  1022     01C6                     	ds	20
  1023                           
  1024                           	psect	bssBANK2
  1025     0110                     __pbssBANK2:
  1026     0110                     SR04_Distance@F1975:
  1027     0110                     	ds	40
  1028     0138                     _dbuf:
  1029     0138                     	ds	32
  1030                           
  1031                           	psect	inittext
  1032     12AF                     init_fetch0:	
  1033                           ;	Called with low address in FSR and high address in W
  1034                           
  1035     12AF  087E               	movf	btemp,w
  1036     12B0  008A               	movwf	10
  1037     12B1  087F               	movf	btemp+1,w
  1038     12B2  0082               	movwf	2
  1039     12B3                     init_ram0:	
  1040                           ;Called with:
  1041                           ;	high address of idata address in btemp 
  1042                           ;	low address of idata address in btemp+1 
  1043                           ;	low address of data in FSR
  1044                           ;	high address + 1 of data in btemp-1
  1045                           
  1046     12B3  160A  118A  22AF  160A  118A  	fcall	init_fetch0
  1047     12B8  0080               	movwf	0
  1048     12B9  0A84               	incf	4,f
  1049     12BA  0804               	movf	4,w
  1050     12BB  067D               	xorwf	btemp+-1,w
  1051     12BC  1903               	btfsc	3,2
  1052     12BD  3400               	retlw	0
  1053     12BE  0AFF               	incf	btemp+1,f
  1054     12BF  1903               	btfsc	3,2
  1055     12C0  0AFE               	incf	btemp,f
  1056     12C1  2AB3               	goto	init_ram0
  1057                           
  1058                           	psect	clrtext
  1059     116C                     clear_ram0:	
  1060                           ;	Called with FSR containing the base address, and
  1061                           ;	W with the last address+1
  1062                           
  1063     116C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1064     116D                     clrloop0:
  1065     116D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1066     116E  0A84               	incf	4,f	;increment pointer
  1067     116F  0604               	xorwf	4,w	;XOR with final address
  1068     1170  1903               	btfsc	3,2	;have we reached the end yet?
  1069     1171  3400               	retlw	0	;all done for this memory range, return
  1070     1172  0604               	xorwf	4,w	;XOR again to restore value
  1071     1173  296D               	goto	clrloop0	;do the next byte
  1072                           
  1073                           	psect	cstackBANK3
  1074     0190                     __pcstackBANK3:
  1075     0190                     ___fladd@signs:
  1076     0190                     SR04_Distance@measurements:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079                           
  1080                           ; 40 bytes @ 0x0
  1081     0190                     	ds	1
  1082     0191                     ___fladd@aexp:
  1083                           
  1084                           ; 1 bytes @ 0x1
  1085     0191                     	ds	1
  1086     0192                     ___fladd@bexp:
  1087                           
  1088                           ; 1 bytes @ 0x2
  1089     0192                     	ds	1
  1090     0193                     ___fladd@grs:
  1091                           
  1092                           ; 1 bytes @ 0x3
  1093     0193                     	ds	1
  1094     0194                     SR04_init@instruction_freq:
  1095                           
  1096                           ; 4 bytes @ 0x4
  1097     0194                     	ds	4
  1098     0198                     SR04_init@time_per_tick_us:
  1099                           
  1100                           ; 4 bytes @ 0x8
  1101     0198                     	ds	32
  1102     01B8                     SR04_Distance@sum:
  1103                           
  1104                           ; 2 bytes @ 0x28
  1105     01B8                     	ds	2
  1106     01BA                     SR04_Distance@timeout:
  1107                           
  1108                           ; 2 bytes @ 0x2A
  1109     01BA                     	ds	2
  1110     01BC                     SR04_Distance@valid_readings:
  1111                           
  1112                           ; 2 bytes @ 0x2C
  1113     01BC                     	ds	2
  1114     01BE                     SR04_Distance@i:
  1115                           
  1116                           ; 2 bytes @ 0x2E
  1117     01BE                     	ds	2
  1118                           
  1119                           	psect	cstackBANK1
  1120     00A0                     __pcstackBANK1:
  1121     00A0                     ?_custom_delay_ms:
  1122     00A0                     ?__Umul8_16:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125     00A0                     ?_fputc:	
  1126                           ; 2 bytes @ 0x0
  1127                           
  1128     00A0                     ?___awdiv:	
  1129                           ; 2 bytes @ 0x0
  1130                           
  1131     00A0                     ?___awmod:	
  1132                           ; 2 bytes @ 0x0
  1133                           
  1134     00A0                     ?___lwdiv:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137     00A0                     I2C_Master_Write@data:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140     00A0                     UART_Write@data:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143     00A0                     __Umul8_16@multiplicand:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146     00A0                     custom_delay_ms@ms:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149     00A0                     ___awdiv@divisor:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152     00A0                     ___awmod@divisor:	
  1153                           ; 2 bytes @ 0x0
  1154                           
  1155     00A0                     ___lwdiv@divisor:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158     00A0                     fputc@c:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161     00A0                     ??_BUZZER_Init:	
  1162                           ; 2 bytes @ 0x0
  1163                           
  1164     00A0                     ??_UART_TX_Init:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167     00A0                     ??_I2C_Master_Init:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170     00A0                     ??_putch:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173     00A0                     ??_BUTTON_Init:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176     00A0                     ??_LED_Init:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179     00A0                     ??_LED_Off:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182     00A0                     ??_LED_On:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185     00A0                     ??_SR04_trigger:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188     00A0                     ??_I2C_Master_Wait:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191     00A0                     ??_I2C_Master_Write:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194     00A0                     ??_I2C_Master_Start:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197     00A0                     ??_I2C_Master_Stop:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200     00A0                     ??_UART_TX_Empty:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203     00A0                     ??_UART_Write:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206     00A0                     ??_BUZZER_Off:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209     00A0                     ??_BUZZER_On:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0x0
  1214     00A0                     	ds	1
  1215     00A1                     ?_UART_Write_Text:
  1216     00A1                     IO_Expander_Write@Data:	
  1217                           ; 1 bytes @ 0x1
  1218                           
  1219     00A1                     UART_Write_Text@text:	
  1220                           ; 1 bytes @ 0x1
  1221                           
  1222     00A1                     ??_IO_Expander_Write:	
  1223                           ; 2 bytes @ 0x1
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x1
  1227     00A1                     	ds	1
  1228     00A2                     ___awdiv@dividend:
  1229     00A2                     ___awmod@dividend:	
  1230                           ; 2 bytes @ 0x2
  1231                           
  1232     00A2                     ___lwdiv@dividend:	
  1233                           ; 2 bytes @ 0x2
  1234                           
  1235     00A2                     fputc@fp:	
  1236                           ; 2 bytes @ 0x2
  1237                           
  1238     00A2                     ??__Umul8_16:	
  1239                           ; 2 bytes @ 0x2
  1240                           
  1241     00A2                     ??_LCD_Write_4Bit:	
  1242                           ; 1 bytes @ 0x2
  1243                           
  1244     00A2                     ??_custom_delay_ms:	
  1245                           ; 1 bytes @ 0x2
  1246                           
  1247                           
  1248                           ; 1 bytes @ 0x2
  1249     00A2                     	ds	1
  1250     00A3                     LCD_Write_4Bit@Nibble:
  1251     00A3                     ??_UART_Write_Text:	
  1252                           ; 1 bytes @ 0x3
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x3
  1256     00A3                     	ds	1
  1257     00A4                     ___awdiv@counter:
  1258     00A4                     ___awmod@counter:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261     00A4                     custom_delay_ms@i:	
  1262                           ; 1 bytes @ 0x4
  1263                           
  1264     00A4                     ___lwdiv@quotient:	
  1265                           ; 2 bytes @ 0x4
  1266                           
  1267     00A4                     __Umul8_16@product:	
  1268                           ; 2 bytes @ 0x4
  1269                           
  1270     00A4                     ??_LCD_CMD:	
  1271                           ; 2 bytes @ 0x4
  1272                           
  1273     00A4                     ??_fputc:	
  1274                           ; 1 bytes @ 0x4
  1275                           
  1276     00A4                     ??_LCD_Write_Char:	
  1277                           ; 1 bytes @ 0x4
  1278                           
  1279     00A4                     ??___awdiv:	
  1280                           ; 1 bytes @ 0x4
  1281                           
  1282     00A4                     ??___awmod:	
  1283                           ; 1 bytes @ 0x4
  1284                           
  1285     00A4                     ??___lwdiv:	
  1286                           ; 1 bytes @ 0x4
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x4
  1290     00A4                     	ds	1
  1291     00A5                     LCD_Write_Char@Data:
  1292     00A5                     LCD_CMD@CMD:	
  1293                           ; 1 bytes @ 0x5
  1294                           
  1295     00A5                     ___awdiv@sign:	
  1296                           ; 1 bytes @ 0x5
  1297                           
  1298     00A5                     ___awmod@sign:	
  1299                           ; 1 bytes @ 0x5
  1300                           
  1301                           
  1302                           ; 1 bytes @ 0x5
  1303     00A5                     	ds	1
  1304     00A6                     ?_LCD_Set_Cursor:
  1305     00A6                     ?_LCD_Write_String:	
  1306                           ; 1 bytes @ 0x6
  1307                           
  1308     00A6                     ?_BUZZER_Beep:	
  1309                           ; 1 bytes @ 0x6
  1310                           
  1311     00A6                     ?_BUZZER_MultipleBeeps:	
  1312                           ; 1 bytes @ 0x6
  1313                           
  1314     00A6                     ?_abs:	
  1315                           ; 1 bytes @ 0x6
  1316                           
  1317     00A6                     LCD_Set_Cursor@COL:	
  1318                           ; 2 bytes @ 0x6
  1319                           
  1320     00A6                     ___lwdiv@counter:	
  1321                           ; 1 bytes @ 0x6
  1322                           
  1323     00A6                     LCD_Write_String@Str:	
  1324                           ; 1 bytes @ 0x6
  1325                           
  1326     00A6                     BUZZER_Beep@duration:	
  1327                           ; 2 bytes @ 0x6
  1328                           
  1329     00A6                     BUZZER_MultipleBeeps@beep_duration:	
  1330                           ; 2 bytes @ 0x6
  1331                           
  1332     00A6                     ___awdiv@quotient:	
  1333                           ; 2 bytes @ 0x6
  1334                           
  1335     00A6                     __Umul8_16@word_mpld:	
  1336                           ; 2 bytes @ 0x6
  1337                           
  1338     00A6                     abs@a:	
  1339                           ; 2 bytes @ 0x6
  1340                           
  1341     00A6                     ??_LCD_Init:	
  1342                           ; 2 bytes @ 0x6
  1343                           
  1344     00A6                     ??_LCD_Clear:	
  1345                           ; 1 bytes @ 0x6
  1346                           
  1347                           
  1348                           ; 1 bytes @ 0x6
  1349     00A6                     	ds	1
  1350     00A7                     LCD_Set_Cursor@ROW:
  1351     00A7                     ??_LCD_Set_Cursor:	
  1352                           ; 1 bytes @ 0x7
  1353                           
  1354                           
  1355                           ; 1 bytes @ 0x7
  1356     00A7                     	ds	1
  1357     00A8                     LCD_Init@I2C_Add:
  1358     00A8                     __Umul8_16@multiplier:	
  1359                           ; 1 bytes @ 0x8
  1360                           
  1361     00A8                     BUZZER_MultipleBeeps@pause_duration:	
  1362                           ; 1 bytes @ 0x8
  1363                           
  1364     00A8                     ??_LCD_Write_String:	
  1365                           ; 2 bytes @ 0x8
  1366                           
  1367     00A8                     ??_BUZZER_Beep:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370     00A8                     ??_abs:	
  1371                           ; 1 bytes @ 0x8
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x8
  1375     00A8                     	ds	1
  1376     00A9                     ?___flmul:
  1377     00A9                     ___flmul@b:	
  1378                           ; 4 bytes @ 0x9
  1379                           
  1380                           
  1381                           ; 4 bytes @ 0x9
  1382     00A9                     	ds	1
  1383     00AA                     ??_BUZZER_MultipleBeeps:
  1384                           
  1385                           ; 1 bytes @ 0xA
  1386     00AA                     	ds	1
  1387     00AB                     LCD_Write_String@i:
  1388                           
  1389                           ; 2 bytes @ 0xB
  1390     00AB                     	ds	1
  1391     00AC                     BUZZER_MultipleBeeps@count:
  1392                           
  1393                           ; 1 bytes @ 0xC
  1394     00AC                     	ds	1
  1395     00AD                     ?_vfpfcnvrt:
  1396     00AD                     BUZZER_MultipleBeeps@i:	
  1397                           ; 1 bytes @ 0xD
  1398                           
  1399     00AD                     vfpfcnvrt@fp:	
  1400                           ; 1 bytes @ 0xD
  1401                           
  1402     00AD                     ___flmul@a:	
  1403                           ; 2 bytes @ 0xD
  1404                           
  1405                           
  1406                           ; 4 bytes @ 0xD
  1407     00AD                     	ds	2
  1408     00AF                     vfpfcnvrt@fmt:
  1409                           
  1410                           ; 1 bytes @ 0xF
  1411     00AF                     	ds	1
  1412     00B0                     vfpfcnvrt@ap:
  1413                           
  1414                           ; 1 bytes @ 0x10
  1415     00B0                     	ds	1
  1416     00B1                     ??___flmul:
  1417     00B1                     ??_vfpfcnvrt:	
  1418                           ; 1 bytes @ 0x11
  1419                           
  1420                           
  1421                           ; 1 bytes @ 0x11
  1422     00B1                     	ds	4
  1423     00B5                     vfpfcnvrt@done:
  1424                           
  1425                           ; 1 bytes @ 0x15
  1426     00B5                     	ds	1
  1427     00B6                     ___flmul@sign:
  1428     00B6                     vfpfcnvrt@cp:	
  1429                           ; 1 bytes @ 0x16
  1430                           
  1431                           
  1432                           ; 2 bytes @ 0x16
  1433     00B6                     	ds	1
  1434     00B7                     ___flmul@grs:
  1435                           
  1436                           ; 4 bytes @ 0x17
  1437     00B7                     	ds	1
  1438     00B8                     vfpfcnvrt@convarg:
  1439                           
  1440                           ; 4 bytes @ 0x18
  1441     00B8                     	ds	3
  1442     00BB                     ___flmul@aexp:
  1443                           
  1444                           ; 1 bytes @ 0x1B
  1445     00BB                     	ds	1
  1446     00BC                     ___flmul@bexp:
  1447     00BC                     vfpfcnvrt@c:	
  1448                           ; 1 bytes @ 0x1C
  1449                           
  1450                           
  1451                           ; 1 bytes @ 0x1C
  1452     00BC                     	ds	1
  1453     00BD                     ?_vfprintf:
  1454     00BD                     vfprintf@fp:	
  1455                           ; 2 bytes @ 0x1D
  1456                           
  1457     00BD                     ___flmul@prod:	
  1458                           ; 2 bytes @ 0x1D
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x1D
  1462     00BD                     	ds	2
  1463     00BF                     vfprintf@fmt:
  1464                           
  1465                           ; 2 bytes @ 0x1F
  1466     00BF                     	ds	2
  1467     00C1                     vfprintf@ap:
  1468     00C1                     ___flmul@temp:	
  1469                           ; 1 bytes @ 0x21
  1470                           
  1471                           
  1472                           ; 2 bytes @ 0x21
  1473     00C1                     	ds	1
  1474     00C2                     vfprintf@cfmt:
  1475     00C2                     ??_vfprintf:	
  1476                           ; 2 bytes @ 0x22
  1477                           
  1478                           
  1479                           ; 1 bytes @ 0x22
  1480     00C2                     	ds	1
  1481     00C3                     ?___fldiv:
  1482     00C3                     ___fldiv@a:	
  1483                           ; 4 bytes @ 0x23
  1484                           
  1485                           
  1486                           ; 4 bytes @ 0x23
  1487     00C3                     	ds	1
  1488     00C4                     ?_sprintf:
  1489     00C4                     sprintf@s:	
  1490                           ; 2 bytes @ 0x24
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x24
  1494     00C4                     	ds	1
  1495     00C5                     sprintf@fmt:
  1496                           
  1497                           ; 2 bytes @ 0x25
  1498     00C5                     	ds	2
  1499     00C7                     ___fldiv@b:
  1500                           
  1501                           ; 4 bytes @ 0x27
  1502     00C7                     	ds	2
  1503     00C9                     ??_sprintf:
  1504                           
  1505                           ; 1 bytes @ 0x29
  1506     00C9                     	ds	1
  1507     00CA                     sprintf@ap:
  1508                           
  1509                           ; 1 bytes @ 0x2A
  1510     00CA                     	ds	1
  1511     00CB                     sprintf@f:
  1512     00CB                     ??___fldiv:	
  1513                           ; 11 bytes @ 0x2B
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x2B
  1517     00CB                     	ds	5
  1518     00D0                     ___fldiv@rem:
  1519                           
  1520                           ; 4 bytes @ 0x30
  1521     00D0                     	ds	4
  1522     00D4                     ___fldiv@sign:
  1523                           
  1524                           ; 1 bytes @ 0x34
  1525     00D4                     	ds	1
  1526     00D5                     ___fldiv@new_exp:
  1527                           
  1528                           ; 2 bytes @ 0x35
  1529     00D5                     	ds	1
  1530     00D6                     ??_SR04_Distance:
  1531                           
  1532                           ; 1 bytes @ 0x36
  1533     00D6                     	ds	1
  1534     00D7                     ___fldiv@grs:
  1535                           
  1536                           ; 4 bytes @ 0x37
  1537     00D7                     	ds	1
  1538     00D8                     ??_checkPauseButton:
  1539                           
  1540                           ; 1 bytes @ 0x38
  1541     00D8                     	ds	2
  1542     00DA                     checkPauseButton@currentButtonState:
  1543                           
  1544                           ; 1 bytes @ 0x3A
  1545     00DA                     	ds	1
  1546     00DB                     ___fldiv@bexp:
  1547                           
  1548                           ; 1 bytes @ 0x3B
  1549     00DB                     	ds	1
  1550     00DC                     ___fldiv@aexp:
  1551                           
  1552                           ; 1 bytes @ 0x3C
  1553     00DC                     	ds	1
  1554     00DD                     ?___fladd:
  1555     00DD                     ___fladd@b:	
  1556                           ; 4 bytes @ 0x3D
  1557                           
  1558                           
  1559                           ; 4 bytes @ 0x3D
  1560     00DD                     	ds	4
  1561     00E1                     ___fladd@a:
  1562                           
  1563                           ; 4 bytes @ 0x41
  1564     00E1                     	ds	4
  1565     00E5                     ??___fladd:
  1566                           
  1567                           ; 1 bytes @ 0x45
  1568     00E5                     	ds	8
  1569     00ED                     ??_SR04_init:
  1570     00ED                     ??_main:	
  1571                           ; 1 bytes @ 0x4D
  1572                           
  1573                           
  1574                           ; 1 bytes @ 0x4D
  1575     00ED                     	ds	3
  1576                           
  1577                           	psect	cstackCOMMON
  1578     0070                     __pcstackCOMMON:
  1579     0070                     ?_SR04_Distance:
  1580     0070                     ?_SR04_init:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583     0070                     ?_BUZZER_Init:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586     0070                     ?_UART_TX_Init:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589     0070                     ?_I2C_Master_Init:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592     0070                     ?_LCD_Init:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595     0070                     ?_LCD_Clear:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598     0070                     ?_IO_Expander_Write:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601     0070                     ?_LCD_CMD:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604     0070                     ?_putch:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607     0070                     ?_BUTTON_Init:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610     0070                     ?_LED_Init:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613     0070                     ?_LED_Off:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616     0070                     ?_LED_On:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619     0070                     ?_checkPauseButton:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622     0070                     ?_main:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625     0070                     ?_SR04_trigger:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628     0070                     ?_echoTime:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631     0070                     ?_I2C_Master_Wait:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634     0070                     ?_I2C_Master_Write:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637     0070                     ?_I2C_Master_Start:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640     0070                     ?_I2C_Master_Stop:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643     0070                     ?_LCD_Write_4Bit:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646     0070                     ?_LCD_Write_Char:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649     0070                     ?_UART_TX_Empty:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652     0070                     ?_UART_Write:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655     0070                     ?_BUZZER_Off:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658     0070                     ?_BUZZER_On:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661     0070                     ?i1___xxtofl:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664     0070                     putch@c:	
  1665                           ; 4 bytes @ 0x0
  1666                           
  1667     0070                     i1___xxtofl@val:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670                           
  1671                           ; 4 bytes @ 0x0
  1672     0070                     	ds	4
  1673     0074                     ??i1___xxtofl:
  1674                           
  1675                           ; 1 bytes @ 0x4
  1676     0074                     	ds	4
  1677     0078                     i1___xxtofl@sign:
  1678                           
  1679                           ; 1 bytes @ 0x8
  1680     0078                     	ds	1
  1681     0079                     i1___xxtofl@exp:
  1682                           
  1683                           ; 1 bytes @ 0x9
  1684     0079                     	ds	1
  1685     007A                     i1___xxtofl@arg:
  1686                           
  1687                           ; 4 bytes @ 0xA
  1688     007A                     	ds	4
  1689                           
  1690                           	psect	cstackBANK0
  1691     0020                     __pcstackBANK0:
  1692     0020                     ?i1___fldiv:
  1693     0020                     i1___fldiv@a:	
  1694                           ; 4 bytes @ 0x0
  1695                           
  1696                           
  1697                           ; 4 bytes @ 0x0
  1698     0020                     	ds	4
  1699     0024                     i1___fldiv@b:
  1700                           
  1701                           ; 4 bytes @ 0x4
  1702     0024                     	ds	4
  1703     0028                     ??i1___fldiv:
  1704                           
  1705                           ; 1 bytes @ 0x8
  1706     0028                     	ds	5
  1707     002D                     i1___fldiv@rem:
  1708                           
  1709                           ; 4 bytes @ 0xD
  1710     002D                     	ds	4
  1711     0031                     i1___fldiv@sign:
  1712                           
  1713                           ; 1 bytes @ 0x11
  1714     0031                     	ds	1
  1715     0032                     i1___fldiv@new_exp:
  1716                           
  1717                           ; 2 bytes @ 0x12
  1718     0032                     	ds	2
  1719     0034                     i1___fldiv@grs:
  1720                           
  1721                           ; 4 bytes @ 0x14
  1722     0034                     	ds	4
  1723     0038                     i1___fldiv@bexp:
  1724                           
  1725                           ; 1 bytes @ 0x18
  1726     0038                     	ds	1
  1727     0039                     i1___fldiv@aexp:
  1728                           
  1729                           ; 1 bytes @ 0x19
  1730     0039                     	ds	1
  1731     003A                     ?___fltol:
  1732     003A                     ___fltol@f1:	
  1733                           ; 4 bytes @ 0x1A
  1734                           
  1735                           
  1736                           ; 4 bytes @ 0x1A
  1737     003A                     	ds	4
  1738     003E                     ??___fltol:
  1739                           
  1740                           ; 1 bytes @ 0x1E
  1741     003E                     	ds	4
  1742     0042                     ___fltol@sign1:
  1743                           
  1744                           ; 1 bytes @ 0x22
  1745     0042                     	ds	1
  1746     0043                     ___fltol@exp1:
  1747                           
  1748                           ; 1 bytes @ 0x23
  1749     0043                     	ds	1
  1750     0044                     ??_echoTime:
  1751                           
  1752                           ; 1 bytes @ 0x24
  1753     0044                     	ds	3
  1754     0047                     echoTime@TMR:
  1755                           
  1756                           ; 2 bytes @ 0x27
  1757     0047                     	ds	2
  1758                           
  1759                           	psect	maintext
  1760     16C9                     __pmaintext:	
  1761 ;;
  1762 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1763 ;;
  1764 ;; *************** function _main *****************
  1765 ;; Defined at:
  1766 ;;		line 110 in file "main.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : B00/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          0       0       3       0       0
  1783 ;;      Totals:         0       0       3       0       0
  1784 ;;Total ram usage:        3 bytes
  1785 ;; Hardware stack levels required when called: 10
  1786 ;; This function calls:
  1787 ;;		_BUTTON_Init
  1788 ;;		_BUZZER_Init
  1789 ;;		_I2C_Master_Init
  1790 ;;		_LCD_Clear
  1791 ;;		_LCD_Init
  1792 ;;		_LCD_Set_Cursor
  1793 ;;		_LCD_Write_String
  1794 ;;		_LED_Init
  1795 ;;		_SR04_init
  1796 ;;		_UART_TX_Init
  1797 ;;		_UART_Write_Text
  1798 ;;		_checkPauseButton
  1799 ;; This function is called by:
  1800 ;;		Startup code after reset
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804     16C9                     _main:	
  1805                           ;psect for function _main
  1806                           
  1807     16C9                     l3634:	
  1808                           ;incstack = 0
  1809 ;; hardware stack exceeded
  1810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1811                           
  1812                           
  1813                           ;main.c: 113:     SR04_init();
  1814     16C9  120A  158A  21CE  160A  118A  	fcall	_SR04_init
  1815     16CE                     l3636:
  1816                           
  1817                           ;main.c: 115:     BUTTON_Init();
  1818     16CE  160A  118A  2163  160A  118A  	fcall	_BUTTON_Init
  1819     16D3                     l3638:
  1820                           
  1821                           ;main.c: 117:     BUZZER_Init();
  1822     16D3  160A  118A  2174  160A  118A  	fcall	_BUZZER_Init
  1823     16D8                     l3640:
  1824                           
  1825                           ;main.c: 119:     LED_Init();
  1826     16D8  160A  118A  2148  160A  118A  	fcall	_LED_Init
  1827     16DD                     l3642:
  1828                           
  1829                           ;main.c: 121:     UART_TX_Init();
  1830     16DD  160A  118A  2112  160A  118A  	fcall	_UART_TX_Init
  1831     16E2                     l3644:
  1832                           
  1833                           ;main.c: 124:     UART_Write_Text("Welcome to the HC-SR04 Distance Measurement System\r\
      +                          n");
  1834     16E2  3000               	movlw	low (STR_1| (0+32768))
  1835     16E3  1683               	bsf	3,5	;RP0=1, select bank1
  1836     16E4  1303               	bcf	3,6	;RP1=0, select bank1
  1837     16E5  00A1               	movwf	UART_Write_Text@text^(0+128)
  1838     16E6  3090               	movlw	high (STR_1| (0+32768))
  1839     16E7  00A2               	movwf	(UART_Write_Text@text^(0+128)+1)
  1840     16E8  160A  118A  246D  160A  118A  	fcall	_UART_Write_Text
  1841     16ED                     l3646:
  1842                           
  1843                           ;main.c: 125:     UART_Write_Text("Press the button to start/pause the measurement\r\n")
      +                          ;
  1844     16ED  3035               	movlw	low (STR_2| (0+32768))
  1845     16EE  1683               	bsf	3,5	;RP0=1, select bank1
  1846     16EF  1303               	bcf	3,6	;RP1=0, select bank1
  1847     16F0  00A1               	movwf	UART_Write_Text@text^(0+128)
  1848     16F1  3090               	movlw	high (STR_2| (0+32768))
  1849     16F2  00A2               	movwf	(UART_Write_Text@text^(0+128)+1)
  1850     16F3  160A  118A  246D  160A  118A  	fcall	_UART_Write_Text
  1851     16F8                     l3648:
  1852                           
  1853                           ;main.c: 128:     I2C_Master_Init();
  1854     16F8  160A  118A  2131  160A  118A  	fcall	_I2C_Master_Init
  1855     16FD                     l3650:
  1856                           
  1857                           ;main.c: 129:     LCD_Init(0x4E);
  1858     16FD  304E               	movlw	78
  1859     16FE  160A  118A  2763  160A  118A  	fcall	_LCD_Init
  1860     1703                     l3652:
  1861                           
  1862                           ;main.c: 131:     LCD_Clear();
  1863     1703  120A  118A  27F3  160A  118A  	fcall	_LCD_Clear
  1864     1708                     l3654:
  1865                           
  1866                           ;main.c: 132:     LCD_Set_Cursor(1, 1);
  1867     1708  1683               	bsf	3,5	;RP0=1, select bank1
  1868     1709  1303               	bcf	3,6	;RP1=0, select bank1
  1869     170A  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  1870     170B  0AA6               	incf	LCD_Set_Cursor@COL^(0+128),f
  1871     170C  3001               	movlw	1
  1872     170D  160A  118A  240C  160A  118A  	fcall	_LCD_Set_Cursor
  1873     1712                     l3656:
  1874                           
  1875                           ;main.c: 133:     LCD_Write_String("Hoang Trung An");
  1876     1712  30D8               	movlw	low (STR_3| (0+32768))
  1877     1713  1683               	bsf	3,5	;RP0=1, select bank1
  1878     1714  1303               	bcf	3,6	;RP1=0, select bank1
  1879     1715  00A6               	movwf	LCD_Write_String@Str^(0+128)
  1880     1716  3090               	movlw	high (STR_3| (0+32768))
  1881     1717  00A7               	movwf	(LCD_Write_String@Str^(0+128)+1)
  1882     1718  160A  118A  24E7  160A  118A  	fcall	_LCD_Write_String
  1883     171D                     l3658:
  1884                           
  1885                           ;main.c: 134:     LCD_Set_Cursor(2, 0);
  1886     171D  1683               	bsf	3,5	;RP0=1, select bank1
  1887     171E  1303               	bcf	3,6	;RP1=0, select bank1
  1888     171F  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  1889     1720  3002               	movlw	2
  1890     1721  160A  118A  240C  160A  118A  	fcall	_LCD_Set_Cursor
  1891     1726                     l3660:
  1892                           
  1893                           ;main.c: 135:     LCD_Write_String("Nguyen Hung Duong");
  1894     1726  30B5               	movlw	low (STR_4| (0+32768))
  1895     1727  1683               	bsf	3,5	;RP0=1, select bank1
  1896     1728  1303               	bcf	3,6	;RP1=0, select bank1
  1897     1729  00A6               	movwf	LCD_Write_String@Str^(0+128)
  1898     172A  3090               	movlw	high (STR_4| (0+32768))
  1899     172B  00A7               	movwf	(LCD_Write_String@Str^(0+128)+1)
  1900     172C  160A  118A  24E7  160A  118A  	fcall	_LCD_Write_String
  1901     1731                     l3662:
  1902                           
  1903                           ;main.c: 136:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  1904     1731  301F               	movlw	31
  1905     1732  1683               	bsf	3,5	;RP0=1, select bank1
  1906     1733  1303               	bcf	3,6	;RP1=0, select bank1
  1907     1734  00EF               	movwf	(??_main^(0+128)+2)
  1908     1735  3071               	movlw	113
  1909     1736  00EE               	movwf	(??_main^(0+128)+1)
  1910     1737  301D               	movlw	29
  1911     1738  00ED               	movwf	??_main^(0+128)
  1912     1739                     u5337:
  1913     1739  0BED               	decfsz	??_main^(0+128),f
  1914     173A  2F39               	goto	u5337
  1915     173B  0BEE               	decfsz	(??_main^(0+128)+1),f
  1916     173C  2F39               	goto	u5337
  1917     173D  0BEF               	decfsz	(??_main^(0+128)+2),f
  1918     173E  2F39               	goto	u5337
  1919     173F  2F40               	nop2
  1920     1740                     l3664:
  1921                           
  1922                           ;main.c: 137:     LCD_Clear();
  1923     1740  120A  118A  27F3  160A  118A  	fcall	_LCD_Clear
  1924     1745                     l3666:
  1925                           
  1926                           ;main.c: 138:     LCD_Set_Cursor(1, 1);
  1927     1745  1683               	bsf	3,5	;RP0=1, select bank1
  1928     1746  1303               	bcf	3,6	;RP1=0, select bank1
  1929     1747  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  1930     1748  0AA6               	incf	LCD_Set_Cursor@COL^(0+128),f
  1931     1749  3001               	movlw	1
  1932     174A  160A  118A  240C  160A  118A  	fcall	_LCD_Set_Cursor
  1933     174F                     l3668:
  1934                           
  1935                           ;main.c: 139:     LCD_Write_String("BTL VI DIEU KHIEN");
  1936     174F  30A3               	movlw	low (STR_5| (0+32768))
  1937     1750  1683               	bsf	3,5	;RP0=1, select bank1
  1938     1751  1303               	bcf	3,6	;RP1=0, select bank1
  1939     1752  00A6               	movwf	LCD_Write_String@Str^(0+128)
  1940     1753  3090               	movlw	high (STR_5| (0+32768))
  1941     1754  00A7               	movwf	(LCD_Write_String@Str^(0+128)+1)
  1942     1755  160A  118A  24E7  160A  118A  	fcall	_LCD_Write_String
  1943     175A                     l3670:
  1944                           
  1945                           ;main.c: 143:     {;main.c: 145:         checkPauseButton();
  1946     175A  160A  118A  2594  160A  118A  	fcall	_checkPauseButton
  1947     175F  2F5A               	goto	l3670
  1948     1760  120A  118A  2810   	ljmp	start
  1949     1763                     __end_of_main:
  1950                           
  1951                           	psect	text1
  1952     1594                     __ptext1:	
  1953 ;; *************** function _checkPauseButton *****************
  1954 ;; Defined at:
  1955 ;;		line 75 in file "main.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  currentButto    1   58[BANK1 ] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       0       0       0       0
  1970 ;;      Locals:         0       0       1       0       0
  1971 ;;      Temps:          0       0       2       0       0
  1972 ;;      Totals:         0       0       3       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; Hardware stack levels required when called: 9
  1976 ;; This function calls:
  1977 ;;		_LED_Off
  1978 ;;		_LED_On
  1979 ;;		_SR04_Distance
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985     1594                     _checkPauseButton:	
  1986                           ;psect for function _checkPauseButton
  1987                           
  1988     1594                     l3320:	
  1989                           ;incstack = 0
  1990 ;; hardware stack exceeded
  1991                           ; Regs used in _checkPauseButton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1992                           
  1993                           
  1994                           ;main.c: 77:     unsigned char currentButtonState = PORTD & (1 << 4);
  1995     1594  1283               	bcf	3,5	;RP0=0, select bank0
  1996     1595  1303               	bcf	3,6	;RP1=0, select bank0
  1997     1596  0808               	movf	8,w	;volatile
  1998     1597  1683               	bsf	3,5	;RP0=1, select bank1
  1999     1598  1303               	bcf	3,6	;RP1=0, select bank1
  2000     1599  00DA               	movwf	checkPauseButton@currentButtonState^(0+128)
  2001     159A                     l3322:
  2002     159A  3010               	movlw	16
  2003     159B  05DA               	andwf	checkPauseButton@currentButtonState^(0+128),f
  2004     159C                     l3324:
  2005                           
  2006                           ;main.c: 79:     if (currentButtonState != lastButtonState)
  2007     159C  085A               	movf	checkPauseButton@currentButtonState^(0+128),w
  2008     159D  1283               	bcf	3,5	;RP0=0, select bank0
  2009     159E  1303               	bcf	3,6	;RP1=0, select bank0
  2010     159F  0652               	xorwf	_lastButtonState,w
  2011     15A0  1903               	skipnz
  2012     15A1  2DA3               	goto	u4541
  2013     15A2  2DA4               	goto	u4540
  2014     15A3                     u4541:
  2015     15A3  2DED               	goto	l58
  2016     15A4                     u4540:
  2017     15A4                     l3326:
  2018                           
  2019                           ;main.c: 80:     {;main.c: 81:         _delay((unsigned long)((20)*(12000000/4000.0)));
  2020     15A4  304E               	movlw	78
  2021     15A5  1683               	bsf	3,5	;RP0=1, select bank1
  2022     15A6  1303               	bcf	3,6	;RP1=0, select bank1
  2023     15A7  00D9               	movwf	(??_checkPauseButton^(0+128)+1)
  2024     15A8  30EA               	movlw	234
  2025     15A9  00D8               	movwf	??_checkPauseButton^(0+128)
  2026     15AA                     u5347:
  2027     15AA  0BD8               	decfsz	??_checkPauseButton^(0+128),f
  2028     15AB  2DAA               	goto	u5347
  2029     15AC  0BD9               	decfsz	(??_checkPauseButton^(0+128)+1),f
  2030     15AD  2DAA               	goto	u5347
  2031     15AE  0000               	nop
  2032                           
  2033                           ;main.c: 82:         currentButtonState = PORTD & (1 << 4);
  2034     15AF  1283               	bcf	3,5	;RP0=0, select bank0
  2035     15B0  1303               	bcf	3,6	;RP1=0, select bank0
  2036     15B1  0808               	movf	8,w	;volatile
  2037     15B2  1683               	bsf	3,5	;RP0=1, select bank1
  2038     15B3  1303               	bcf	3,6	;RP1=0, select bank1
  2039     15B4  00DA               	movwf	checkPauseButton@currentButtonState^(0+128)
  2040     15B5                     l3328:
  2041     15B5  3010               	movlw	16
  2042     15B6  05DA               	andwf	checkPauseButton@currentButtonState^(0+128),f
  2043     15B7                     l3330:
  2044                           
  2045                           ;main.c: 84:         if (currentButtonState != lastButtonState)
  2046     15B7  085A               	movf	checkPauseButton@currentButtonState^(0+128),w
  2047     15B8  1283               	bcf	3,5	;RP0=0, select bank0
  2048     15B9  1303               	bcf	3,6	;RP1=0, select bank0
  2049     15BA  0652               	xorwf	_lastButtonState,w
  2050     15BB  1903               	skipnz
  2051     15BC  2DBE               	goto	u4551
  2052     15BD  2DBF               	goto	u4550
  2053     15BE                     u4551:
  2054     15BE  2DED               	goto	l58
  2055     15BF                     u4550:
  2056     15BF                     l3332:
  2057                           
  2058                           ;main.c: 85:         {;main.c: 86:             lastButtonState = currentButtonState;
  2059     15BF  1683               	bsf	3,5	;RP0=1, select bank1
  2060     15C0  1303               	bcf	3,6	;RP1=0, select bank1
  2061     15C1  085A               	movf	checkPauseButton@currentButtonState^(0+128),w
  2062     15C2  1283               	bcf	3,5	;RP0=0, select bank0
  2063     15C3  1303               	bcf	3,6	;RP1=0, select bank0
  2064     15C4  00D2               	movwf	_lastButtonState
  2065     15C5                     l3334:
  2066                           
  2067                           ;main.c: 88:             if (currentButtonState == 0)
  2068     15C5  1683               	bsf	3,5	;RP0=1, select bank1
  2069     15C6  1303               	bcf	3,6	;RP1=0, select bank1
  2070     15C7  085A               	movf	checkPauseButton@currentButtonState^(0+128),w
  2071     15C8  1D03               	btfss	3,2
  2072     15C9  2DCB               	goto	u4561
  2073     15CA  2DCC               	goto	u4560
  2074     15CB                     u4561:
  2075     15CB  2DED               	goto	l58
  2076     15CC                     u4560:
  2077     15CC                     l3336:
  2078                           
  2079                           ;main.c: 89:             {;main.c: 90:                 isPaused = !isPaused;
  2080     15CC  1283               	bcf	3,5	;RP0=0, select bank0
  2081     15CD  1303               	bcf	3,6	;RP1=0, select bank0
  2082     15CE  0853               	movf	_isPaused,w
  2083     15CF  1903               	btfsc	3,2
  2084     15D0  2DD2               	goto	u4571
  2085     15D1  2DD4               	goto	u4570
  2086     15D2                     u4571:
  2087     15D2  3001               	movlw	1
  2088     15D3  2DD5               	goto	u4580
  2089     15D4                     u4570:
  2090     15D4  3000               	movlw	0
  2091     15D5                     u4580:
  2092     15D5  00D3               	movwf	_isPaused
  2093     15D6                     l3338:
  2094                           
  2095                           ;main.c: 93:                 SR04_Distance();
  2096     15D6  120A  158A  2623  160A  118A  	fcall	_SR04_Distance
  2097     15DB                     l3340:
  2098                           
  2099                           ;main.c: 95:                 if (isPaused)
  2100     15DB  1283               	bcf	3,5	;RP0=0, select bank0
  2101     15DC  1303               	bcf	3,6	;RP1=0, select bank0
  2102     15DD  0853               	movf	_isPaused,w
  2103     15DE  1903               	btfsc	3,2
  2104     15DF  2DE1               	goto	u4591
  2105     15E0  2DE2               	goto	u4590
  2106     15E1                     u4591:
  2107     15E1  2DE8               	goto	l3344
  2108     15E2                     u4590:
  2109     15E2                     l3342:
  2110                           
  2111                           ;main.c: 96:                 {;main.c: 98:                     LED_On();
  2112     15E2  160A  118A  2187  160A  118A  	fcall	_LED_On
  2113                           
  2114                           ;main.c: 99:                 }
  2115     15E7  2DED               	goto	l58
  2116     15E8                     l3344:
  2117                           
  2118                           ;main.c: 101:                 {;main.c: 103:                     LED_Off();
  2119     15E8  160A  118A  2190  160A  118A  	fcall	_LED_Off
  2120     15ED                     l58:
  2121     15ED  0008               	return
  2122     15EE                     __end_of_checkPauseButton:
  2123                           
  2124                           	psect	text2
  2125     0E23                     __ptext2:	
  2126 ;; *************** function _SR04_Distance *****************
  2127 ;; Defined at:
  2128 ;;		line 61 in file "HCSR04_lib.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  timeout         2   42[BANK3 ] unsigned int 
  2133 ;;  i               2   46[BANK3 ] int 
  2134 ;;  measurements   40    0[BANK3 ] unsigned int [20]
  2135 ;;  valid_readin    2   44[BANK3 ] unsigned int 
  2136 ;;  sum             2   40[BANK3 ] unsigned int 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       0       0      48       0
  2148 ;;      Temps:          0       0       2       0       0
  2149 ;;      Totals:         0       0       2      48       0
  2150 ;;Total ram usage:       50 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 8
  2153 ;; This function calls:
  2154 ;;		_BUZZER_Beep
  2155 ;;		_BUZZER_MultipleBeeps
  2156 ;;		_LCD_Set_Cursor
  2157 ;;		_LCD_Write_String
  2158 ;;		_SR04_trigger
  2159 ;;		_UART_Write_Text
  2160 ;;		___lwdiv
  2161 ;;		_sprintf
  2162 ;; This function is called by:
  2163 ;;		_checkPauseButton
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167     0E23                     _SR04_Distance:	
  2168                           ;psect for function _SR04_Distance
  2169                           
  2170     0E23                     l2738:	
  2171                           ;incstack = 0
  2172 ;; hardware stack exceeded
  2173                           ; Regs used in _SR04_Distance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2174                           
  2175                           
  2176                           ;HCSR04_lib.c: 63:     unsigned int measurements[20] = {0};
  2177     0E23  3090               	movlw	SR04_Distance@measurements& (0+255)
  2178     0E24  0084               	movwf	4
  2179     0E25  3028               	movlw	40
  2180     0E26  00FF               	movwf	btemp+1
  2181     0E27                     u3290:
  2182     0E27  1783               	bsf	3,7	;select IRP bank3
  2183     0E28  0180               	clrf	0
  2184     0E29  0A84               	incf	4,f
  2185     0E2A  0BFF               	decfsz	btemp+1,f
  2186     0E2B  2E27               	goto	u3290
  2187     0E2C                     l2740:
  2188                           
  2189                           ;HCSR04_lib.c: 64:     unsigned int sum = 0;
  2190     0E2C  1683               	bsf	3,5	;RP0=1, select bank3
  2191     0E2D  1703               	bsf	3,6	;RP1=1, select bank3
  2192     0E2E  01B8               	clrf	SR04_Distance@sum^(0+384)
  2193     0E2F  01B9               	clrf	(SR04_Distance@sum+1)^(0+384)
  2194     0E30                     l2742:
  2195                           
  2196                           ;HCSR04_lib.c: 65:     unsigned int valid_readings = 0;
  2197     0E30  01BC               	clrf	SR04_Distance@valid_readings^(0+384)
  2198     0E31  01BD               	clrf	(SR04_Distance@valid_readings+1)^(0+384)
  2199     0E32                     l2744:
  2200                           
  2201                           ;HCSR04_lib.c: 68:     for (int i = 0; i < 20; i++)
  2202     0E32  01BE               	clrf	SR04_Distance@i^(0+384)
  2203     0E33  01BF               	clrf	(SR04_Distance@i+1)^(0+384)
  2204     0E34                     l2750:
  2205                           
  2206                           ;HCSR04_lib.c: 69:     {;HCSR04_lib.c: 71:         echo_state = 0;
  2207     0E34  1683               	bsf	3,5	;RP0=1, select bank3
  2208     0E35  1703               	bsf	3,6	;RP1=1, select bank3
  2209     0E36  01C4               	clrf	_echo_state^(0+384)	;volatile
  2210                           
  2211                           ;HCSR04_lib.c: 72:         echo_complete = 0;
  2212     0E37  01C5               	clrf	_echo_complete^(0+384)	;volatile
  2213     0E38                     l2752:
  2214                           
  2215                           ;HCSR04_lib.c: 75:         SR04_trigger();
  2216     0E38  160A  118A  22EA  120A  158A  	fcall	_SR04_trigger
  2217     0E3D                     l2754:
  2218                           
  2219                           ;HCSR04_lib.c: 78:         unsigned int timeout = 0;
  2220     0E3D  1683               	bsf	3,5	;RP0=1, select bank3
  2221     0E3E  1703               	bsf	3,6	;RP1=1, select bank3
  2222     0E3F  01BA               	clrf	SR04_Distance@timeout^(0+384)
  2223     0E40  01BB               	clrf	(SR04_Distance@timeout+1)^(0+384)
  2224                           
  2225                           ;HCSR04_lib.c: 79:         while (!echo_complete && timeout < 100)
  2226     0E41  2E55               	goto	l2758
  2227     0E42                     l2756:
  2228                           
  2229                           ;HCSR04_lib.c: 80:         {;HCSR04_lib.c: 81:             _delay((unsigned long)((1)*(1
      +                          2000000/4000.0)));
  2230     0E42  3004               	movlw	4
  2231     0E43  1683               	bsf	3,5	;RP0=1, select bank1
  2232     0E44  1303               	bcf	3,6	;RP1=0, select bank1
  2233     0E45  00D7               	movwf	(??_SR04_Distance^(0+128)+1)
  2234     0E46  30E3               	movlw	227
  2235     0E47  00D6               	movwf	??_SR04_Distance^(0+128)
  2236     0E48                     u5357:
  2237     0E48  0BD6               	decfsz	??_SR04_Distance^(0+128),f
  2238     0E49  2E48               	goto	u5357
  2239     0E4A  0BD7               	decfsz	(??_SR04_Distance^(0+128)+1),f
  2240     0E4B  2E48               	goto	u5357
  2241     0E4C  2E4D               	nop2
  2242                           
  2243                           ;HCSR04_lib.c: 82:             timeout++;
  2244     0E4D  3001               	movlw	1
  2245     0E4E  1683               	bsf	3,5	;RP0=1, select bank3
  2246     0E4F  1703               	bsf	3,6	;RP1=1, select bank3
  2247     0E50  07BA               	addwf	SR04_Distance@timeout^(0+384),f
  2248     0E51  1803               	skipnc
  2249     0E52  0ABB               	incf	(SR04_Distance@timeout+1)^(0+384),f
  2250     0E53  3000               	movlw	0
  2251     0E54  07BB               	addwf	(SR04_Distance@timeout+1)^(0+384),f
  2252     0E55                     l2758:
  2253                           
  2254                           ;HCSR04_lib.c: 79:         while (!echo_complete && timeout < 100)
  2255     0E55  0845               	movf	_echo_complete^(0+384),w	;volatile
  2256     0E56  1D03               	btfss	3,2
  2257     0E57  2E59               	goto	u3301
  2258     0E58  2E5A               	goto	u3300
  2259     0E59                     u3301:
  2260     0E59  2E63               	goto	l2762
  2261     0E5A                     u3300:
  2262     0E5A                     l2760:
  2263     0E5A  3000               	movlw	0
  2264     0E5B  023B               	subwf	(SR04_Distance@timeout+1)^(0+384),w
  2265     0E5C  3064               	movlw	100
  2266     0E5D  1903               	skipnz
  2267     0E5E  023A               	subwf	SR04_Distance@timeout^(0+384),w
  2268     0E5F  1C03               	skipc
  2269     0E60  2E62               	goto	u3311
  2270     0E61  2E63               	goto	u3310
  2271     0E62                     u3311:
  2272     0E62  2E42               	goto	l2756
  2273     0E63                     u3310:
  2274     0E63                     l2762:
  2275                           
  2276                           ;HCSR04_lib.c: 85:         if (echo_complete && last_distance > 0 && last_distance < 450
      +                          )
  2277     0E63  0845               	movf	_echo_complete^(0+384),w	;volatile
  2278     0E64  1903               	btfsc	3,2
  2279     0E65  2E67               	goto	u3321
  2280     0E66  2E68               	goto	u3320
  2281     0E67                     u3321:
  2282     0E67  2E92               	goto	l2774
  2283     0E68                     u3320:
  2284     0E68                     l2764:
  2285     0E68  0840               	movf	_last_distance^(0+384),w	;volatile
  2286     0E69  0441               	iorwf	(_last_distance+1)^(0+384),w	;volatile
  2287     0E6A  1903               	btfsc	3,2
  2288     0E6B  2E6D               	goto	u3331
  2289     0E6C  2E6E               	goto	u3330
  2290     0E6D                     u3331:
  2291     0E6D  2E92               	goto	l2774
  2292     0E6E                     u3330:
  2293     0E6E                     l2766:
  2294     0E6E  3001               	movlw	1
  2295     0E6F  0241               	subwf	(_last_distance+1)^(0+384),w	;volatile
  2296     0E70  30C2               	movlw	194
  2297     0E71  1903               	skipnz
  2298     0E72  0240               	subwf	_last_distance^(0+384),w	;volatile
  2299     0E73  1803               	skipnc
  2300     0E74  2E76               	goto	u3341
  2301     0E75  2E77               	goto	u3340
  2302     0E76                     u3341:
  2303     0E76  2E92               	goto	l2774
  2304     0E77                     u3340:
  2305     0E77                     l2768:
  2306                           
  2307                           ;HCSR04_lib.c: 86:         {;HCSR04_lib.c: 88:             measurements[i] = last_distan
      +                          ce;
  2308     0E77  083E               	movf	SR04_Distance@i^(0+384),w
  2309     0E78  1683               	bsf	3,5	;RP0=1, select bank1
  2310     0E79  1303               	bcf	3,6	;RP1=0, select bank1
  2311     0E7A  00D6               	movwf	??_SR04_Distance^(0+128)
  2312     0E7B  0756               	addwf	??_SR04_Distance^(0+128),w
  2313     0E7C  3E90               	addlw	(low (SR04_Distance@measurements| (0+256)))& (0+255)
  2314     0E7D  0084               	movwf	4
  2315     0E7E  1683               	bsf	3,5	;RP0=1, select bank3
  2316     0E7F  1703               	bsf	3,6	;RP1=1, select bank3
  2317     0E80  0840               	movf	_last_distance^(0+384),w	;volatile
  2318     0E81  1783               	bsf	3,7	;select IRP bank3
  2319     0E82  0080               	movwf	0
  2320     0E83  0A84               	incf	4,f
  2321     0E84  0841               	movf	(_last_distance+1)^(0+384),w	;volatile
  2322     0E85  0080               	movwf	0
  2323     0E86                     l2770:
  2324                           
  2325                           ;HCSR04_lib.c: 89:             sum += last_distance;
  2326     0E86  0840               	movf	_last_distance^(0+384),w	;volatile
  2327     0E87  07B8               	addwf	SR04_Distance@sum^(0+384),f
  2328     0E88  1803               	skipnc
  2329     0E89  0AB9               	incf	(SR04_Distance@sum+1)^(0+384),f
  2330     0E8A  0841               	movf	(_last_distance+1)^(0+384),w	;volatile
  2331     0E8B  07B9               	addwf	(SR04_Distance@sum+1)^(0+384),f
  2332     0E8C                     l2772:
  2333                           
  2334                           ;HCSR04_lib.c: 90:             valid_readings++;
  2335     0E8C  3001               	movlw	1
  2336     0E8D  07BC               	addwf	SR04_Distance@valid_readings^(0+384),f
  2337     0E8E  1803               	skipnc
  2338     0E8F  0ABD               	incf	(SR04_Distance@valid_readings+1)^(0+384),f
  2339     0E90  3000               	movlw	0
  2340     0E91  07BD               	addwf	(SR04_Distance@valid_readings+1)^(0+384),f
  2341     0E92                     l2774:
  2342                           
  2343                           ;HCSR04_lib.c: 94:         _delay((unsigned long)((20)*(12000000/4000.0)));
  2344     0E92  304E               	movlw	78
  2345     0E93  1683               	bsf	3,5	;RP0=1, select bank1
  2346     0E94  1303               	bcf	3,6	;RP1=0, select bank1
  2347     0E95  00D7               	movwf	(??_SR04_Distance^(0+128)+1)
  2348     0E96  30EA               	movlw	234
  2349     0E97  00D6               	movwf	??_SR04_Distance^(0+128)
  2350     0E98                     u5367:
  2351     0E98  0BD6               	decfsz	??_SR04_Distance^(0+128),f
  2352     0E99  2E98               	goto	u5367
  2353     0E9A  0BD7               	decfsz	(??_SR04_Distance^(0+128)+1),f
  2354     0E9B  2E98               	goto	u5367
  2355     0E9C  0000               	nop
  2356     0E9D                     l2776:
  2357                           
  2358                           ;HCSR04_lib.c: 95:     }
  2359     0E9D  3001               	movlw	1
  2360     0E9E  1683               	bsf	3,5	;RP0=1, select bank3
  2361     0E9F  1703               	bsf	3,6	;RP1=1, select bank3
  2362     0EA0  07BE               	addwf	SR04_Distance@i^(0+384),f
  2363     0EA1  1803               	skipnc
  2364     0EA2  0ABF               	incf	(SR04_Distance@i+1)^(0+384),f
  2365     0EA3  3000               	movlw	0
  2366     0EA4  07BF               	addwf	(SR04_Distance@i+1)^(0+384),f
  2367     0EA5                     l2778:
  2368     0EA5  083F               	movf	(SR04_Distance@i+1)^(0+384),w
  2369     0EA6  3A80               	xorlw	128
  2370     0EA7  00FF               	movwf	btemp+1
  2371     0EA8  3080               	movlw	128
  2372     0EA9  027F               	subwf	btemp+1,w
  2373     0EAA  1D03               	skipz
  2374     0EAB  2EAE               	goto	u3355
  2375     0EAC  3014               	movlw	20
  2376     0EAD  023E               	subwf	SR04_Distance@i^(0+384),w
  2377     0EAE                     u3355:
  2378     0EAE  1C03               	skipc
  2379     0EAF  2EB1               	goto	u3351
  2380     0EB0  2EB2               	goto	u3350
  2381     0EB1                     u3351:
  2382     0EB1  2E34               	goto	l2750
  2383     0EB2                     u3350:
  2384     0EB2                     l2780:
  2385                           
  2386                           ;HCSR04_lib.c: 98:     if (valid_readings > 0)
  2387     0EB2  1683               	bsf	3,5	;RP0=1, select bank3
  2388     0EB3  1703               	bsf	3,6	;RP1=1, select bank3
  2389     0EB4  083C               	movf	SR04_Distance@valid_readings^(0+384),w
  2390     0EB5  043D               	iorwf	(SR04_Distance@valid_readings+1)^(0+384),w
  2391     0EB6  1903               	btfsc	3,2
  2392     0EB7  2EB9               	goto	u3361
  2393     0EB8  2EBA               	goto	u3360
  2394     0EB9                     u3361:
  2395     0EB9  2EE2               	goto	l2784
  2396     0EBA                     u3360:
  2397     0EBA                     l2782:
  2398                           
  2399                           ;HCSR04_lib.c: 99:     {;HCSR04_lib.c: 100:         distn = sum / valid_readings;
  2400     0EBA  083D               	movf	(SR04_Distance@valid_readings+1)^(0+384),w
  2401     0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  2402     0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  2403     0EBD  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  2404     0EBE  1683               	bsf	3,5	;RP0=1, select bank3
  2405     0EBF  1703               	bsf	3,6	;RP1=1, select bank3
  2406     0EC0  083C               	movf	SR04_Distance@valid_readings^(0+384),w
  2407     0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  2408     0EC2  1303               	bcf	3,6	;RP1=0, select bank1
  2409     0EC3  00A0               	movwf	___lwdiv@divisor^(0+128)
  2410     0EC4  1683               	bsf	3,5	;RP0=1, select bank3
  2411     0EC5  1703               	bsf	3,6	;RP1=1, select bank3
  2412     0EC6  0839               	movf	(SR04_Distance@sum+1)^(0+384),w
  2413     0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  2414     0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  2415     0EC9  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2416     0ECA  1683               	bsf	3,5	;RP0=1, select bank3
  2417     0ECB  1703               	bsf	3,6	;RP1=1, select bank3
  2418     0ECC  0838               	movf	SR04_Distance@sum^(0+384),w
  2419     0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  2420     0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  2421     0ECF  00A2               	movwf	___lwdiv@dividend^(0+128)
  2422     0ED0  120A  118A  27AF  120A  158A  	fcall	___lwdiv
  2423     0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  2424     0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  2425     0ED7  0821               	movf	(?___lwdiv+1)^(0+128),w
  2426     0ED8  1683               	bsf	3,5	;RP0=1, select bank3
  2427     0ED9  1703               	bsf	3,6	;RP1=1, select bank3
  2428     0EDA  00C3               	movwf	(_distn+1)^(0+384)
  2429     0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  2430     0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  2431     0EDD  0820               	movf	?___lwdiv^(0+128),w
  2432     0EDE  1683               	bsf	3,5	;RP0=1, select bank3
  2433     0EDF  1703               	bsf	3,6	;RP1=1, select bank3
  2434     0EE0  00C2               	movwf	_distn^(0+384)
  2435                           
  2436                           ;HCSR04_lib.c: 101:     }
  2437     0EE1  2EE4               	goto	l2786
  2438     0EE2                     l2784:
  2439                           
  2440                           ;HCSR04_lib.c: 103:     {;HCSR04_lib.c: 105:         distn = 0;
  2441     0EE2  01C2               	clrf	_distn^(0+384)
  2442     0EE3  01C3               	clrf	(_distn+1)^(0+384)
  2443     0EE4                     l2786:
  2444                           
  2445                           ;HCSR04_lib.c: 109:     if (distn > 350)
  2446     0EE4  0843               	movf	(_distn+1)^(0+384),w
  2447     0EE5  3A80               	xorlw	128
  2448     0EE6  00FF               	movwf	btemp+1
  2449     0EE7  3081               	movlw	129
  2450     0EE8  027F               	subwf	btemp+1,w
  2451     0EE9  1D03               	skipz
  2452     0EEA  2EED               	goto	u3375
  2453     0EEB  305F               	movlw	95
  2454     0EEC  0242               	subwf	_distn^(0+384),w
  2455     0EED                     u3375:
  2456     0EED  1C03               	skipc
  2457     0EEE  2EF0               	goto	u3371
  2458     0EEF  2EF1               	goto	u3370
  2459     0EF0                     u3371:
  2460     0EF0  2EF7               	goto	l2790
  2461     0EF1                     u3370:
  2462     0EF1                     l2788:
  2463                           
  2464                           ;HCSR04_lib.c: 110:     {;HCSR04_lib.c: 111:         distn = 350;
  2465     0EF1  305E               	movlw	94
  2466     0EF2  1683               	bsf	3,5	;RP0=1, select bank3
  2467     0EF3  1703               	bsf	3,6	;RP1=1, select bank3
  2468     0EF4  00C2               	movwf	_distn^(0+384)
  2469     0EF5  3001               	movlw	1
  2470     0EF6  00C3               	movwf	(_distn^(0+384)+1)
  2471     0EF7                     l2790:
  2472                           
  2473                           ;HCSR04_lib.c: 115:     LCD_Set_Cursor(2, 1);
  2474     0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  2475     0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  2476     0EF9  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  2477     0EFA  0AA6               	incf	LCD_Set_Cursor@COL^(0+128),f
  2478     0EFB  3002               	movlw	2
  2479     0EFC  160A  118A  240C  120A  158A  	fcall	_LCD_Set_Cursor
  2480     0F01                     l2792:
  2481                           
  2482                           ;HCSR04_lib.c: 116:     LCD_Write_String("                   ");
  2483     0F01  307B               	movlw	low (STR_6| (0+32768))
  2484     0F02  1683               	bsf	3,5	;RP0=1, select bank1
  2485     0F03  1303               	bcf	3,6	;RP1=0, select bank1
  2486     0F04  00A6               	movwf	LCD_Write_String@Str^(0+128)
  2487     0F05  3090               	movlw	high (STR_6| (0+32768))
  2488     0F06  00A7               	movwf	(LCD_Write_String@Str^(0+128)+1)
  2489     0F07  160A  118A  24E7  120A  158A  	fcall	_LCD_Write_String
  2490     0F0C                     l2794:
  2491                           
  2492                           ;HCSR04_lib.c: 118:     if (distn == 0)
  2493     0F0C  1683               	bsf	3,5	;RP0=1, select bank3
  2494     0F0D  1703               	bsf	3,6	;RP1=1, select bank3
  2495     0F0E  0842               	movf	_distn^(0+384),w
  2496     0F0F  0443               	iorwf	(_distn+1)^(0+384),w
  2497     0F10  1D03               	btfss	3,2
  2498     0F11  2F13               	goto	u3381
  2499     0F12  2F14               	goto	u3380
  2500     0F13                     u3381:
  2501     0F13  2F40               	goto	l2804
  2502     0F14                     u3380:
  2503     0F14                     l2796:
  2504                           
  2505                           ;HCSR04_lib.c: 119:     {;HCSR04_lib.c: 120:         LCD_Set_Cursor(2, 1);
  2506     0F14  1683               	bsf	3,5	;RP0=1, select bank1
  2507     0F15  1303               	bcf	3,6	;RP1=0, select bank1
  2508     0F16  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  2509     0F17  0AA6               	incf	LCD_Set_Cursor@COL^(0+128),f
  2510     0F18  3002               	movlw	2
  2511     0F19  160A  118A  240C  120A  158A  	fcall	_LCD_Set_Cursor
  2512     0F1E                     l2798:
  2513                           
  2514                           ;HCSR04_lib.c: 121:         LCD_Write_String("No reading");
  2515     0F1E  30E7               	movlw	low (STR_7| (0+32768))
  2516     0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  2517     0F20  1303               	bcf	3,6	;RP1=0, select bank1
  2518     0F21  00A6               	movwf	LCD_Write_String@Str^(0+128)
  2519     0F22  3090               	movlw	high (STR_7| (0+32768))
  2520     0F23  00A7               	movwf	(LCD_Write_String@Str^(0+128)+1)
  2521     0F24  160A  118A  24E7  120A  158A  	fcall	_LCD_Write_String
  2522     0F29                     l2800:
  2523                           
  2524                           ;HCSR04_lib.c: 122:         UART_Write_Text("Error: No reading\r\n");
  2525     0F29  3067               	movlw	low (STR_8| (0+32768))
  2526     0F2A  1683               	bsf	3,5	;RP0=1, select bank1
  2527     0F2B  1303               	bcf	3,6	;RP1=0, select bank1
  2528     0F2C  00A1               	movwf	UART_Write_Text@text^(0+128)
  2529     0F2D  3090               	movlw	high (STR_8| (0+32768))
  2530     0F2E  00A2               	movwf	(UART_Write_Text@text^(0+128)+1)
  2531     0F2F  160A  118A  246D  120A  158A  	fcall	_UART_Write_Text
  2532     0F34                     l2802:
  2533                           
  2534                           ;HCSR04_lib.c: 123:         BUZZER_Beep(500);
  2535     0F34  30F4               	movlw	244
  2536     0F35  1683               	bsf	3,5	;RP0=1, select bank1
  2537     0F36  1303               	bcf	3,6	;RP1=0, select bank1
  2538     0F37  00A6               	movwf	BUZZER_Beep@duration^(0+128)
  2539     0F38  3001               	movlw	1
  2540     0F39  00A7               	movwf	(BUZZER_Beep@duration^(0+128)+1)
  2541     0F3A  160A  118A  22FF  120A  158A  	fcall	_BUZZER_Beep
  2542                           
  2543                           ;HCSR04_lib.c: 124:     }
  2544     0F3F  2FFF               	goto	l156
  2545     0F40                     l2804:
  2546                           
  2547                           ;HCSR04_lib.c: 126:     {;HCSR04_lib.c: 127:         sprintf(out, "Distance = %d cm", di
      +                          stn);
  2548     0F40  30C6               	movlw	(low (_out| (0+256)))& (0+255)
  2549     0F41  1683               	bsf	3,5	;RP0=1, select bank1
  2550     0F42  1303               	bcf	3,6	;RP1=0, select bank1
  2551     0F43  00C4               	movwf	sprintf@s^(0+128)
  2552     0F44  30C7               	movlw	low (STR_9| (0+32768))
  2553     0F45  00C5               	movwf	sprintf@fmt^(0+128)
  2554     0F46  3090               	movlw	high (STR_9| (0+32768))
  2555     0F47  00C6               	movwf	(sprintf@fmt^(0+128)+1)
  2556     0F48  1683               	bsf	3,5	;RP0=1, select bank3
  2557     0F49  1703               	bsf	3,6	;RP1=1, select bank3
  2558     0F4A  0843               	movf	(_distn+1)^(0+384),w
  2559     0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  2560     0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  2561     0F4D  00C8               	movwf	((?_sprintf+1)^(0+128)+3)
  2562     0F4E  1683               	bsf	3,5	;RP0=1, select bank3
  2563     0F4F  1703               	bsf	3,6	;RP1=1, select bank3
  2564     0F50  0842               	movf	_distn^(0+384),w
  2565     0F51  1683               	bsf	3,5	;RP0=1, select bank1
  2566     0F52  1303               	bcf	3,6	;RP1=0, select bank1
  2567     0F53  00C7               	movwf	(?_sprintf^(0+128)+3)
  2568     0F54  160A  118A  23BE  120A  158A  	fcall	_sprintf
  2569     0F59                     l2806:
  2570                           
  2571                           ;HCSR04_lib.c: 128:         LCD_Set_Cursor(2, 1);
  2572     0F59  1683               	bsf	3,5	;RP0=1, select bank1
  2573     0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  2574     0F5B  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  2575     0F5C  0AA6               	incf	LCD_Set_Cursor@COL^(0+128),f
  2576     0F5D  3002               	movlw	2
  2577     0F5E  160A  118A  240C  120A  158A  	fcall	_LCD_Set_Cursor
  2578     0F63                     l2808:
  2579                           
  2580                           ;HCSR04_lib.c: 129:         LCD_Write_String(out);
  2581     0F63  30C6               	movlw	(low (_out| (0+256)))& (0+255)
  2582     0F64  1683               	bsf	3,5	;RP0=1, select bank1
  2583     0F65  1303               	bcf	3,6	;RP1=0, select bank1
  2584     0F66  00A6               	movwf	LCD_Write_String@Str^(0+128)
  2585     0F67  3001               	movlw	1
  2586     0F68  00A7               	movwf	(LCD_Write_String@Str+1)^(0+128)
  2587     0F69  160A  118A  24E7  120A  158A  	fcall	_LCD_Write_String
  2588     0F6E                     l2810:
  2589                           
  2590                           ;HCSR04_lib.c: 130:         UART_Write_Text(out);
  2591     0F6E  30C6               	movlw	(low (_out| (0+256)))& (0+255)
  2592     0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  2593     0F70  1303               	bcf	3,6	;RP1=0, select bank1
  2594     0F71  00A1               	movwf	UART_Write_Text@text^(0+128)
  2595     0F72  3001               	movlw	1
  2596     0F73  00A2               	movwf	(UART_Write_Text@text+1)^(0+128)
  2597     0F74  160A  118A  246D  120A  158A  	fcall	_UART_Write_Text
  2598     0F79                     l2812:
  2599                           
  2600                           ;HCSR04_lib.c: 131:         UART_Write_Text("\r\n");
  2601     0F79  3078               	movlw	low ((STR_8+17)| (0+32768))
  2602     0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  2603     0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  2604     0F7C  00A1               	movwf	UART_Write_Text@text^(0+128)
  2605     0F7D  3090               	movlw	high ((STR_8+17)| (0+32768))
  2606     0F7E  00A2               	movwf	(UART_Write_Text@text^(0+128)+1)
  2607     0F7F  160A  118A  246D  120A  158A  	fcall	_UART_Write_Text
  2608     0F84                     l2814:
  2609                           
  2610                           ;HCSR04_lib.c: 134:         if (distn > 380)
  2611     0F84  1683               	bsf	3,5	;RP0=1, select bank3
  2612     0F85  1703               	bsf	3,6	;RP1=1, select bank3
  2613     0F86  0843               	movf	(_distn+1)^(0+384),w
  2614     0F87  3A80               	xorlw	128
  2615     0F88  00FF               	movwf	btemp+1
  2616     0F89  3081               	movlw	129
  2617     0F8A  027F               	subwf	btemp+1,w
  2618     0F8B  1D03               	skipz
  2619     0F8C  2F8F               	goto	u3395
  2620     0F8D  307D               	movlw	125
  2621     0F8E  0242               	subwf	_distn^(0+384),w
  2622     0F8F                     u3395:
  2623     0F8F  1C03               	skipc
  2624     0F90  2F92               	goto	u3391
  2625     0F91  2F93               	goto	u3390
  2626     0F92                     u3391:
  2627     0F92  2FB4               	goto	l2822
  2628     0F93                     u3390:
  2629     0F93                     l2816:
  2630                           
  2631                           ;HCSR04_lib.c: 135:         {;HCSR04_lib.c: 136:             LCD_Set_Cursor(2, 1);
  2632     0F93  1683               	bsf	3,5	;RP0=1, select bank1
  2633     0F94  1303               	bcf	3,6	;RP1=0, select bank1
  2634     0F95  01A6               	clrf	LCD_Set_Cursor@COL^(0+128)
  2635     0F96  0AA6               	incf	LCD_Set_Cursor@COL^(0+128),f
  2636     0F97  3002               	movlw	2
  2637     0F98  160A  118A  240C  120A  158A  	fcall	_LCD_Set_Cursor
  2638     0F9D                     l2818:
  2639                           
  2640                           ;HCSR04_lib.c: 137:             LCD_Write_String("Distance: Max range");
  2641     0F9D  308F               	movlw	low (STR_11| (0+32768))
  2642     0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  2643     0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  2644     0FA0  00A6               	movwf	LCD_Write_String@Str^(0+128)
  2645     0FA1  3090               	movlw	high (STR_11| (0+32768))
  2646     0FA2  00A7               	movwf	(LCD_Write_String@Str^(0+128)+1)
  2647     0FA3  160A  118A  24E7  120A  158A  	fcall	_LCD_Write_String
  2648     0FA8                     l2820:
  2649                           
  2650                           ;HCSR04_lib.c: 138:             BUZZER_Beep(300);
  2651     0FA8  302C               	movlw	44
  2652     0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  2653     0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  2654     0FAB  00A6               	movwf	BUZZER_Beep@duration^(0+128)
  2655     0FAC  3001               	movlw	1
  2656     0FAD  00A7               	movwf	(BUZZER_Beep@duration^(0+128)+1)
  2657     0FAE  160A  118A  22FF  120A  158A  	fcall	_BUZZER_Beep
  2658                           
  2659                           ;HCSR04_lib.c: 139:         }
  2660     0FB3  2FFF               	goto	l156
  2661     0FB4                     l2822:
  2662     0FB4  1683               	bsf	3,5	;RP0=1, select bank3
  2663     0FB5  1703               	bsf	3,6	;RP1=1, select bank3
  2664     0FB6  0843               	movf	(_distn+1)^(0+384),w
  2665     0FB7  3A80               	xorlw	128
  2666     0FB8  00FF               	movwf	btemp+1
  2667     0FB9  3080               	movlw	128
  2668     0FBA  027F               	subwf	btemp+1,w
  2669     0FBB  1D03               	skipz
  2670     0FBC  2FBF               	goto	u3405
  2671     0FBD  300A               	movlw	10
  2672     0FBE  0242               	subwf	_distn^(0+384),w
  2673     0FBF                     u3405:
  2674     0FBF  1803               	skipnc
  2675     0FC0  2FC2               	goto	u3401
  2676     0FC1  2FC3               	goto	u3400
  2677     0FC2                     u3401:
  2678     0FC2  2FD4               	goto	l2826
  2679     0FC3                     u3400:
  2680     0FC3                     l2824:
  2681                           
  2682                           ;HCSR04_lib.c: 141:         {;HCSR04_lib.c: 142:             BUZZER_MultipleBeeps(3, 100
      +                          , 100);
  2683     0FC3  3064               	movlw	100
  2684     0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  2685     0FC5  1303               	bcf	3,6	;RP1=0, select bank1
  2686     0FC6  00A6               	movwf	BUZZER_MultipleBeeps@beep_duration^(0+128)
  2687     0FC7  3000               	movlw	0
  2688     0FC8  00A7               	movwf	(BUZZER_MultipleBeeps@beep_duration^(0+128)+1)
  2689     0FC9  3064               	movlw	100
  2690     0FCA  00A8               	movwf	BUZZER_MultipleBeeps@pause_duration^(0+128)
  2691     0FCB  3000               	movlw	0
  2692     0FCC  00A9               	movwf	(BUZZER_MultipleBeeps@pause_duration^(0+128)+1)
  2693     0FCD  3003               	movlw	3
  2694     0FCE  160A  118A  24A3  120A  158A  	fcall	_BUZZER_MultipleBeeps
  2695                           
  2696                           ;HCSR04_lib.c: 143:         }
  2697     0FD3  2FFF               	goto	l156
  2698     0FD4                     l2826:
  2699     0FD4  1683               	bsf	3,5	;RP0=1, select bank3
  2700     0FD5  1703               	bsf	3,6	;RP1=1, select bank3
  2701     0FD6  0843               	movf	(_distn+1)^(0+384),w
  2702     0FD7  3A80               	xorlw	128
  2703     0FD8  00FF               	movwf	btemp+1
  2704     0FD9  3080               	movlw	128
  2705     0FDA  027F               	subwf	btemp+1,w
  2706     0FDB  1D03               	skipz
  2707     0FDC  2FDF               	goto	u3415
  2708     0FDD  301E               	movlw	30
  2709     0FDE  0242               	subwf	_distn^(0+384),w
  2710     0FDF                     u3415:
  2711     0FDF  1803               	skipnc
  2712     0FE0  2FE2               	goto	u3411
  2713     0FE1  2FE3               	goto	u3410
  2714     0FE2                     u3411:
  2715     0FE2  2FF4               	goto	l2830
  2716     0FE3                     u3410:
  2717     0FE3                     l2828:
  2718                           
  2719                           ;HCSR04_lib.c: 145:         {;HCSR04_lib.c: 146:             BUZZER_MultipleBeeps(2, 200
      +                          , 100);
  2720     0FE3  30C8               	movlw	200
  2721     0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0FE6  00A6               	movwf	BUZZER_MultipleBeeps@beep_duration^(0+128)
  2724     0FE7  3000               	movlw	0
  2725     0FE8  00A7               	movwf	(BUZZER_MultipleBeeps@beep_duration^(0+128)+1)
  2726     0FE9  3064               	movlw	100
  2727     0FEA  00A8               	movwf	BUZZER_MultipleBeeps@pause_duration^(0+128)
  2728     0FEB  3000               	movlw	0
  2729     0FEC  00A9               	movwf	(BUZZER_MultipleBeeps@pause_duration^(0+128)+1)
  2730     0FED  3002               	movlw	2
  2731     0FEE  160A  118A  24A3  120A  158A  	fcall	_BUZZER_MultipleBeeps
  2732                           
  2733                           ;HCSR04_lib.c: 147:         }
  2734     0FF3  2FFF               	goto	l156
  2735     0FF4                     l2830:
  2736                           
  2737                           ;HCSR04_lib.c: 149:         {;HCSR04_lib.c: 150:             BUZZER_Beep(150);
  2738     0FF4  3096               	movlw	150
  2739     0FF5  1683               	bsf	3,5	;RP0=1, select bank1
  2740     0FF6  1303               	bcf	3,6	;RP1=0, select bank1
  2741     0FF7  00A6               	movwf	BUZZER_Beep@duration^(0+128)
  2742     0FF8  3000               	movlw	0
  2743     0FF9  00A7               	movwf	(BUZZER_Beep@duration^(0+128)+1)
  2744     0FFA  160A  118A  22FF  120A  158A  	fcall	_BUZZER_Beep
  2745     0FFF                     l156:
  2746     0FFF  0008               	return
  2747     1000                     __end_of_SR04_Distance:
  2748                           
  2749                           	psect	text3
  2750     13BE                     __ptext3:	
  2751 ;; *************** function _sprintf *****************
  2752 ;; Defined at:
  2753 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  s               1   36[BANK1 ] PTR unsigned char 
  2756 ;;		 -> out(20), 
  2757 ;;  fmt             2   37[BANK1 ] PTR const unsigned char 
  2758 ;;		 -> STR_9(17), 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  f              11   43[BANK1 ] struct _IO_FILE
  2761 ;;  ret             2    0        int 
  2762 ;;  ap              1   42[BANK1 ] PTR void [1]
  2763 ;;		 -> ?_sprintf(2), 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2   36[BANK1 ] int 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       5       0       0
  2774 ;;      Locals:         0       0      12       0       0
  2775 ;;      Temps:          0       0       1       0       0
  2776 ;;      Totals:         0       0      18       0       0
  2777 ;;Total ram usage:       18 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 6
  2780 ;; This function calls:
  2781 ;;		_vfprintf
  2782 ;; This function is called by:
  2783 ;;		_SR04_Distance
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787     13BE                     _sprintf:	
  2788                           ;psect for function _sprintf
  2789                           
  2790     13BE                     l2668:	
  2791                           ;incstack = 0
  2792 ;; hardware stack exceeded
  2793                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2794                           
  2795     13BE  30C7               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2796     13BF  1683               	bsf	3,5	;RP0=1, select bank1
  2797     13C0  1303               	bcf	3,6	;RP1=0, select bank1
  2798     13C1  00CA               	movwf	sprintf@ap^(0+128)
  2799     13C2                     l2670:
  2800     13C2  0844               	movf	sprintf@s^(0+128),w
  2801     13C3  00CB               	movwf	sprintf@f^(0+128)
  2802     13C4  3001               	movlw	1
  2803     13C5  00CC               	movwf	(sprintf@f+1)^(0+128)
  2804     13C6                     l2672:
  2805     13C6  01CD               	clrf	(sprintf@f^(0+128)+2)
  2806     13C7  01CE               	clrf	((sprintf@f+1)^(0+128)+2)
  2807     13C8                     l2674:
  2808     13C8  01D4               	clrf	(sprintf@f^(0+128)+9)
  2809     13C9  01D5               	clrf	((sprintf@f+1)^(0+128)+9)
  2810     13CA                     l2676:
  2811     13CA  30CB               	movlw	low sprintf@f
  2812     13CB  00BD               	movwf	vfprintf@fp^(0+128)
  2813     13CC  3000               	movlw	high sprintf@f
  2814     13CD  00BE               	movwf	(vfprintf@fp^(0+128)+1)
  2815     13CE  0845               	movf	sprintf@fmt^(0+128),w
  2816     13CF  00BF               	movwf	vfprintf@fmt^(0+128)
  2817     13D0  0846               	movf	(sprintf@fmt+1)^(0+128),w
  2818     13D1  00C0               	movwf	(vfprintf@fmt+1)^(0+128)
  2819     13D2  30CA               	movlw	(low (sprintf@ap| 0))& (0+255)
  2820     13D3  00C1               	movwf	vfprintf@ap^(0+128)
  2821     13D4  160A  118A  243C  160A  118A  	fcall	_vfprintf
  2822     13D9                     l2678:
  2823     13D9  1683               	bsf	3,5	;RP0=1, select bank1
  2824     13DA  1303               	bcf	3,6	;RP1=0, select bank1
  2825     13DB  084D               	movf	(sprintf@f^(0+128)+2),w
  2826     13DC  0744               	addwf	sprintf@s^(0+128),w
  2827     13DD  00C9               	movwf	??_sprintf^(0+128)
  2828     13DE  0849               	movf	??_sprintf^(0+128),w
  2829     13DF  0084               	movwf	4
  2830     13E0  1783               	bsf	3,7	;select IRP bank2
  2831     13E1  0180               	clrf	0
  2832     13E2                     l924:
  2833     13E2  0008               	return
  2834     13E3                     __end_of_sprintf:
  2835                           
  2836                           	psect	text4
  2837     143C                     __ptext4:	
  2838 ;; *************** function _vfprintf *****************
  2839 ;; Defined at:
  2840 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  fp              2   29[BANK1 ] PTR struct _IO_FILE
  2843 ;;		 -> sprintf@f(11), 
  2844 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  2845 ;;		 -> STR_9(17), 
  2846 ;;  ap              1   33[BANK1 ] PTR PTR void 
  2847 ;;		 -> sprintf@ap(1), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  cfmt            2   34[BANK1 ] PTR unsigned char 
  2850 ;;		 -> STR_9(17), 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  2   29[BANK1 ] int 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       5       0       0
  2861 ;;      Locals:         0       0       2       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       0       7       0       0
  2864 ;;Total ram usage:        7 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 5
  2867 ;; This function calls:
  2868 ;;		_vfpfcnvrt
  2869 ;; This function is called by:
  2870 ;;		_sprintf
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874     143C                     _vfprintf:	
  2875                           ;psect for function _vfprintf
  2876                           
  2877     143C                     l2614:	
  2878                           ;incstack = 0
  2879 ;; hardware stack exceeded
  2880                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2881                           
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2884     143C  1683               	bsf	3,5	;RP0=1, select bank1
  2885     143D  1303               	bcf	3,6	;RP1=0, select bank1
  2886     143E  083F               	movf	vfprintf@fmt^(0+128),w
  2887     143F  00C2               	movwf	vfprintf@cfmt^(0+128)
  2888     1440  0840               	movf	(vfprintf@fmt+1)^(0+128),w
  2889     1441  00C3               	movwf	(vfprintf@cfmt+1)^(0+128)
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2892     1442  2C52               	goto	l2618
  2893     1443                     l2616:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2896     1443  1683               	bsf	3,5	;RP0=1, select bank1
  2897     1444  1303               	bcf	3,6	;RP1=0, select bank1
  2898     1445  083D               	movf	vfprintf@fp^(0+128),w
  2899     1446  00AD               	movwf	vfpfcnvrt@fp^(0+128)
  2900     1447  083E               	movf	(vfprintf@fp+1)^(0+128),w
  2901     1448  00AE               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  2902     1449  30C2               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2903     144A  00AF               	movwf	vfpfcnvrt@fmt^(0+128)
  2904     144B  0841               	movf	vfprintf@ap^(0+128),w
  2905     144C  00B0               	movwf	vfpfcnvrt@ap^(0+128)
  2906     144D  120A  118A  2671  160A  118A  	fcall	_vfpfcnvrt
  2907     1452                     l2618:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2910     1452  1683               	bsf	3,5	;RP0=1, select bank1
  2911     1453  1303               	bcf	3,6	;RP1=0, select bank1
  2912     1454  0843               	movf	(vfprintf@cfmt+1)^(0+128),w
  2913     1455  1283               	bcf	3,5	;RP0=0, select bank0
  2914     1456  1303               	bcf	3,6	;RP1=0, select bank0
  2915     1457  00FF               	movwf	btemp+1
  2916     1458  1683               	bsf	3,5	;RP0=1, select bank1
  2917     1459  1303               	bcf	3,6	;RP1=0, select bank1
  2918     145A  0842               	movf	vfprintf@cfmt^(0+128),w
  2919     145B  0084               	movwf	4
  2920     145C  1283               	bcf	3,5	;RP0=0, select bank0
  2921     145D  1303               	bcf	3,6	;RP1=0, select bank0
  2922     145E  160A  118A  2100  160A  118A  	fcall	stringtab
  2923     1463  3A00               	xorlw	0
  2924     1464  1D03               	skipz
  2925     1465  2C67               	goto	u3121
  2926     1466  2C68               	goto	u3120
  2927     1467                     u3121:
  2928     1467  2C43               	goto	l2616
  2929     1468                     u3120:
  2930     1468                     l2620:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2933     1468  1683               	bsf	3,5	;RP0=1, select bank1
  2934     1469  1303               	bcf	3,6	;RP1=0, select bank1
  2935     146A  01BD               	clrf	?_vfprintf^(0+128)
  2936     146B  01BE               	clrf	(?_vfprintf+1)^(0+128)
  2937     146C                     l968:
  2938     146C  0008               	return
  2939     146D                     __end_of_vfprintf:
  2940                           
  2941                           	psect	text5
  2942     0671                     __ptext5:	
  2943 ;; *************** function _vfpfcnvrt *****************
  2944 ;; Defined at:
  2945 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
  2948 ;;		 -> sprintf@f(11), 
  2949 ;;  fmt             1   15[BANK1 ] PTR PTR unsigned char 
  2950 ;;		 -> vfprintf@cfmt(2), 
  2951 ;;  ap              1   16[BANK1 ] PTR PTR void 
  2952 ;;		 -> sprintf@ap(1), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  convarg         4   24[BANK1 ] struct .
  2955 ;;  cp              2   22[BANK1 ] PTR unsigned char 
  2956 ;;		 -> STR_9(17), 
  2957 ;;  c               1   28[BANK1 ] unsigned char 
  2958 ;;  done            1   21[BANK1 ] _Bool 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2968 ;;      Params:         0       0       4       0       0
  2969 ;;      Locals:         0       0       8       0       0
  2970 ;;      Temps:          0       0       4       0       0
  2971 ;;      Totals:         0       0      16       0       0
  2972 ;;Total ram usage:       16 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 4
  2975 ;; This function calls:
  2976 ;;		___awdiv
  2977 ;;		___awmod
  2978 ;;		_abs
  2979 ;;		_fputc
  2980 ;; This function is called by:
  2981 ;;		_vfprintf
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985     0671                     _vfpfcnvrt:	
  2986                           ;psect for function _vfpfcnvrt
  2987                           
  2988     0671                     l2538:	
  2989                           ;incstack = 0
  2990 ;; hardware stack exceeded
  2991                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2992                           
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2995     0671  1683               	bsf	3,5	;RP0=1, select bank1
  2996     0672  1303               	bcf	3,6	;RP1=0, select bank1
  2997     0673  082F               	movf	vfpfcnvrt@fmt^(0+128),w
  2998     0674  0084               	movwf	4
  2999     0675  1383               	bcf	3,7	;select IRP bank0
  3000     0676  0800               	movf	0,w
  3001     0677  00B1               	movwf	??_vfpfcnvrt^(0+128)
  3002     0678  0A84               	incf	4,f
  3003     0679  0800               	movf	0,w
  3004     067A  00B2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3005     067B  0832               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3006     067C  1283               	bcf	3,5	;RP0=0, select bank0
  3007     067D  1303               	bcf	3,6	;RP1=0, select bank0
  3008     067E  00FF               	movwf	btemp+1
  3009     067F  1683               	bsf	3,5	;RP0=1, select bank1
  3010     0680  1303               	bcf	3,6	;RP1=0, select bank1
  3011     0681  0831               	movf	??_vfpfcnvrt^(0+128),w
  3012     0682  0084               	movwf	4
  3013     0683  1283               	bcf	3,5	;RP0=0, select bank0
  3014     0684  1303               	bcf	3,6	;RP1=0, select bank0
  3015     0685  160A  118A  2100  120A  118A  	fcall	stringtab
  3016     068A  3A25               	xorlw	37
  3017     068B  1D03               	skipz
  3018     068C  2E8E               	goto	u2981
  3019     068D  2E8F               	goto	u2980
  3020     068E                     u2981:
  3021     068E  2F83               	goto	l2584
  3022     068F                     u2980:
  3023     068F                     l2540:
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3026     068F  1683               	bsf	3,5	;RP0=1, select bank1
  3027     0690  1303               	bcf	3,6	;RP1=0, select bank1
  3028     0691  082F               	movf	vfpfcnvrt@fmt^(0+128),w
  3029     0692  0084               	movwf	4
  3030     0693  3001               	movlw	1
  3031     0694  1383               	bcf	3,7	;select IRP bank0
  3032     0695  0780               	addwf	0,f
  3033     0696  0A84               	incf	4,f
  3034     0697  1803               	skipnc
  3035     0698  0A80               	incf	0,f
  3036     0699                     l2542:
  3037                           
  3038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3039     0699  1283               	bcf	3,5	;RP0=0, select bank0
  3040     069A  1303               	bcf	3,6	;RP1=0, select bank0
  3041     069B  01C9               	clrf	_width
  3042     069C  01CA               	clrf	_width+1
  3043     069D  3000               	movlw	0
  3044     069E  00CF               	movwf	_flags
  3045     069F                     l2544:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3048     069F  30FF               	movlw	255
  3049     06A0  00CB               	movwf	_prec
  3050     06A1  30FF               	movlw	255
  3051     06A2  00CC               	movwf	_prec+1
  3052     06A3                     l2546:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3055     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  3056     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  3057     06A5  082F               	movf	vfpfcnvrt@fmt^(0+128),w
  3058     06A6  0084               	movwf	4
  3059     06A7  0800               	movf	0,w
  3060     06A8  00B6               	movwf	vfpfcnvrt@cp^(0+128)
  3061     06A9  0A84               	incf	4,f
  3062     06AA  0800               	movf	0,w
  3063     06AB  0384               	decf	4,f
  3064     06AC  00B7               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  3065     06AD                     l2548:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3068     06AD  0837               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3069     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3070     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3071     06B0  00FF               	movwf	btemp+1
  3072     06B1  1683               	bsf	3,5	;RP0=1, select bank1
  3073     06B2  1303               	bcf	3,6	;RP1=0, select bank1
  3074     06B3  0836               	movf	vfpfcnvrt@cp^(0+128),w
  3075     06B4  0084               	movwf	4
  3076     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3077     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3078     06B7  160A  118A  2100  120A  118A  	fcall	stringtab
  3079     06BC  3A64               	xorlw	100
  3080     06BD  1903               	skipnz
  3081     06BE  2EC0               	goto	u2991
  3082     06BF  2EC1               	goto	u2990
  3083     06C0                     u2991:
  3084     06C0  2ED7               	goto	l2552
  3085     06C1                     u2990:
  3086     06C1                     l2550:
  3087     06C1  1683               	bsf	3,5	;RP0=1, select bank1
  3088     06C2  1303               	bcf	3,6	;RP1=0, select bank1
  3089     06C3  0837               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3090     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3091     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3092     06C6  00FF               	movwf	btemp+1
  3093     06C7  1683               	bsf	3,5	;RP0=1, select bank1
  3094     06C8  1303               	bcf	3,6	;RP1=0, select bank1
  3095     06C9  0836               	movf	vfpfcnvrt@cp^(0+128),w
  3096     06CA  0084               	movwf	4
  3097     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3098     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3099     06CD  160A  118A  2100  120A  118A  	fcall	stringtab
  3100     06D2  3A69               	xorlw	105
  3101     06D3  1D03               	skipz
  3102     06D4  2ED6               	goto	u3001
  3103     06D5  2ED7               	goto	u3000
  3104     06D6                     u3001:
  3105     06D6  2F78               	goto	l2580
  3106     06D7                     u3000:
  3107     06D7                     l2552:
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3110     06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3111     06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3112     06D9  0830               	movf	vfpfcnvrt@ap^(0+128),w
  3113     06DA  0084               	movwf	4
  3114     06DB  1383               	bcf	3,7	;select IRP bank0
  3115     06DC  0800               	movf	0,w
  3116     06DD  00FF               	movwf	btemp+1
  3117     06DE  3002               	movlw	2
  3118     06DF  0780               	addwf	0,f
  3119     06E0  087F               	movf	btemp+1,w
  3120     06E1  0084               	movwf	4
  3121     06E2  0800               	movf	0,w
  3122     06E3  00B8               	movwf	vfpfcnvrt@convarg^(0+128)
  3123     06E4  0A84               	incf	4,f
  3124     06E5  0800               	movf	0,w
  3125     06E6  00B9               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3126     06E7                     l2554:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3129     06E7  3001               	movlw	1
  3130     06E8  00B1               	movwf	??_vfpfcnvrt^(0+128)
  3131     06E9  0831               	movf	??_vfpfcnvrt^(0+128),w
  3132     06EA  0736               	addwf	vfpfcnvrt@cp^(0+128),w
  3133     06EB  00B3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3134     06EC  0837               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  3135     06ED  00B2               	movwf	(??_vfpfcnvrt+1)^(0+128)
  3136     06EE  1803               	skipnc
  3137     06EF  0AB2               	incf	(??_vfpfcnvrt+1)^(0+128),f
  3138     06F0  1BB1               	btfsc	??_vfpfcnvrt^(0+128),7
  3139     06F1  03B2               	decf	(??_vfpfcnvrt+1)^(0+128),f
  3140     06F2  0832               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3141     06F3  00B4               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  3142     06F4  082F               	movf	vfpfcnvrt@fmt^(0+128),w
  3143     06F5  0084               	movwf	4
  3144     06F6  0833               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3145     06F7  0080               	movwf	0
  3146     06F8  0834               	movf	((??_vfpfcnvrt+2)^(0+128)+1),w
  3147     06F9  0A84               	incf	4,f
  3148     06FA  0080               	movwf	0
  3149     06FB  0384               	decf	4,f
  3150     06FC                     l2556:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3153     06FC  3020               	movlw	32
  3154     06FD  00BC               	movwf	vfpfcnvrt@c^(0+128)
  3155     06FE                     l2558:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3158     06FE  1BB9               	btfsc	(vfpfcnvrt@convarg+1)^(0+128),7
  3159     06FF  2F01               	goto	u3011
  3160     0700  2F03               	goto	u3010
  3161     0701                     u3011:
  3162     0701  3001               	movlw	1
  3163     0702  2F04               	goto	u3020
  3164     0703                     u3010:
  3165     0703  3000               	movlw	0
  3166     0704                     u3020:
  3167     0704  00B5               	movwf	vfpfcnvrt@done^(0+128)
  3168     0705                     l2560:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3171     0705  3001               	movlw	1
  3172     0706  02BC               	subwf	vfpfcnvrt@c^(0+128),f
  3173     0707  083C               	movf	vfpfcnvrt@c^(0+128),w
  3174     0708  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3175     0709  0084               	movwf	4
  3176     070A  300A               	movlw	10
  3177     070B  00A0               	movwf	___awmod@divisor^(0+128)
  3178     070C  3000               	movlw	0
  3179     070D  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  3180     070E  0839               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3181     070F  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  3182     0710  0838               	movf	vfpfcnvrt@convarg^(0+128),w
  3183     0711  00A2               	movwf	___awmod@dividend^(0+128)
  3184     0712  160A  118A  253B  120A  118A  	fcall	___awmod
  3185     0717  1683               	bsf	3,5	;RP0=1, select bank1
  3186     0718  1303               	bcf	3,6	;RP1=0, select bank1
  3187     0719  0821               	movf	(?___awmod+1)^(0+128),w
  3188     071A  00A7               	movwf	(abs@a+1)^(0+128)
  3189     071B  0820               	movf	?___awmod^(0+128),w
  3190     071C  00A6               	movwf	abs@a^(0+128)
  3191     071D  160A  118A  229C  120A  118A  	fcall	_abs
  3192     0722  1683               	bsf	3,5	;RP0=1, select bank1
  3193     0723  1303               	bcf	3,6	;RP1=0, select bank1
  3194     0724  0826               	movf	?_abs^(0+128),w
  3195     0725  3E30               	addlw	48
  3196     0726  1783               	bsf	3,7	;select IRP bank2
  3197     0727  0080               	movwf	0
  3198     0728                     l2562:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3201     0728  300A               	movlw	10
  3202     0729  00A0               	movwf	___awdiv@divisor^(0+128)
  3203     072A  3000               	movlw	0
  3204     072B  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3205     072C  0839               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  3206     072D  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3207     072E  0838               	movf	vfpfcnvrt@convarg^(0+128),w
  3208     072F  00A2               	movwf	___awdiv@dividend^(0+128)
  3209     0730  160A  118A  25EE  120A  118A  	fcall	___awdiv
  3210     0735  1683               	bsf	3,5	;RP0=1, select bank1
  3211     0736  1303               	bcf	3,6	;RP1=0, select bank1
  3212     0737  0821               	movf	(?___awdiv+1)^(0+128),w
  3213     0738  00B9               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  3214     0739  0820               	movf	?___awdiv^(0+128),w
  3215     073A  00B8               	movwf	vfpfcnvrt@convarg^(0+128)
  3216     073B                     l2564:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3219     073B  0838               	movf	vfpfcnvrt@convarg^(0+128),w
  3220     073C  0439               	iorwf	(vfpfcnvrt@convarg+1)^(0+128),w
  3221     073D  1903               	btfsc	3,2
  3222     073E  2F40               	goto	u3031
  3223     073F  2F41               	goto	u3030
  3224     0740                     u3031:
  3225     0740  2F46               	goto	l2568
  3226     0741                     u3030:
  3227     0741                     l2566:
  3228     0741  083C               	movf	vfpfcnvrt@c^(0+128),w
  3229     0742  1D03               	btfss	3,2
  3230     0743  2F45               	goto	u3041
  3231     0744  2F46               	goto	u3040
  3232     0745                     u3041:
  3233     0745  2F05               	goto	l2560
  3234     0746                     u3040:
  3235     0746                     l2568:
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3238     0746  083C               	movf	vfpfcnvrt@c^(0+128),w
  3239     0747  1903               	btfsc	3,2
  3240     0748  2F4A               	goto	u3051
  3241     0749  2F4B               	goto	u3050
  3242     074A                     u3051:
  3243     074A  2F71               	goto	l2578
  3244     074B                     u3050:
  3245     074B                     l2570:
  3246     074B  0835               	movf	vfpfcnvrt@done^(0+128),w
  3247     074C  1903               	btfsc	3,2
  3248     074D  2F4F               	goto	u3061
  3249     074E  2F50               	goto	u3060
  3250     074F                     u3061:
  3251     074F  2F71               	goto	l2578
  3252     0750                     u3060:
  3253     0750                     l2572:
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3256     0750  3001               	movlw	1
  3257     0751  02BC               	subwf	vfpfcnvrt@c^(0+128),f
  3258     0752  083C               	movf	vfpfcnvrt@c^(0+128),w
  3259     0753  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3260     0754  0084               	movwf	4
  3261     0755  302D               	movlw	45
  3262     0756  1783               	bsf	3,7	;select IRP bank2
  3263     0757  0080               	movwf	0
  3264     0758  2F71               	goto	l2578
  3265     0759                     l2574:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3268     0759  083C               	movf	vfpfcnvrt@c^(0+128),w
  3269     075A  3E38               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3270     075B  0084               	movwf	4
  3271     075C  1783               	bsf	3,7	;select IRP bank2
  3272     075D  0800               	movf	0,w
  3273     075E  00B1               	movwf	??_vfpfcnvrt^(0+128)
  3274     075F  01B2               	clrf	(??_vfpfcnvrt^(0+128)+1)
  3275     0760  0831               	movf	??_vfpfcnvrt^(0+128),w
  3276     0761  00A0               	movwf	fputc@c^(0+128)
  3277     0762  0832               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3278     0763  00A1               	movwf	(fputc@c+1)^(0+128)
  3279     0764  082D               	movf	vfpfcnvrt@fp^(0+128),w
  3280     0765  00A2               	movwf	fputc@fp^(0+128)
  3281     0766  082E               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  3282     0767  00A3               	movwf	(fputc@fp+1)^(0+128)
  3283     0768  120A  158A  207A  120A  118A  	fcall	_fputc
  3284     076D                     l2576:
  3285     076D  3001               	movlw	1
  3286     076E  1683               	bsf	3,5	;RP0=1, select bank1
  3287     076F  1303               	bcf	3,6	;RP1=0, select bank1
  3288     0770  07BC               	addwf	vfpfcnvrt@c^(0+128),f
  3289     0771                     l2578:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3292     0771  3020               	movlw	32
  3293     0772  063C               	xorwf	vfpfcnvrt@c^(0+128),w
  3294     0773  1D03               	btfss	3,2
  3295     0774  2F76               	goto	u3071
  3296     0775  2F77               	goto	u3070
  3297     0776                     u3071:
  3298     0776  2F59               	goto	l2574
  3299     0777                     u3070:
  3300     0777  2FAE               	goto	l962
  3301     0778                     l2580:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3304     0778  1683               	bsf	3,5	;RP0=1, select bank1
  3305     0779  1303               	bcf	3,6	;RP1=0, select bank1
  3306     077A  082F               	movf	vfpfcnvrt@fmt^(0+128),w
  3307     077B  0084               	movwf	4
  3308     077C  3001               	movlw	1
  3309     077D  1383               	bcf	3,7	;select IRP bank0
  3310     077E  0780               	addwf	0,f
  3311     077F  0A84               	incf	4,f
  3312     0780  1803               	skipnc
  3313     0781  0A80               	incf	0,f
  3314     0782  2FAE               	goto	l962
  3315     0783                     l2584:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3318     0783  1683               	bsf	3,5	;RP0=1, select bank1
  3319     0784  1303               	bcf	3,6	;RP1=0, select bank1
  3320     0785  082F               	movf	vfpfcnvrt@fmt^(0+128),w
  3321     0786  0084               	movwf	4
  3322     0787  1383               	bcf	3,7	;select IRP bank0
  3323     0788  0800               	movf	0,w
  3324     0789  00B1               	movwf	??_vfpfcnvrt^(0+128)
  3325     078A  0A84               	incf	4,f
  3326     078B  0800               	movf	0,w
  3327     078C  00B2               	movwf	(??_vfpfcnvrt^(0+128)+1)
  3328     078D  0832               	movf	(??_vfpfcnvrt+1)^(0+128),w
  3329     078E  1283               	bcf	3,5	;RP0=0, select bank0
  3330     078F  1303               	bcf	3,6	;RP1=0, select bank0
  3331     0790  00FF               	movwf	btemp+1
  3332     0791  1683               	bsf	3,5	;RP0=1, select bank1
  3333     0792  1303               	bcf	3,6	;RP1=0, select bank1
  3334     0793  0831               	movf	??_vfpfcnvrt^(0+128),w
  3335     0794  0084               	movwf	4
  3336     0795  1283               	bcf	3,5	;RP0=0, select bank0
  3337     0796  1303               	bcf	3,6	;RP1=0, select bank0
  3338     0797  160A  118A  2100  120A  118A  	fcall	stringtab
  3339     079C  1683               	bsf	3,5	;RP0=1, select bank1
  3340     079D  1303               	bcf	3,6	;RP1=0, select bank1
  3341     079E  00B3               	movwf	(??_vfpfcnvrt+2)^(0+128)
  3342     079F  01B4               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  3343     07A0  0833               	movf	(??_vfpfcnvrt+2)^(0+128),w
  3344     07A1  00A0               	movwf	fputc@c^(0+128)
  3345     07A2  0834               	movf	(??_vfpfcnvrt+3)^(0+128),w
  3346     07A3  00A1               	movwf	(fputc@c+1)^(0+128)
  3347     07A4  082D               	movf	vfpfcnvrt@fp^(0+128),w
  3348     07A5  00A2               	movwf	fputc@fp^(0+128)
  3349     07A6  082E               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  3350     07A7  00A3               	movwf	(fputc@fp+1)^(0+128)
  3351     07A8  120A  158A  207A  120A  118A  	fcall	_fputc
  3352     07AD  2F78               	goto	l2580
  3353     07AE                     l962:
  3354     07AE  0008               	return
  3355     07AF                     __end_of_vfpfcnvrt:
  3356                           
  3357                           	psect	text6
  3358     087A                     __ptext6:	
  3359 ;; *************** function _fputc *****************
  3360 ;; Defined at:
  3361 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  c               2    0[BANK1 ] int 
  3364 ;;  fp              2    2[BANK1 ] PTR struct _IO_FILE
  3365 ;;		 -> sprintf@f(11), 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  2    0[BANK1 ] int 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       4       0       0
  3378 ;;      Locals:         0       0       0       0       0
  3379 ;;      Temps:          0       0       9       0       0
  3380 ;;      Totals:         0       0      13       0       0
  3381 ;;Total ram usage:       13 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 3
  3384 ;; This function calls:
  3385 ;;		_putch
  3386 ;; This function is called by:
  3387 ;;		_vfpfcnvrt
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391     087A                     _fputc:	
  3392                           ;psect for function _fputc
  3393                           
  3394     087A                     l2506:	
  3395                           ;incstack = 0
  3396 ;; hardware stack exceeded
  3397                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3398                           
  3399     087A  1683               	bsf	3,5	;RP0=1, select bank1
  3400     087B  1303               	bcf	3,6	;RP1=0, select bank1
  3401     087C  0822               	movf	fputc@fp^(0+128),w
  3402     087D  0423               	iorwf	(fputc@fp+1)^(0+128),w
  3403     087E  1903               	btfsc	3,2
  3404     087F  2881               	goto	u2921
  3405     0880  2882               	goto	u2920
  3406     0881                     u2921:
  3407     0881  2888               	goto	l2510
  3408     0882                     u2920:
  3409     0882                     l2508:
  3410     0882  0822               	movf	fputc@fp^(0+128),w
  3411     0883  0423               	iorwf	(fputc@fp+1)^(0+128),w
  3412     0884  1D03               	btfss	3,2
  3413     0885  2887               	goto	u2931
  3414     0886  2888               	goto	u2930
  3415     0887                     u2931:
  3416     0887  288F               	goto	l2512
  3417     0888                     u2930:
  3418     0888                     l2510:
  3419     0888  0820               	movf	fputc@c^(0+128),w
  3420     0889  120A  118A  2003  120A  158A  	fcall	_putch
  3421     088E  2919               	goto	l987
  3422     088F                     l2512:
  3423     088F  0822               	movf	fputc@fp^(0+128),w
  3424     0890  3E09               	addlw	9
  3425     0891  00A4               	movwf	??_fputc^(0+128)
  3426     0892  0823               	movf	(fputc@fp+1)^(0+128),w
  3427     0893  1803               	skipnc
  3428     0894  3E01               	addlw	1
  3429     0895  3E00               	addlw	0
  3430     0896  00A5               	movwf	(??_fputc+1)^(0+128)
  3431     0897  0824               	movf	??_fputc^(0+128),w
  3432     0898  0084               	movwf	4
  3433     0899  1783               	bsf	3,7
  3434     089A  1C25               	btfss	(??_fputc+1)^(0+128),0
  3435     089B  1383               	bcf	3,7
  3436     089C  0800               	movf	0,w
  3437     089D  00A6               	movwf	(??_fputc+2)^(0+128)
  3438     089E  0A84               	incf	4,f
  3439     089F  0800               	movf	0,w
  3440     08A0  00A7               	movwf	((??_fputc+2)^(0+128)+1)
  3441     08A1  0826               	movf	(??_fputc+2)^(0+128),w
  3442     08A2  0427               	iorwf	((??_fputc+2)^(0+128)+1),w
  3443     08A3  1903               	btfsc	3,2
  3444     08A4  28A6               	goto	u2941
  3445     08A5  28A7               	goto	u2940
  3446     08A6                     u2941:
  3447     08A6  28D9               	goto	l2516
  3448     08A7                     u2940:
  3449     08A7                     l2514:
  3450     08A7  0822               	movf	fputc@fp^(0+128),w
  3451     08A8  3E09               	addlw	9
  3452     08A9  00A4               	movwf	??_fputc^(0+128)
  3453     08AA  0823               	movf	(fputc@fp+1)^(0+128),w
  3454     08AB  1803               	skipnc
  3455     08AC  3E01               	addlw	1
  3456     08AD  3E00               	addlw	0
  3457     08AE  00A5               	movwf	(??_fputc+1)^(0+128)
  3458     08AF  0824               	movf	??_fputc^(0+128),w
  3459     08B0  0084               	movwf	4
  3460     08B1  1783               	bsf	3,7
  3461     08B2  1C25               	btfss	(??_fputc+1)^(0+128),0
  3462     08B3  1383               	bcf	3,7
  3463     08B4  0800               	movf	0,w
  3464     08B5  00A6               	movwf	(??_fputc+2)^(0+128)
  3465     08B6  0A84               	incf	4,f
  3466     08B7  0800               	movf	0,w
  3467     08B8  00A7               	movwf	((??_fputc+2)^(0+128)+1)
  3468     08B9  0822               	movf	fputc@fp^(0+128),w
  3469     08BA  3E02               	addlw	2
  3470     08BB  00A8               	movwf	(??_fputc+4)^(0+128)
  3471     08BC  0823               	movf	(fputc@fp+1)^(0+128),w
  3472     08BD  1803               	skipnc
  3473     08BE  3E01               	addlw	1
  3474     08BF  3E00               	addlw	0
  3475     08C0  00A9               	movwf	(??_fputc+5)^(0+128)
  3476     08C1  0828               	movf	(??_fputc+4)^(0+128),w
  3477     08C2  0084               	movwf	4
  3478     08C3  1783               	bsf	3,7
  3479     08C4  1C29               	btfss	(??_fputc+5)^(0+128),0
  3480     08C5  1383               	bcf	3,7
  3481     08C6  0800               	movf	0,w
  3482     08C7  00AA               	movwf	(??_fputc+6)^(0+128)
  3483     08C8  0A84               	incf	4,f
  3484     08C9  0800               	movf	0,w
  3485     08CA  00AB               	movwf	((??_fputc+6)^(0+128)+1)
  3486     08CB  082B               	movf	(??_fputc+7)^(0+128),w
  3487     08CC  3A80               	xorlw	128
  3488     08CD  00AC               	movwf	(??_fputc+8)^(0+128)
  3489     08CE  0827               	movf	(??_fputc+3)^(0+128),w
  3490     08CF  3A80               	xorlw	128
  3491     08D0  022C               	subwf	(??_fputc+8)^(0+128),w
  3492     08D1  1D03               	skipz
  3493     08D2  28D5               	goto	u2955
  3494     08D3  0826               	movf	(??_fputc+2)^(0+128),w
  3495     08D4  022A               	subwf	(??_fputc+6)^(0+128),w
  3496     08D5                     u2955:
  3497     08D5  1803               	skipnc
  3498     08D6  28D8               	goto	u2951
  3499     08D7  28D9               	goto	u2950
  3500     08D8                     u2951:
  3501     08D8  2919               	goto	l987
  3502     08D9                     u2950:
  3503     08D9                     l2516:
  3504     08D9  1683               	bsf	3,5	;RP0=1, select bank1
  3505     08DA  1303               	bcf	3,6	;RP1=0, select bank1
  3506     08DB  0822               	movf	fputc@fp^(0+128),w
  3507     08DC  0084               	movwf	4
  3508     08DD  1783               	bsf	3,7
  3509     08DE  1C23               	btfss	(fputc@fp+1)^(0+128),0
  3510     08DF  1383               	bcf	3,7
  3511     08E0  0800               	movf	0,w
  3512     08E1  00A4               	movwf	??_fputc^(0+128)
  3513     08E2  0A84               	incf	4,f
  3514     08E3  0800               	movf	0,w
  3515     08E4  00A5               	movwf	(??_fputc^(0+128)+1)
  3516     08E5  0822               	movf	fputc@fp^(0+128),w
  3517     08E6  3E02               	addlw	2
  3518     08E7  00A6               	movwf	(??_fputc+2)^(0+128)
  3519     08E8  0823               	movf	(fputc@fp+1)^(0+128),w
  3520     08E9  1803               	skipnc
  3521     08EA  3E01               	addlw	1
  3522     08EB  3E00               	addlw	0
  3523     08EC  00A7               	movwf	(??_fputc+3)^(0+128)
  3524     08ED  0826               	movf	(??_fputc+2)^(0+128),w
  3525     08EE  0084               	movwf	4
  3526     08EF  1783               	bsf	3,7
  3527     08F0  1C27               	btfss	(??_fputc+3)^(0+128),0
  3528     08F1  1383               	bcf	3,7
  3529     08F2  0800               	movf	0,w
  3530     08F3  0724               	addwf	??_fputc^(0+128),w
  3531     08F4  00A9               	movwf	(??_fputc+5)^(0+128)
  3532     08F5  0825               	movf	(??_fputc+1)^(0+128),w
  3533     08F6  00A8               	movwf	(??_fputc+4)^(0+128)
  3534     08F7  1803               	skipnc
  3535     08F8  0AA8               	incf	(??_fputc+4)^(0+128),f
  3536     08F9  1F80               	btfss	0,7
  3537     08FA  28FC               	goto	u2960
  3538     08FB  03A8               	decf	(??_fputc+4)^(0+128),f
  3539     08FC                     u2960:
  3540     08FC  1683               	bsf	3,5	;RP0=1, select bank1
  3541     08FD  1303               	bcf	3,6	;RP1=0, select bank1
  3542     08FE  0828               	movf	(??_fputc+4)^(0+128),w
  3543     08FF  00AA               	movwf	((??_fputc+5)^(0+128)+1)
  3544     0900  0829               	movf	(??_fputc+5)^(0+128),w
  3545     0901  0084               	movwf	4
  3546     0902  1783               	bsf	3,7
  3547     0903  1C2A               	btfss	(??_fputc+6)^(0+128),0
  3548     0904  1383               	bcf	3,7
  3549     0905  0820               	movf	fputc@c^(0+128),w
  3550     0906  0080               	movwf	0
  3551     0907  0822               	movf	fputc@fp^(0+128),w
  3552     0908  3E02               	addlw	2
  3553     0909  00A4               	movwf	??_fputc^(0+128)
  3554     090A  0823               	movf	(fputc@fp+1)^(0+128),w
  3555     090B  1803               	skipnc
  3556     090C  3E01               	addlw	1
  3557     090D  3E00               	addlw	0
  3558     090E  00A5               	movwf	(??_fputc+1)^(0+128)
  3559     090F  0824               	movf	??_fputc^(0+128),w
  3560     0910  0084               	movwf	4
  3561     0911  1783               	bsf	3,7
  3562     0912  1C25               	btfss	(??_fputc+1)^(0+128),0
  3563     0913  1383               	bcf	3,7
  3564     0914  3001               	movlw	1
  3565     0915  0780               	addwf	0,f
  3566     0916  0A84               	incf	4,f
  3567     0917  1803               	skipnc
  3568     0918  0A80               	incf	0,f
  3569     0919                     l987:
  3570     0919  0008               	return
  3571     091A                     __end_of_fputc:
  3572                           
  3573                           	psect	text7
  3574     0003                     __ptext7:	
  3575 ;; *************** function _putch *****************
  3576 ;; Defined at:
  3577 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  c               1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  c               1    0[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 2
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_fputc
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     0003                     _putch:	
  3606                           ;psect for function _putch
  3607                           
  3608     0003                     l998:	
  3609                           ;incstack = 0
  3610 ;; hardware stack exceeded
  3611                           ; Regs used in _putch: [wreg]
  3612                           
  3613     0003  0008               	return
  3614     0004                     __end_of_putch:
  3615                           
  3616                           	psect	text8
  3617     129C                     __ptext8:	
  3618 ;; *************** function _abs *****************
  3619 ;; Defined at:
  3620 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  a               2    6[BANK1 ] int 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2    6[BANK1 ] int 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3634 ;;      Params:         0       0       2       0       0
  3635 ;;      Locals:         0       0       0       0       0
  3636 ;;      Temps:          0       0       2       0       0
  3637 ;;      Totals:         0       0       4       0       0
  3638 ;;Total ram usage:        4 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 2
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_vfpfcnvrt
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648     129C                     _abs:	
  3649                           ;psect for function _abs
  3650                           
  3651     129C                     l2520:	
  3652                           ;incstack = 0
  3653                           ; Regs used in _abs: [wreg+status,2+status,0]
  3654                           
  3655     129C  1683               	bsf	3,5	;RP0=1, select bank1
  3656     129D  1303               	bcf	3,6	;RP1=0, select bank1
  3657     129E  1BA7               	btfsc	(abs@a+1)^(0+128),7
  3658     129F  2AA1               	goto	u2971
  3659     12A0  2AA2               	goto	u2970
  3660     12A1                     u2971:
  3661     12A1  2AA3               	goto	l2524
  3662     12A2                     u2970:
  3663     12A2                     l2522:
  3664     12A2  2AAE               	goto	l975
  3665     12A3                     l2524:
  3666     12A3  0926               	comf	abs@a^(0+128),w
  3667     12A4  00A8               	movwf	??_abs^(0+128)
  3668     12A5  0927               	comf	(abs@a+1)^(0+128),w
  3669     12A6  00A9               	movwf	(??_abs^(0+128)+1)
  3670     12A7  0AA8               	incf	??_abs^(0+128),f
  3671     12A8  1903               	skipnz
  3672     12A9  0AA9               	incf	(??_abs^(0+128)+1),f
  3673     12AA  0828               	movf	??_abs^(0+128),w
  3674     12AB  00A6               	movwf	?_abs^(0+128)
  3675     12AC  0829               	movf	(??_abs+1)^(0+128),w
  3676     12AD  00A7               	movwf	(?_abs+1)^(0+128)
  3677     12AE                     l975:
  3678     12AE  0008               	return
  3679     12AF                     __end_of_abs:
  3680                           
  3681                           	psect	text9
  3682     153B                     __ptext9:	
  3683 ;; *************** function ___awmod *****************
  3684 ;; Defined at:
  3685 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  divisor         2    0[BANK1 ] int 
  3688 ;;  dividend        2    2[BANK1 ] int 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  sign            1    5[BANK1 ] unsigned char 
  3691 ;;  counter         1    4[BANK1 ] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2    0[BANK1 ] int 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       0       4       0       0
  3702 ;;      Locals:         0       0       2       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         0       0       6       0       0
  3705 ;;Total ram usage:        6 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 2
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_vfpfcnvrt
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715     153B                     ___awmod:	
  3716                           ;psect for function ___awmod
  3717                           
  3718     153B                     l2468:	
  3719                           ;incstack = 0
  3720                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3721                           
  3722     153B  1683               	bsf	3,5	;RP0=1, select bank1
  3723     153C  1303               	bcf	3,6	;RP1=0, select bank1
  3724     153D  01A5               	clrf	___awmod@sign^(0+128)
  3725     153E                     l2470:
  3726     153E  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3727     153F  2D41               	goto	u2831
  3728     1540  2D42               	goto	u2830
  3729     1541                     u2831:
  3730     1541  2D49               	goto	l2476
  3731     1542                     u2830:
  3732     1542                     l2472:
  3733     1542  09A2               	comf	___awmod@dividend^(0+128),f
  3734     1543  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3735     1544  0AA2               	incf	___awmod@dividend^(0+128),f
  3736     1545  1903               	skipnz
  3737     1546  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3738     1547                     l2474:
  3739     1547  3001               	movlw	1
  3740     1548  00A5               	movwf	___awmod@sign^(0+128)
  3741     1549                     l2476:
  3742     1549  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3743     154A  2D4C               	goto	u2841
  3744     154B  2D4D               	goto	u2840
  3745     154C                     u2841:
  3746     154C  2D52               	goto	l2480
  3747     154D                     u2840:
  3748     154D                     l2478:
  3749     154D  09A0               	comf	___awmod@divisor^(0+128),f
  3750     154E  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3751     154F  0AA0               	incf	___awmod@divisor^(0+128),f
  3752     1550  1903               	skipnz
  3753     1551  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3754     1552                     l2480:
  3755     1552  0820               	movf	___awmod@divisor^(0+128),w
  3756     1553  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  3757     1554  1903               	btfsc	3,2
  3758     1555  2D57               	goto	u2851
  3759     1556  2D58               	goto	u2850
  3760     1557                     u2851:
  3761     1557  2D85               	goto	l2498
  3762     1558                     u2850:
  3763     1558                     l2482:
  3764     1558  3001               	movlw	1
  3765     1559  00A4               	movwf	___awmod@counter^(0+128)
  3766     155A  2D64               	goto	l2488
  3767     155B                     l2484:
  3768     155B  3001               	movlw	1
  3769     155C                     u2865:
  3770     155C  1003               	clrc
  3771     155D  0DA0               	rlf	___awmod@divisor^(0+128),f
  3772     155E  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3773     155F  3EFF               	addlw	-1
  3774     1560  1D03               	skipz
  3775     1561  2D5C               	goto	u2865
  3776     1562                     l2486:
  3777     1562  3001               	movlw	1
  3778     1563  07A4               	addwf	___awmod@counter^(0+128),f
  3779     1564                     l2488:
  3780     1564  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3781     1565  2D67               	goto	u2871
  3782     1566  2D68               	goto	u2870
  3783     1567                     u2871:
  3784     1567  2D5B               	goto	l2484
  3785     1568                     u2870:
  3786     1568                     l2490:
  3787     1568  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3788     1569  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  3789     156A  1D03               	skipz
  3790     156B  2D6E               	goto	u2885
  3791     156C  0820               	movf	___awmod@divisor^(0+128),w
  3792     156D  0222               	subwf	___awmod@dividend^(0+128),w
  3793     156E                     u2885:
  3794     156E  1C03               	skipc
  3795     156F  2D71               	goto	u2881
  3796     1570  2D72               	goto	u2880
  3797     1571                     u2881:
  3798     1571  2D78               	goto	l2494
  3799     1572                     u2880:
  3800     1572                     l2492:
  3801     1572  0820               	movf	___awmod@divisor^(0+128),w
  3802     1573  02A2               	subwf	___awmod@dividend^(0+128),f
  3803     1574  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3804     1575  1C03               	skipc
  3805     1576  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  3806     1577  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  3807     1578                     l2494:
  3808     1578  3001               	movlw	1
  3809     1579                     u2895:
  3810     1579  1003               	clrc
  3811     157A  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  3812     157B  0CA0               	rrf	___awmod@divisor^(0+128),f
  3813     157C  3EFF               	addlw	-1
  3814     157D  1D03               	skipz
  3815     157E  2D79               	goto	u2895
  3816     157F                     l2496:
  3817     157F  3001               	movlw	1
  3818     1580  02A4               	subwf	___awmod@counter^(0+128),f
  3819     1581  1D03               	btfss	3,2
  3820     1582  2D84               	goto	u2901
  3821     1583  2D85               	goto	u2900
  3822     1584                     u2901:
  3823     1584  2D68               	goto	l2490
  3824     1585                     u2900:
  3825     1585                     l2498:
  3826     1585  0825               	movf	___awmod@sign^(0+128),w
  3827     1586  1903               	btfsc	3,2
  3828     1587  2D89               	goto	u2911
  3829     1588  2D8A               	goto	u2910
  3830     1589                     u2911:
  3831     1589  2D8F               	goto	l2502
  3832     158A                     u2910:
  3833     158A                     l2500:
  3834     158A  09A2               	comf	___awmod@dividend^(0+128),f
  3835     158B  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3836     158C  0AA2               	incf	___awmod@dividend^(0+128),f
  3837     158D  1903               	skipnz
  3838     158E  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3839     158F                     l2502:
  3840     158F  0823               	movf	(___awmod@dividend+1)^(0+128),w
  3841     1590  00A1               	movwf	(?___awmod+1)^(0+128)
  3842     1591  0822               	movf	___awmod@dividend^(0+128),w
  3843     1592  00A0               	movwf	?___awmod^(0+128)
  3844     1593                     l627:
  3845     1593  0008               	return
  3846     1594                     __end_of___awmod:
  3847                           
  3848                           	psect	text10
  3849     15EE                     __ptext10:	
  3850 ;; *************** function ___awdiv *****************
  3851 ;; Defined at:
  3852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  divisor         2    0[BANK1 ] int 
  3855 ;;  dividend        2    2[BANK1 ] int 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  quotient        2    6[BANK1 ] int 
  3858 ;;  sign            1    5[BANK1 ] unsigned char 
  3859 ;;  counter         1    4[BANK1 ] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  2    0[BANK1 ] int 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       0       4       0       0
  3870 ;;      Locals:         0       0       4       0       0
  3871 ;;      Temps:          0       0       0       0       0
  3872 ;;      Totals:         0       0       8       0       0
  3873 ;;Total ram usage:        8 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 2
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_vfpfcnvrt
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883     15EE                     ___awdiv:	
  3884                           ;psect for function ___awdiv
  3885                           
  3886     15EE                     l2424:	
  3887                           ;incstack = 0
  3888                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3889                           
  3890     15EE  1683               	bsf	3,5	;RP0=1, select bank1
  3891     15EF  1303               	bcf	3,6	;RP1=0, select bank1
  3892     15F0  01A5               	clrf	___awdiv@sign^(0+128)
  3893     15F1                     l2426:
  3894     15F1  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3895     15F2  2DF4               	goto	u2731
  3896     15F3  2DF5               	goto	u2730
  3897     15F4                     u2731:
  3898     15F4  2DFC               	goto	l2432
  3899     15F5                     u2730:
  3900     15F5                     l2428:
  3901     15F5  09A0               	comf	___awdiv@divisor^(0+128),f
  3902     15F6  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  3903     15F7  0AA0               	incf	___awdiv@divisor^(0+128),f
  3904     15F8  1903               	skipnz
  3905     15F9  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  3906     15FA                     l2430:
  3907     15FA  3001               	movlw	1
  3908     15FB  00A5               	movwf	___awdiv@sign^(0+128)
  3909     15FC                     l2432:
  3910     15FC  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  3911     15FD  2DFF               	goto	u2741
  3912     15FE  2E00               	goto	u2740
  3913     15FF                     u2741:
  3914     15FF  2E07               	goto	l2438
  3915     1600                     u2740:
  3916     1600                     l2434:
  3917     1600  09A2               	comf	___awdiv@dividend^(0+128),f
  3918     1601  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  3919     1602  0AA2               	incf	___awdiv@dividend^(0+128),f
  3920     1603  1903               	skipnz
  3921     1604  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  3922     1605                     l2436:
  3923     1605  3001               	movlw	1
  3924     1606  06A5               	xorwf	___awdiv@sign^(0+128),f
  3925     1607                     l2438:
  3926     1607  01A6               	clrf	___awdiv@quotient^(0+128)
  3927     1608  01A7               	clrf	(___awdiv@quotient+1)^(0+128)
  3928     1609                     l2440:
  3929     1609  0820               	movf	___awdiv@divisor^(0+128),w
  3930     160A  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  3931     160B  1903               	btfsc	3,2
  3932     160C  2E0E               	goto	u2751
  3933     160D  2E0F               	goto	u2750
  3934     160E                     u2751:
  3935     160E  2E44               	goto	l2460
  3936     160F                     u2750:
  3937     160F                     l2442:
  3938     160F  3001               	movlw	1
  3939     1610  00A4               	movwf	___awdiv@counter^(0+128)
  3940     1611  2E1B               	goto	l2448
  3941     1612                     l2444:
  3942     1612  3001               	movlw	1
  3943     1613                     u2765:
  3944     1613  1003               	clrc
  3945     1614  0DA0               	rlf	___awdiv@divisor^(0+128),f
  3946     1615  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  3947     1616  3EFF               	addlw	-1
  3948     1617  1D03               	skipz
  3949     1618  2E13               	goto	u2765
  3950     1619                     l2446:
  3951     1619  3001               	movlw	1
  3952     161A  07A4               	addwf	___awdiv@counter^(0+128),f
  3953     161B                     l2448:
  3954     161B  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3955     161C  2E1E               	goto	u2771
  3956     161D  2E1F               	goto	u2770
  3957     161E                     u2771:
  3958     161E  2E12               	goto	l2444
  3959     161F                     u2770:
  3960     161F                     l2450:
  3961     161F  3001               	movlw	1
  3962     1620                     u2785:
  3963     1620  1003               	clrc
  3964     1621  0DA6               	rlf	___awdiv@quotient^(0+128),f
  3965     1622  0DA7               	rlf	(___awdiv@quotient+1)^(0+128),f
  3966     1623  3EFF               	addlw	-1
  3967     1624  1D03               	skipz
  3968     1625  2E20               	goto	u2785
  3969     1626  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3970     1627  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  3971     1628  1D03               	skipz
  3972     1629  2E2C               	goto	u2795
  3973     162A  0820               	movf	___awdiv@divisor^(0+128),w
  3974     162B  0222               	subwf	___awdiv@dividend^(0+128),w
  3975     162C                     u2795:
  3976     162C  1C03               	skipc
  3977     162D  2E2F               	goto	u2791
  3978     162E  2E30               	goto	u2790
  3979     162F                     u2791:
  3980     162F  2E37               	goto	l2456
  3981     1630                     u2790:
  3982     1630                     l2452:
  3983     1630  0820               	movf	___awdiv@divisor^(0+128),w
  3984     1631  02A2               	subwf	___awdiv@dividend^(0+128),f
  3985     1632  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3986     1633  1C03               	skipc
  3987     1634  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  3988     1635  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  3989     1636                     l2454:
  3990     1636  1426               	bsf	___awdiv@quotient^(0+128),0
  3991     1637                     l2456:
  3992     1637  3001               	movlw	1
  3993     1638                     u2805:
  3994     1638  1003               	clrc
  3995     1639  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  3996     163A  0CA0               	rrf	___awdiv@divisor^(0+128),f
  3997     163B  3EFF               	addlw	-1
  3998     163C  1D03               	skipz
  3999     163D  2E38               	goto	u2805
  4000     163E                     l2458:
  4001     163E  3001               	movlw	1
  4002     163F  02A4               	subwf	___awdiv@counter^(0+128),f
  4003     1640  1D03               	btfss	3,2
  4004     1641  2E43               	goto	u2811
  4005     1642  2E44               	goto	u2810
  4006     1643                     u2811:
  4007     1643  2E1F               	goto	l2450
  4008     1644                     u2810:
  4009     1644                     l2460:
  4010     1644  0825               	movf	___awdiv@sign^(0+128),w
  4011     1645  1903               	btfsc	3,2
  4012     1646  2E48               	goto	u2821
  4013     1647  2E49               	goto	u2820
  4014     1648                     u2821:
  4015     1648  2E4E               	goto	l2464
  4016     1649                     u2820:
  4017     1649                     l2462:
  4018     1649  09A6               	comf	___awdiv@quotient^(0+128),f
  4019     164A  09A7               	comf	(___awdiv@quotient+1)^(0+128),f
  4020     164B  0AA6               	incf	___awdiv@quotient^(0+128),f
  4021     164C  1903               	skipnz
  4022     164D  0AA7               	incf	(___awdiv@quotient+1)^(0+128),f
  4023     164E                     l2464:
  4024     164E  0827               	movf	(___awdiv@quotient+1)^(0+128),w
  4025     164F  00A1               	movwf	(?___awdiv+1)^(0+128)
  4026     1650  0826               	movf	___awdiv@quotient^(0+128),w
  4027     1651  00A0               	movwf	?___awdiv^(0+128)
  4028     1652                     l614:
  4029     1652  0008               	return
  4030     1653                     __end_of___awdiv:
  4031                           
  4032                           	psect	text11
  4033     07AF                     __ptext11:	
  4034 ;; *************** function ___lwdiv *****************
  4035 ;; Defined at:
  4036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  divisor         2    0[BANK1 ] unsigned int 
  4039 ;;  dividend        2    2[BANK1 ] unsigned int 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  quotient        2    4[BANK1 ] unsigned int 
  4042 ;;  counter         1    6[BANK1 ] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2    0[BANK1 ] unsigned int 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       4       0       0
  4053 ;;      Locals:         0       0       3       0       0
  4054 ;;      Temps:          0       0       0       0       0
  4055 ;;      Totals:         0       0       7       0       0
  4056 ;;Total ram usage:        7 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 2
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_SR04_Distance
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066     07AF                     ___lwdiv:	
  4067                           ;psect for function ___lwdiv
  4068                           
  4069     07AF                     l2694:	
  4070                           ;incstack = 0
  4071                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4072                           
  4073     07AF  1683               	bsf	3,5	;RP0=1, select bank1
  4074     07B0  1303               	bcf	3,6	;RP1=0, select bank1
  4075     07B1  01A4               	clrf	___lwdiv@quotient^(0+128)
  4076     07B2  01A5               	clrf	(___lwdiv@quotient+1)^(0+128)
  4077     07B3                     l2696:
  4078     07B3  0820               	movf	___lwdiv@divisor^(0+128),w
  4079     07B4  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  4080     07B5  1903               	btfsc	3,2
  4081     07B6  2FB8               	goto	u3191
  4082     07B7  2FB9               	goto	u3190
  4083     07B8                     u3191:
  4084     07B8  2FEE               	goto	l2716
  4085     07B9                     u3190:
  4086     07B9                     l2698:
  4087     07B9  3001               	movlw	1
  4088     07BA  00A6               	movwf	___lwdiv@counter^(0+128)
  4089     07BB  2FC5               	goto	l2704
  4090     07BC                     l2700:
  4091     07BC  3001               	movlw	1
  4092     07BD                     u3205:
  4093     07BD  1003               	clrc
  4094     07BE  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  4095     07BF  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4096     07C0  3EFF               	addlw	-1
  4097     07C1  1D03               	skipz
  4098     07C2  2FBD               	goto	u3205
  4099     07C3                     l2702:
  4100     07C3  3001               	movlw	1
  4101     07C4  07A6               	addwf	___lwdiv@counter^(0+128),f
  4102     07C5                     l2704:
  4103     07C5  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  4104     07C6  2FC8               	goto	u3211
  4105     07C7  2FC9               	goto	u3210
  4106     07C8                     u3211:
  4107     07C8  2FBC               	goto	l2700
  4108     07C9                     u3210:
  4109     07C9                     l2706:
  4110     07C9  3001               	movlw	1
  4111     07CA                     u3225:
  4112     07CA  1003               	clrc
  4113     07CB  0DA4               	rlf	___lwdiv@quotient^(0+128),f
  4114     07CC  0DA5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4115     07CD  3EFF               	addlw	-1
  4116     07CE  1D03               	skipz
  4117     07CF  2FCA               	goto	u3225
  4118     07D0  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  4119     07D1  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4120     07D2  1D03               	skipz
  4121     07D3  2FD6               	goto	u3235
  4122     07D4  0820               	movf	___lwdiv@divisor^(0+128),w
  4123     07D5  0222               	subwf	___lwdiv@dividend^(0+128),w
  4124     07D6                     u3235:
  4125     07D6  1C03               	skipc
  4126     07D7  2FD9               	goto	u3231
  4127     07D8  2FDA               	goto	u3230
  4128     07D9                     u3231:
  4129     07D9  2FE1               	goto	l2712
  4130     07DA                     u3230:
  4131     07DA                     l2708:
  4132     07DA  0820               	movf	___lwdiv@divisor^(0+128),w
  4133     07DB  02A2               	subwf	___lwdiv@dividend^(0+128),f
  4134     07DC  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  4135     07DD  1C03               	skipc
  4136     07DE  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  4137     07DF  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4138     07E0                     l2710:
  4139     07E0  1424               	bsf	___lwdiv@quotient^(0+128),0
  4140     07E1                     l2712:
  4141     07E1  3001               	movlw	1
  4142     07E2                     u3245:
  4143     07E2  1003               	clrc
  4144     07E3  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4145     07E4  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  4146     07E5  3EFF               	addlw	-1
  4147     07E6  1D03               	skipz
  4148     07E7  2FE2               	goto	u3245
  4149     07E8                     l2714:
  4150     07E8  3001               	movlw	1
  4151     07E9  02A6               	subwf	___lwdiv@counter^(0+128),f
  4152     07EA  1D03               	btfss	3,2
  4153     07EB  2FED               	goto	u3251
  4154     07EC  2FEE               	goto	u3250
  4155     07ED                     u3251:
  4156     07ED  2FC9               	goto	l2706
  4157     07EE                     u3250:
  4158     07EE                     l2716:
  4159     07EE  0825               	movf	(___lwdiv@quotient+1)^(0+128),w
  4160     07EF  00A1               	movwf	(?___lwdiv+1)^(0+128)
  4161     07F0  0824               	movf	___lwdiv@quotient^(0+128),w
  4162     07F1  00A0               	movwf	?___lwdiv^(0+128)
  4163     07F2                     l741:
  4164     07F2  0008               	return
  4165     07F3                     __end_of___lwdiv:
  4166                           
  4167                           	psect	text12
  4168     146D                     __ptext12:	
  4169 ;; *************** function _UART_Write_Text *****************
  4170 ;; Defined at:
  4171 ;;		line 50 in file "UART.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  text            2    1[BANK1 ] PTR const unsigned char 
  4174 ;;		 -> STR_10(3), out(20), STR_8(20), STR_2(50), 
  4175 ;;		 -> STR_1(53), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         0       0       2       0       0
  4188 ;;      Locals:         0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0
  4190 ;;      Totals:         0       0       2       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 4
  4194 ;; This function calls:
  4195 ;;		_UART_Write
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;;		_SR04_Distance
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202     146D                     _UART_Write_Text:	
  4203                           ;psect for function _UART_Write_Text
  4204                           
  4205     146D                     l2624:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4208                           
  4209                           
  4210                           ;UART.c: 50: void UART_Write_Text(const char *text);UART.c: 51: {;UART.c: 52:     while 
      +                          (*text != '\0')
  4211     146D  2C8C               	goto	l2630
  4212     146E                     l2626:
  4213                           
  4214                           ;UART.c: 53:     {;UART.c: 54:         UART_Write(*text++);
  4215     146E  1683               	bsf	3,5	;RP0=1, select bank1
  4216     146F  1303               	bcf	3,6	;RP1=0, select bank1
  4217     1470  0822               	movf	(UART_Write_Text@text+1)^(0+128),w
  4218     1471  1283               	bcf	3,5	;RP0=0, select bank0
  4219     1472  1303               	bcf	3,6	;RP1=0, select bank0
  4220     1473  00FF               	movwf	btemp+1
  4221     1474  1683               	bsf	3,5	;RP0=1, select bank1
  4222     1475  1303               	bcf	3,6	;RP1=0, select bank1
  4223     1476  0821               	movf	UART_Write_Text@text^(0+128),w
  4224     1477  0084               	movwf	4
  4225     1478  1283               	bcf	3,5	;RP0=0, select bank0
  4226     1479  1303               	bcf	3,6	;RP1=0, select bank0
  4227     147A  160A  118A  2100  160A  118A  	fcall	stringtab
  4228     147F  160A  118A  22D6  160A  118A  	fcall	_UART_Write
  4229     1484                     l2628:
  4230     1484  3001               	movlw	1
  4231     1485  1683               	bsf	3,5	;RP0=1, select bank1
  4232     1486  1303               	bcf	3,6	;RP1=0, select bank1
  4233     1487  07A1               	addwf	UART_Write_Text@text^(0+128),f
  4234     1488  1803               	skipnc
  4235     1489  0AA2               	incf	(UART_Write_Text@text+1)^(0+128),f
  4236     148A  3000               	movlw	0
  4237     148B  07A2               	addwf	(UART_Write_Text@text+1)^(0+128),f
  4238     148C                     l2630:
  4239                           
  4240                           ;UART.c: 52:     while (*text != '\0')
  4241     148C  1683               	bsf	3,5	;RP0=1, select bank1
  4242     148D  1303               	bcf	3,6	;RP1=0, select bank1
  4243     148E  0822               	movf	(UART_Write_Text@text+1)^(0+128),w
  4244     148F  1283               	bcf	3,5	;RP0=0, select bank0
  4245     1490  1303               	bcf	3,6	;RP1=0, select bank0
  4246     1491  00FF               	movwf	btemp+1
  4247     1492  1683               	bsf	3,5	;RP0=1, select bank1
  4248     1493  1303               	bcf	3,6	;RP1=0, select bank1
  4249     1494  0821               	movf	UART_Write_Text@text^(0+128),w
  4250     1495  0084               	movwf	4
  4251     1496  1283               	bcf	3,5	;RP0=0, select bank0
  4252     1497  1303               	bcf	3,6	;RP1=0, select bank0
  4253     1498  160A  118A  2100  160A  118A  	fcall	stringtab
  4254     149D  3A00               	xorlw	0
  4255     149E  1D03               	skipz
  4256     149F  2CA1               	goto	u3131
  4257     14A0  2CA2               	goto	u3130
  4258     14A1                     u3131:
  4259     14A1  2C6E               	goto	l2626
  4260     14A2                     u3130:
  4261     14A2                     l330:
  4262     14A2  0008               	return
  4263     14A3                     __end_of_UART_Write_Text:
  4264                           
  4265                           	psect	text13
  4266     12D6                     __ptext13:	
  4267 ;; *************** function _UART_Write *****************
  4268 ;; Defined at:
  4269 ;;		line 39 in file "UART.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  data            1    wreg     unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  data            1    0[BANK1 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       0       0       0       0
  4284 ;;      Locals:         0       0       1       0       0
  4285 ;;      Temps:          0       0       0       0       0
  4286 ;;      Totals:         0       0       1       0       0
  4287 ;;Total ram usage:        1 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 3
  4290 ;; This function calls:
  4291 ;;		_UART_TX_Empty
  4292 ;; This function is called by:
  4293 ;;		_UART_Write_Text
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297     12D6                     _UART_Write:	
  4298                           ;psect for function _UART_Write
  4299                           
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _UART_Write: [wreg+pclath+cstack]
  4303                           ;UART_Write@data stored from wreg
  4304     12D6  1683               	bsf	3,5	;RP0=1, select bank1
  4305     12D7  1303               	bcf	3,6	;RP1=0, select bank1
  4306     12D8  00A0               	movwf	UART_Write@data^(0+128)
  4307     12D9                     l2600:
  4308     12D9                     l2602:	
  4309                           ;UART.c: 39: void UART_Write(uint8_t data);UART.c: 40: {;UART.c: 42:     while (!UART_TX
      +                          _Empty())
  4310                           
  4311                           
  4312                           ;UART.c: 42:     while (!UART_TX_Empty())
  4313     12D9  160A  118A  217C  160A  118A  	fcall	_UART_TX_Empty
  4314     12DE  3A00               	xorlw	0
  4315     12DF  1903               	skipnz
  4316     12E0  2AE2               	goto	u3101
  4317     12E1  2AE3               	goto	u3100
  4318     12E2                     u3101:
  4319     12E2  2AD9               	goto	l2602
  4320     12E3                     u3100:
  4321     12E3                     l2604:
  4322                           
  4323                           ;UART.c: 46:     TXREG = data;
  4324     12E3  1683               	bsf	3,5	;RP0=1, select bank1
  4325     12E4  1303               	bcf	3,6	;RP1=0, select bank1
  4326     12E5  0820               	movf	UART_Write@data^(0+128),w
  4327     12E6  1283               	bcf	3,5	;RP0=0, select bank0
  4328     12E7  1303               	bcf	3,6	;RP1=0, select bank0
  4329     12E8  0099               	movwf	25	;volatile
  4330     12E9                     l324:
  4331     12E9  0008               	return
  4332     12EA                     __end_of_UART_Write:
  4333                           
  4334                           	psect	text14
  4335     117C                     __ptext14:	
  4336 ;; *************** function _UART_TX_Empty *****************
  4337 ;; Defined at:
  4338 ;;		line 32 in file "UART.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      unsigned char 
  4345 ;; Registers used:
  4346 ;;		wreg
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4352 ;;      Params:         0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0
  4355 ;;      Totals:         0       0       0       0       0
  4356 ;;Total ram usage:        0 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; Hardware stack levels required when called: 2
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_UART_Write
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366     117C                     _UART_TX_Empty:	
  4367                           ;psect for function _UART_TX_Empty
  4368                           
  4369     117C                     l2534:	
  4370                           ;incstack = 0
  4371                           ; Regs used in _UART_TX_Empty: [wreg]
  4372                           
  4373                           
  4374                           ;UART.c: 35:     return TRMT;
  4375     117C  3000               	movlw	0
  4376     117D  1683               	bsf	3,5	;RP0=1, select bank1
  4377     117E  1303               	bcf	3,6	;RP1=0, select bank1
  4378     117F  1898               	btfsc	24,1	;volatile
  4379     1180  3001               	movlw	1
  4380     1181                     l318:
  4381     1181  0008               	return
  4382     1182                     __end_of_UART_TX_Empty:
  4383                           
  4384                           	psect	text15
  4385     12EA                     __ptext15:	
  4386 ;; *************** function _SR04_trigger *****************
  4387 ;; Defined at:
  4388 ;;		line 48 in file "HCSR04_lib.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4402 ;;      Params:         0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0
  4404 ;;      Temps:          0       0       1       0       0
  4405 ;;      Totals:         0       0       1       0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; Hardware stack levels required when called: 2
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_SR04_Distance
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416     12EA                     _SR04_trigger:	
  4417                           ;psect for function _SR04_trigger
  4418                           
  4419     12EA                     l2652:	
  4420                           ;incstack = 0
  4421                           ; Regs used in _SR04_trigger: [wreg+status,2]
  4422                           
  4423                           
  4424                           ;HCSR04_lib.c: 50:     TMR1H = 0;
  4425     12EA  1283               	bcf	3,5	;RP0=0, select bank0
  4426     12EB  1303               	bcf	3,6	;RP1=0, select bank0
  4427     12EC  018F               	clrf	15	;volatile
  4428                           
  4429                           ;HCSR04_lib.c: 51:     TMR1L = 0;
  4430     12ED  018E               	clrf	14	;volatile
  4431     12EE                     l2654:
  4432                           
  4433                           ;HCSR04_lib.c: 54:     RB1 = 0;
  4434     12EE  1086               	bcf	6,1	;volatile
  4435     12EF                     l2656:
  4436                           
  4437                           ;HCSR04_lib.c: 55:     _delay((unsigned long)((2)*(12000000/4000000.0)));
  4438     12EF  2AF0               	nop2	;2 cycle nop
  4439     12F0  2AF1               	nop2	;2 cycle nop
  4440     12F1  2AF2               	nop2	;2 cycle nop
  4441     12F2                     l2658:
  4442                           
  4443                           ;HCSR04_lib.c: 56:     RB1 = 1;
  4444     12F2  1283               	bcf	3,5	;RP0=0, select bank0
  4445     12F3  1303               	bcf	3,6	;RP1=0, select bank0
  4446     12F4  1486               	bsf	6,1	;volatile
  4447     12F5                     l2660:
  4448                           
  4449                           ;HCSR04_lib.c: 57:     _delay((unsigned long)((10)*(12000000/4000000.0)));
  4450     12F5  3009               	movlw	9
  4451     12F6  1683               	bsf	3,5	;RP0=1, select bank1
  4452     12F7  1303               	bcf	3,6	;RP1=0, select bank1
  4453     12F8  00A0               	movwf	??_SR04_trigger^(0+128)
  4454     12F9                     u5377:
  4455     12F9  0BA0               	decfsz	??_SR04_trigger^(0+128),f
  4456     12FA  2AF9               	goto	u5377
  4457     12FB                     l2662:
  4458                           
  4459                           ;HCSR04_lib.c: 58:     RB1 = 0;
  4460     12FB  1283               	bcf	3,5	;RP0=0, select bank0
  4461     12FC  1303               	bcf	3,6	;RP1=0, select bank0
  4462     12FD  1086               	bcf	6,1	;volatile
  4463     12FE                     l132:
  4464     12FE  0008               	return
  4465     12FF                     __end_of_SR04_trigger:
  4466                           
  4467                           	psect	text16
  4468     14E7                     __ptext16:	
  4469 ;; *************** function _LCD_Write_String *****************
  4470 ;; Defined at:
  4471 ;;		line 137 in file "I2C_LCD.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  Str             2    6[BANK1 ] PTR unsigned char 
  4474 ;;		 -> STR_11(20), out(20), STR_7(11), STR_6(20), 
  4475 ;;		 -> STR_5(18), STR_4(18), STR_3(15), 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  i               2   11[BANK1 ] int 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         0       0       2       0       0
  4488 ;;      Locals:         0       0       2       0       0
  4489 ;;      Temps:          0       0       3       0       0
  4490 ;;      Totals:         0       0       7       0       0
  4491 ;;Total ram usage:        7 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 7
  4494 ;; This function calls:
  4495 ;;		_LCD_Write_Char
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;;		_SR04_Distance
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502     14E7                     _LCD_Write_String:	
  4503                           ;psect for function _LCD_Write_String
  4504                           
  4505     14E7                     l2644:	
  4506                           ;incstack = 0
  4507 ;; hardware stack exceeded
  4508                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4509                           
  4510                           
  4511                           ;I2C_LCD.c: 137: void LCD_Write_String(char *Str);I2C_LCD.c: 138: {;I2C_LCD.c: 139:     
      +                          for (int i = 0; Str[i] != '\0'; i++)
  4512     14E7  1683               	bsf	3,5	;RP0=1, select bank1
  4513     14E8  1303               	bcf	3,6	;RP1=0, select bank1
  4514     14E9  01AB               	clrf	LCD_Write_String@i^(0+128)
  4515     14EA  01AC               	clrf	(LCD_Write_String@i+1)^(0+128)
  4516     14EB  2D18               	goto	l2650
  4517     14EC                     l2646:
  4518                           
  4519                           ;I2C_LCD.c: 140:         LCD_Write_Char(Str[i]);
  4520     14EC  1683               	bsf	3,5	;RP0=1, select bank1
  4521     14ED  1303               	bcf	3,6	;RP1=0, select bank1
  4522     14EE  082B               	movf	LCD_Write_String@i^(0+128),w
  4523     14EF  0726               	addwf	LCD_Write_String@Str^(0+128),w
  4524     14F0  00A9               	movwf	(??_LCD_Write_String+1)^(0+128)
  4525     14F1  0827               	movf	(LCD_Write_String@Str+1)^(0+128),w
  4526     14F2  00A8               	movwf	??_LCD_Write_String^(0+128)
  4527     14F3  1803               	skipnc
  4528     14F4  0AA8               	incf	??_LCD_Write_String^(0+128),f
  4529     14F5  1FAB               	btfss	LCD_Write_String@i^(0+128),7
  4530     14F6  2CF8               	goto	u3140
  4531     14F7  03A8               	decf	??_LCD_Write_String^(0+128),f
  4532     14F8                     u3140:
  4533     14F8  1683               	bsf	3,5	;RP0=1, select bank1
  4534     14F9  1303               	bcf	3,6	;RP1=0, select bank1
  4535     14FA  0828               	movf	??_LCD_Write_String^(0+128),w
  4536     14FB  00AA               	movwf	((??_LCD_Write_String+1)^(0+128)+1)
  4537     14FC  082A               	movf	(??_LCD_Write_String+2)^(0+128),w
  4538     14FD  1283               	bcf	3,5	;RP0=0, select bank0
  4539     14FE  1303               	bcf	3,6	;RP1=0, select bank0
  4540     14FF  00FF               	movwf	btemp+1
  4541     1500  1683               	bsf	3,5	;RP0=1, select bank1
  4542     1501  1303               	bcf	3,6	;RP1=0, select bank1
  4543     1502  0829               	movf	(??_LCD_Write_String+1)^(0+128),w
  4544     1503  0084               	movwf	4
  4545     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4546     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4547     1506  160A  118A  2100  160A  118A  	fcall	stringtab
  4548     150B  160A  118A  239B  160A  118A  	fcall	_LCD_Write_Char
  4549     1510                     l2648:
  4550     1510  3001               	movlw	1
  4551     1511  1683               	bsf	3,5	;RP0=1, select bank1
  4552     1512  1303               	bcf	3,6	;RP1=0, select bank1
  4553     1513  07AB               	addwf	LCD_Write_String@i^(0+128),f
  4554     1514  1803               	skipnc
  4555     1515  0AAC               	incf	(LCD_Write_String@i+1)^(0+128),f
  4556     1516  3000               	movlw	0
  4557     1517  07AC               	addwf	(LCD_Write_String@i+1)^(0+128),f
  4558     1518                     l2650:
  4559     1518  082B               	movf	LCD_Write_String@i^(0+128),w
  4560     1519  0726               	addwf	LCD_Write_String@Str^(0+128),w
  4561     151A  00A9               	movwf	(??_LCD_Write_String+1)^(0+128)
  4562     151B  0827               	movf	(LCD_Write_String@Str+1)^(0+128),w
  4563     151C  00A8               	movwf	??_LCD_Write_String^(0+128)
  4564     151D  1803               	skipnc
  4565     151E  0AA8               	incf	??_LCD_Write_String^(0+128),f
  4566     151F  1FAB               	btfss	LCD_Write_String@i^(0+128),7
  4567     1520  2D22               	goto	u3150
  4568     1521  03A8               	decf	??_LCD_Write_String^(0+128),f
  4569     1522                     u3150:
  4570     1522  1683               	bsf	3,5	;RP0=1, select bank1
  4571     1523  1303               	bcf	3,6	;RP1=0, select bank1
  4572     1524  0828               	movf	??_LCD_Write_String^(0+128),w
  4573     1525  00AA               	movwf	((??_LCD_Write_String+1)^(0+128)+1)
  4574     1526  082A               	movf	(??_LCD_Write_String+2)^(0+128),w
  4575     1527  1283               	bcf	3,5	;RP0=0, select bank0
  4576     1528  1303               	bcf	3,6	;RP1=0, select bank0
  4577     1529  00FF               	movwf	btemp+1
  4578     152A  1683               	bsf	3,5	;RP0=1, select bank1
  4579     152B  1303               	bcf	3,6	;RP1=0, select bank1
  4580     152C  0829               	movf	(??_LCD_Write_String+1)^(0+128),w
  4581     152D  0084               	movwf	4
  4582     152E  1283               	bcf	3,5	;RP0=0, select bank0
  4583     152F  1303               	bcf	3,6	;RP1=0, select bank0
  4584     1530  160A  118A  2100  160A  118A  	fcall	stringtab
  4585     1535  3A00               	xorlw	0
  4586     1536  1D03               	skipz
  4587     1537  2D39               	goto	u3161
  4588     1538  2D3A               	goto	u3160
  4589     1539                     u3161:
  4590     1539  2CEC               	goto	l2646
  4591     153A                     u3160:
  4592     153A                     l261:
  4593     153A  0008               	return
  4594     153B                     __end_of_LCD_Write_String:
  4595                           
  4596                           	psect	text17
  4597     139B                     __ptext17:	
  4598 ;; *************** function _LCD_Write_Char *****************
  4599 ;; Defined at:
  4600 ;;		line 130 in file "I2C_LCD.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  Data            1    wreg     unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  Data            1    5[BANK1 ] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0, pclath, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4614 ;;      Params:         0       0       0       0       0
  4615 ;;      Locals:         0       0       1       0       0
  4616 ;;      Temps:          0       0       1       0       0
  4617 ;;      Totals:         0       0       2       0       0
  4618 ;;Total ram usage:        2 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 6
  4621 ;; This function calls:
  4622 ;;		_LCD_Write_4Bit
  4623 ;; This function is called by:
  4624 ;;		_LCD_Write_String
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628     139B                     _LCD_Write_Char:	
  4629                           ;psect for function _LCD_Write_Char
  4630                           
  4631                           
  4632                           ;incstack = 0
  4633 ;; hardware stack exceeded
  4634                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4635                           ;LCD_Write_Char@Data stored from wreg
  4636     139B  1683               	bsf	3,5	;RP0=1, select bank1
  4637     139C  1303               	bcf	3,6	;RP1=0, select bank1
  4638     139D  00A5               	movwf	LCD_Write_Char@Data^(0+128)
  4639     139E                     l2596:
  4640                           
  4641                           ;I2C_LCD.c: 130: void LCD_Write_Char(char Data);I2C_LCD.c: 131: {;I2C_LCD.c: 132:     RS
      +                           = 1;
  4642     139E  3001               	movlw	1
  4643     139F  1283               	bcf	3,5	;RP0=0, select bank0
  4644     13A0  1303               	bcf	3,6	;RP1=0, select bank0
  4645     13A1  00D1               	movwf	_RS
  4646     13A2                     l2598:
  4647                           
  4648                           ;I2C_LCD.c: 133:     LCD_Write_4Bit(Data & 0xF0);
  4649     13A2  1683               	bsf	3,5	;RP0=1, select bank1
  4650     13A3  1303               	bcf	3,6	;RP1=0, select bank1
  4651     13A4  0825               	movf	LCD_Write_Char@Data^(0+128),w
  4652     13A5  39F0               	andlw	240
  4653     13A6  160A  118A  2315  160A  118A  	fcall	_LCD_Write_4Bit
  4654                           
  4655                           ;I2C_LCD.c: 134:     LCD_Write_4Bit((Data << 4) & 0xF0);
  4656     13AB  1683               	bsf	3,5	;RP0=1, select bank1
  4657     13AC  1303               	bcf	3,6	;RP1=0, select bank1
  4658     13AD  0825               	movf	LCD_Write_Char@Data^(0+128),w
  4659     13AE  00A4               	movwf	??_LCD_Write_Char^(0+128)
  4660     13AF  3003               	movlw	3
  4661     13B0                     u3095:
  4662     13B0  1003               	clrc
  4663     13B1  0DA4               	rlf	??_LCD_Write_Char^(0+128),f
  4664     13B2  3EFF               	addlw	-1
  4665     13B3  1D03               	skipz
  4666     13B4  2BB0               	goto	u3095
  4667     13B5  1003               	clrc
  4668     13B6  0D24               	rlf	??_LCD_Write_Char^(0+128),w
  4669     13B7  39F0               	andlw	240
  4670     13B8  160A  118A  2315  160A  118A  	fcall	_LCD_Write_4Bit
  4671     13BD                     l255:
  4672     13BD  0008               	return
  4673     13BE                     __end_of_LCD_Write_Char:
  4674                           
  4675                           	psect	text18
  4676     140C                     __ptext18:	
  4677 ;; *************** function _LCD_Set_Cursor *****************
  4678 ;; Defined at:
  4679 ;;		line 151 in file "I2C_LCD.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  ROW             1    wreg     unsigned char 
  4682 ;;  COL             1    6[BANK1 ] unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  ROW             1    7[BANK1 ] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         0       0       1       0       0
  4695 ;;      Locals:         0       0       1       0       0
  4696 ;;      Temps:          0       0       0       0       0
  4697 ;;      Totals:         0       0       2       0       0
  4698 ;;Total ram usage:        2 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 7
  4701 ;; This function calls:
  4702 ;;		_LCD_CMD
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;;		_SR04_Distance
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709     140C                     _LCD_Set_Cursor:	
  4710                           ;psect for function _LCD_Set_Cursor
  4711                           
  4712                           
  4713                           ;incstack = 0
  4714 ;; hardware stack exceeded
  4715                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4716                           ;LCD_Set_Cursor@ROW stored from wreg
  4717     140C  1683               	bsf	3,5	;RP0=1, select bank1
  4718     140D  1303               	bcf	3,6	;RP1=0, select bank1
  4719     140E  00A7               	movwf	LCD_Set_Cursor@ROW^(0+128)
  4720     140F                     l2632:
  4721                           
  4722                           ;I2C_LCD.c: 151: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 15
      +                          2: {;I2C_LCD.c: 153:     switch (ROW)
  4723     140F  2C30               	goto	l2642
  4724     1410                     l2634:
  4725                           
  4726                           ;I2C_LCD.c: 156:         LCD_CMD(0xC0 + COL - 1);
  4727     1410  0826               	movf	LCD_Set_Cursor@COL^(0+128),w
  4728     1411  3EBF               	addlw	191
  4729     1412  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  4730                           
  4731                           ;I2C_LCD.c: 157:         break;
  4732     1417  2C3B               	goto	l273
  4733     1418                     l2636:
  4734                           
  4735                           ;I2C_LCD.c: 159:         LCD_CMD(0x94 + COL - 1);
  4736     1418  0826               	movf	LCD_Set_Cursor@COL^(0+128),w
  4737     1419  3E93               	addlw	147
  4738     141A  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  4739                           
  4740                           ;I2C_LCD.c: 160:         break;
  4741     141F  2C3B               	goto	l273
  4742     1420                     l2638:
  4743                           
  4744                           ;I2C_LCD.c: 162:         LCD_CMD(0xD4 + COL - 1);
  4745     1420  0826               	movf	LCD_Set_Cursor@COL^(0+128),w
  4746     1421  3ED3               	addlw	211
  4747     1422  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  4748                           
  4749                           ;I2C_LCD.c: 163:         break;
  4750     1427  2C3B               	goto	l273
  4751     1428                     l2640:
  4752                           
  4753                           ;I2C_LCD.c: 166:         LCD_CMD(0x80 + COL - 1);
  4754     1428  0826               	movf	LCD_Set_Cursor@COL^(0+128),w
  4755     1429  3E7F               	addlw	127
  4756     142A  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  4757                           
  4758                           ;I2C_LCD.c: 167:     }
  4759     142F  2C3B               	goto	l273
  4760     1430                     l2642:
  4761     1430  0827               	movf	LCD_Set_Cursor@ROW^(0+128),w
  4762                           
  4763                           ; Switch size 1, requested type "simple"
  4764                           ; Number of cases is 3, Range of values is 2 to 4
  4765                           ; switch strategies available:
  4766                           ; Name         Instructions Cycles
  4767                           ; simple_byte           10     6 (average)
  4768                           ; direct_byte           20    11 (fixed)
  4769                           ; jumptable            263     9 (fixed)
  4770                           ;	Chosen strategy is simple_byte
  4771     1431  3A02               	xorlw	2	; case 2
  4772     1432  1903               	skipnz
  4773     1433  2C10               	goto	l2634
  4774     1434  3A01               	xorlw	1	; case 3
  4775     1435  1903               	skipnz
  4776     1436  2C18               	goto	l2636
  4777     1437  3A07               	xorlw	7	; case 4
  4778     1438  1903               	skipnz
  4779     1439  2C20               	goto	l2638
  4780     143A  2C28               	goto	l2640
  4781     143B                     l273:
  4782     143B  0008               	return
  4783     143C                     __end_of_LCD_Set_Cursor:
  4784                           
  4785                           	psect	text19
  4786     14A3                     __ptext19:	
  4787 ;; *************** function _BUZZER_MultipleBeeps *****************
  4788 ;; Defined at:
  4789 ;;		line 44 in file "BUZZER.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  count           1    wreg     unsigned char 
  4792 ;;  beep_duratio    2    6[BANK1 ] unsigned short 
  4793 ;;  pause_durati    2    8[BANK1 ] unsigned short 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  count           1   12[BANK1 ] unsigned char 
  4796 ;;  i               1   13[BANK1 ] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       4       0       0
  4807 ;;      Locals:         0       0       2       0       0
  4808 ;;      Temps:          0       0       2       0       0
  4809 ;;      Totals:         0       0       8       0       0
  4810 ;;Total ram usage:        8 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 3
  4813 ;; This function calls:
  4814 ;;		_BUZZER_Off
  4815 ;;		_BUZZER_On
  4816 ;;		_custom_delay_ms
  4817 ;; This function is called by:
  4818 ;;		_SR04_Distance
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822     14A3                     _BUZZER_MultipleBeeps:	
  4823                           ;psect for function _BUZZER_MultipleBeeps
  4824                           
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _BUZZER_MultipleBeeps: [wreg+status,2+status,0+pclath+cstack]
  4828                           ;BUZZER_MultipleBeeps@count stored from wreg
  4829     14A3  1683               	bsf	3,5	;RP0=1, select bank1
  4830     14A4  1303               	bcf	3,6	;RP1=0, select bank1
  4831     14A5  00AC               	movwf	BUZZER_MultipleBeeps@count^(0+128)
  4832     14A6                     l2682:
  4833                           
  4834                           ;BUZZER.c: 44: void BUZZER_MultipleBeeps(uint8_t count, uint16_t beep_duration, uint16_t
      +                           pause_duration);BUZZER.c: 45: {;BUZZER.c: 46:     for (uint8_t i = 0; i < count; i++)
  4835     14A6  01AD               	clrf	BUZZER_MultipleBeeps@i^(0+128)
  4836     14A7  2CE0               	goto	l2692
  4837     14A8                     l2684:
  4838                           
  4839                           ;BUZZER.c: 47:     {;BUZZER.c: 48:         BUZZER_On();
  4840     14A8  160A  118A  2182  160A  118A  	fcall	_BUZZER_On
  4841                           
  4842                           ;BUZZER.c: 49:         custom_delay_ms(beep_duration);
  4843     14AD  1683               	bsf	3,5	;RP0=1, select bank1
  4844     14AE  1303               	bcf	3,6	;RP1=0, select bank1
  4845     14AF  0827               	movf	(BUZZER_MultipleBeeps@beep_duration+1)^(0+128),w
  4846     14B0  00A1               	movwf	(custom_delay_ms@ms+1)^(0+128)
  4847     14B1  0826               	movf	BUZZER_MultipleBeeps@beep_duration^(0+128),w
  4848     14B2  00A0               	movwf	custom_delay_ms@ms^(0+128)
  4849     14B3  160A  118A  2378  160A  118A  	fcall	_custom_delay_ms
  4850     14B8                     l2686:
  4851                           
  4852                           ;BUZZER.c: 50:         BUZZER_Off();
  4853     14B8  160A  118A  218C  160A  118A  	fcall	_BUZZER_Off
  4854                           
  4855                           ;BUZZER.c: 51:         if (i < count - 1)
  4856     14BD  1683               	bsf	3,5	;RP0=1, select bank1
  4857     14BE  1303               	bcf	3,6	;RP1=0, select bank1
  4858     14BF  082C               	movf	BUZZER_MultipleBeeps@count^(0+128),w
  4859     14C0  3EFF               	addlw	255
  4860     14C1  00AA               	movwf	??_BUZZER_MultipleBeeps^(0+128)
  4861     14C2  30FF               	movlw	255
  4862     14C3  1803               	skipnc
  4863     14C4  3000               	movlw	0
  4864     14C5  00AB               	movwf	(??_BUZZER_MultipleBeeps^(0+128)+1)
  4865     14C6  082B               	movf	(??_BUZZER_MultipleBeeps+1)^(0+128),w
  4866     14C7  3A80               	xorlw	128
  4867     14C8  3C80               	sublw	128
  4868     14C9  1D03               	skipz
  4869     14CA  2CCD               	goto	u3175
  4870     14CB  082A               	movf	??_BUZZER_MultipleBeeps^(0+128),w
  4871     14CC  022D               	subwf	BUZZER_MultipleBeeps@i^(0+128),w
  4872     14CD                     u3175:
  4873     14CD  1803               	skipnc
  4874     14CE  2CD0               	goto	u3171
  4875     14CF  2CD1               	goto	u3170
  4876     14D0                     u3171:
  4877     14D0  2CDC               	goto	l2690
  4878     14D1                     u3170:
  4879     14D1                     l2688:
  4880                           
  4881                           ;BUZZER.c: 52:         {;BUZZER.c: 53:             custom_delay_ms(pause_duration);
  4882     14D1  1683               	bsf	3,5	;RP0=1, select bank1
  4883     14D2  1303               	bcf	3,6	;RP1=0, select bank1
  4884     14D3  0829               	movf	(BUZZER_MultipleBeeps@pause_duration+1)^(0+128),w
  4885     14D4  00A1               	movwf	(custom_delay_ms@ms+1)^(0+128)
  4886     14D5  0828               	movf	BUZZER_MultipleBeeps@pause_duration^(0+128),w
  4887     14D6  00A0               	movwf	custom_delay_ms@ms^(0+128)
  4888     14D7  160A  118A  2378  160A  118A  	fcall	_custom_delay_ms
  4889     14DC                     l2690:
  4890                           
  4891                           ;BUZZER.c: 55:     }
  4892     14DC  3001               	movlw	1
  4893     14DD  1683               	bsf	3,5	;RP0=1, select bank1
  4894     14DE  1303               	bcf	3,6	;RP1=0, select bank1
  4895     14DF  07AD               	addwf	BUZZER_MultipleBeeps@i^(0+128),f
  4896     14E0                     l2692:
  4897     14E0  082C               	movf	BUZZER_MultipleBeeps@count^(0+128),w
  4898     14E1  022D               	subwf	BUZZER_MultipleBeeps@i^(0+128),w
  4899     14E2  1C03               	skipc
  4900     14E3  2CE5               	goto	u3181
  4901     14E4  2CE6               	goto	u3180
  4902     14E5                     u3181:
  4903     14E5  2CA8               	goto	l2684
  4904     14E6                     u3180:
  4905     14E6                     l375:
  4906     14E6  0008               	return
  4907     14E7                     __end_of_BUZZER_MultipleBeeps:
  4908                           
  4909                           	psect	text20
  4910     12FF                     __ptext20:	
  4911 ;; *************** function _BUZZER_Beep *****************
  4912 ;; Defined at:
  4913 ;;		line 37 in file "BUZZER.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  duration        2    6[BANK1 ] unsigned short 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4927 ;;      Params:         0       0       2       0       0
  4928 ;;      Locals:         0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0
  4930 ;;      Totals:         0       0       2       0       0
  4931 ;;Total ram usage:        2 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 3
  4934 ;; This function calls:
  4935 ;;		_BUZZER_Off
  4936 ;;		_BUZZER_On
  4937 ;;		_custom_delay_ms
  4938 ;; This function is called by:
  4939 ;;		_SR04_Distance
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943     12FF                     _BUZZER_Beep:	
  4944                           ;psect for function _BUZZER_Beep
  4945                           
  4946     12FF                     l2664:	
  4947                           ;incstack = 0
  4948                           ; Regs used in _BUZZER_Beep: [wreg+status,2+status,0+pclath+cstack]
  4949                           
  4950                           
  4951                           ;BUZZER.c: 37: void BUZZER_Beep(uint16_t duration);BUZZER.c: 38: {;BUZZER.c: 39:     BUZ
      +                          ZER_On();
  4952     12FF  160A  118A  2182  160A  118A  	fcall	_BUZZER_On
  4953                           
  4954                           ;BUZZER.c: 40:     custom_delay_ms(duration);
  4955     1304  1683               	bsf	3,5	;RP0=1, select bank1
  4956     1305  1303               	bcf	3,6	;RP1=0, select bank1
  4957     1306  0827               	movf	(BUZZER_Beep@duration+1)^(0+128),w
  4958     1307  00A1               	movwf	(custom_delay_ms@ms+1)^(0+128)
  4959     1308  0826               	movf	BUZZER_Beep@duration^(0+128),w
  4960     1309  00A0               	movwf	custom_delay_ms@ms^(0+128)
  4961     130A  160A  118A  2378  160A  118A  	fcall	_custom_delay_ms
  4962     130F                     l2666:
  4963                           
  4964                           ;BUZZER.c: 41:     BUZZER_Off();
  4965     130F  160A  118A  218C  160A  118A  	fcall	_BUZZER_Off
  4966     1314                     l368:
  4967     1314  0008               	return
  4968     1315                     __end_of_BUZZER_Beep:
  4969                           
  4970                           	psect	text21
  4971     1378                     __ptext21:	
  4972 ;; *************** function _custom_delay_ms *****************
  4973 ;; Defined at:
  4974 ;;		line 12 in file "BUZZER.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  ms              2    0[BANK1 ] unsigned int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  i               2    4[BANK1 ] unsigned int 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         0       0       2       0       0
  4989 ;;      Locals:         0       0       2       0       0
  4990 ;;      Temps:          0       0       2       0       0
  4991 ;;      Totals:         0       0       6       0       0
  4992 ;;Total ram usage:        6 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 2
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_BUZZER_Beep
  4999 ;;		_BUZZER_MultipleBeeps
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003     1378                     _custom_delay_ms:	
  5004                           ;psect for function _custom_delay_ms
  5005                           
  5006     1378                     l2606:	
  5007                           ;incstack = 0
  5008                           ; Regs used in _custom_delay_ms: [wreg+status,2]
  5009                           
  5010                           
  5011                           ;BUZZER.c: 12: void custom_delay_ms(unsigned int ms);BUZZER.c: 13: {;BUZZER.c: 14:     u
      +                          nsigned int i;;BUZZER.c: 15:     for (i = 0; i < ms; i++)
  5012     1378  1683               	bsf	3,5	;RP0=1, select bank1
  5013     1379  1303               	bcf	3,6	;RP1=0, select bank1
  5014     137A  01A4               	clrf	custom_delay_ms@i^(0+128)
  5015     137B  01A5               	clrf	(custom_delay_ms@i+1)^(0+128)
  5016     137C  2B90               	goto	l353
  5017     137D                     l2608:
  5018                           
  5019                           ;BUZZER.c: 16:     {;BUZZER.c: 17:         _delay((unsigned long)((1)*(12000000/4000.0))
      +                          );
  5020     137D  3004               	movlw	4
  5021     137E  1683               	bsf	3,5	;RP0=1, select bank1
  5022     137F  1303               	bcf	3,6	;RP1=0, select bank1
  5023     1380  00A3               	movwf	(??_custom_delay_ms^(0+128)+1)
  5024     1381  30E3               	movlw	227
  5025     1382  00A2               	movwf	??_custom_delay_ms^(0+128)
  5026     1383                     u5387:
  5027     1383  0BA2               	decfsz	??_custom_delay_ms^(0+128),f
  5028     1384  2B83               	goto	u5387
  5029     1385  0BA3               	decfsz	(??_custom_delay_ms^(0+128)+1),f
  5030     1386  2B83               	goto	u5387
  5031     1387  2B88               	nop2
  5032                           
  5033                           ;BUZZER.c: 18:     }
  5034     1388  3001               	movlw	1
  5035     1389  1683               	bsf	3,5	;RP0=1, select bank1
  5036     138A  1303               	bcf	3,6	;RP1=0, select bank1
  5037     138B  07A4               	addwf	custom_delay_ms@i^(0+128),f
  5038     138C  1803               	skipnc
  5039     138D  0AA5               	incf	(custom_delay_ms@i+1)^(0+128),f
  5040     138E  3000               	movlw	0
  5041     138F  07A5               	addwf	(custom_delay_ms@i+1)^(0+128),f
  5042     1390                     l353:
  5043     1390  0821               	movf	(custom_delay_ms@ms+1)^(0+128),w
  5044     1391  0225               	subwf	(custom_delay_ms@i+1)^(0+128),w
  5045     1392  1D03               	skipz
  5046     1393  2B96               	goto	u3115
  5047     1394  0820               	movf	custom_delay_ms@ms^(0+128),w
  5048     1395  0224               	subwf	custom_delay_ms@i^(0+128),w
  5049     1396                     u3115:
  5050     1396  1C03               	skipc
  5051     1397  2B99               	goto	u3111
  5052     1398  2B9A               	goto	u3110
  5053     1399                     u3111:
  5054     1399  2B7D               	goto	l2608
  5055     139A                     u3110:
  5056     139A                     l356:
  5057     139A  0008               	return
  5058     139B                     __end_of_custom_delay_ms:
  5059                           
  5060                           	psect	text22
  5061     1182                     __ptext22:	
  5062 ;; *************** function _BUZZER_On *****************
  5063 ;; Defined at:
  5064 ;;		line 32 in file "BUZZER.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5078 ;;      Params:         0       0       0       0       0
  5079 ;;      Locals:         0       0       0       0       0
  5080 ;;      Temps:          0       0       0       0       0
  5081 ;;      Totals:         0       0       0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used: 1
  5084 ;; Hardware stack levels required when called: 2
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_BUZZER_Beep
  5089 ;;		_BUZZER_MultipleBeeps
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093     1182                     _BUZZER_On:	
  5094                           ;psect for function _BUZZER_On
  5095                           
  5096     1182                     l2612:	
  5097                           ;incstack = 0
  5098                           ; Regs used in _BUZZER_On: [wreg+status,2+status,0]
  5099                           
  5100                           
  5101                           ;BUZZER.c: 34:     PORTD &= ~(1 << 6);
  5102     1182  30BF               	movlw	191
  5103     1183  1283               	bcf	3,5	;RP0=0, select bank0
  5104     1184  1303               	bcf	3,6	;RP1=0, select bank0
  5105     1185  0588               	andwf	8,f	;volatile
  5106     1186                     l365:
  5107     1186  0008               	return
  5108     1187                     __end_of_BUZZER_On:
  5109                           
  5110                           	psect	text23
  5111     118C                     __ptext23:	
  5112 ;; *************** function _BUZZER_Off *****************
  5113 ;; Defined at:
  5114 ;;		line 27 in file "BUZZER.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		None
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5128 ;;      Params:         0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0
  5131 ;;      Totals:         0       0       0       0       0
  5132 ;;Total ram usage:        0 bytes
  5133 ;; Hardware stack levels used: 1
  5134 ;; Hardware stack levels required when called: 2
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_BUZZER_Beep
  5139 ;;		_BUZZER_MultipleBeeps
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143     118C                     _BUZZER_Off:	
  5144                           ;psect for function _BUZZER_Off
  5145                           
  5146     118C                     l2610:	
  5147                           ;incstack = 0
  5148                           ; Regs used in _BUZZER_Off: []
  5149                           
  5150                           
  5151                           ;BUZZER.c: 29:     PORTD |= (1 << 6);
  5152     118C  1283               	bcf	3,5	;RP0=0, select bank0
  5153     118D  1303               	bcf	3,6	;RP1=0, select bank0
  5154     118E  1708               	bsf	8,6	;volatile
  5155     118F                     l362:
  5156     118F  0008               	return
  5157     1190                     __end_of_BUZZER_Off:
  5158                           
  5159                           	psect	text24
  5160     1187                     __ptext24:	
  5161 ;; *************** function _LED_On *****************
  5162 ;; Defined at:
  5163 ;;		line 70 in file "main.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0
  5180 ;;      Totals:         0       0       0       0       0
  5181 ;;Total ram usage:        0 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; Hardware stack levels required when called: 2
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_checkPauseButton
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191     1187                     _LED_On:	
  5192                           ;psect for function _LED_On
  5193                           
  5194     1187                     l2736:	
  5195                           ;incstack = 0
  5196                           ; Regs used in _LED_On: [wreg+status,2+status,0]
  5197                           
  5198                           
  5199                           ;main.c: 72:     PORTC &= ~(1 << 2);
  5200     1187  30FB               	movlw	251
  5201     1188  1283               	bcf	3,5	;RP0=0, select bank0
  5202     1189  1303               	bcf	3,6	;RP1=0, select bank0
  5203     118A  0587               	andwf	7,f	;volatile
  5204     118B                     l50:
  5205     118B  0008               	return
  5206     118C                     __end_of_LED_On:
  5207                           
  5208                           	psect	text25
  5209     1190                     __ptext25:	
  5210 ;; *************** function _LED_Off *****************
  5211 ;; Defined at:
  5212 ;;		line 66 in file "main.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		None
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5226 ;;      Params:         0       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0
  5229 ;;      Totals:         0       0       0       0       0
  5230 ;;Total ram usage:        0 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 2
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_checkPauseButton
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240     1190                     _LED_Off:	
  5241                           ;psect for function _LED_Off
  5242                           
  5243     1190                     l2734:	
  5244                           ;incstack = 0
  5245                           ; Regs used in _LED_Off: []
  5246                           
  5247                           
  5248                           ;main.c: 68:     PORTC |= (1 << 2);
  5249     1190  1283               	bcf	3,5	;RP0=0, select bank0
  5250     1191  1303               	bcf	3,6	;RP1=0, select bank0
  5251     1192  1507               	bsf	7,2	;volatile
  5252     1193                     l47:
  5253     1193  0008               	return
  5254     1194                     __end_of_LED_Off:
  5255                           
  5256                           	psect	text26
  5257     1112                     __ptext26:	
  5258 ;; *************** function _UART_TX_Init *****************
  5259 ;; Defined at:
  5260 ;;		line 12 in file "UART.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		None
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5274 ;;      Params:         0       0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0
  5277 ;;      Totals:         0       0       0       0       0
  5278 ;;Total ram usage:        0 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 2
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_main
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288     1112                     _UART_TX_Init:	
  5289                           ;psect for function _UART_TX_Init
  5290                           
  5291     1112                     l3370:	
  5292                           ;incstack = 0
  5293                           ; Regs used in _UART_TX_Init: []
  5294                           
  5295                           
  5296                           ;UART.c: 15:     BRGH = 1;
  5297     1112  1683               	bsf	3,5	;RP0=1, select bank1
  5298     1113  1303               	bcf	3,6	;RP1=0, select bank1
  5299     1114  1518               	bsf	24,2	;volatile
  5300                           
  5301                           ;UART.c: 16:     SPBRG = 77;
  5302     1115  304D               	movlw	77
  5303     1116  0099               	movwf	25	;volatile
  5304                           
  5305                           ;UART.c: 19:     SYNC = 0;
  5306     1117  1218               	bcf	24,4	;volatile
  5307                           
  5308                           ;UART.c: 20:     SPEN = 1;
  5309     1118  1283               	bcf	3,5	;RP0=0, select bank0
  5310     1119  1303               	bcf	3,6	;RP1=0, select bank0
  5311     111A  1798               	bsf	24,7	;volatile
  5312                           
  5313                           ;UART.c: 23:     TRISC6 = 0;
  5314     111B  1683               	bsf	3,5	;RP0=1, select bank1
  5315     111C  1303               	bcf	3,6	;RP1=0, select bank1
  5316     111D  1307               	bcf	7,6	;volatile
  5317                           
  5318                           ;UART.c: 24:     TRISC7 = 1;
  5319     111E  1787               	bsf	7,7	;volatile
  5320                           
  5321                           ;UART.c: 27:     TXEN = 1;
  5322     111F  1698               	bsf	24,5	;volatile
  5323                           
  5324                           ;UART.c: 29:     CREN = 1;
  5325     1120  1283               	bcf	3,5	;RP0=0, select bank0
  5326     1121  1303               	bcf	3,6	;RP1=0, select bank0
  5327     1122  1618               	bsf	24,4	;volatile
  5328     1123                     l315:
  5329     1123  0008               	return
  5330     1124                     __end_of_UART_TX_Init:
  5331                           
  5332                           	psect	text27
  5333     09CE                     __ptext27:	
  5334 ;; *************** function _SR04_init *****************
  5335 ;; Defined at:
  5336 ;;		line 23 in file "HCSR04_lib.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  time_per_tic    4    8[BANK3 ] float 
  5341 ;;  instruction_    4    4[BANK3 ] float 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5351 ;;      Params:         0       0       0       0       0
  5352 ;;      Locals:         0       0       0       8       0
  5353 ;;      Temps:          0       0       0       0       0
  5354 ;;      Totals:         0       0       0       8       0
  5355 ;;Total ram usage:        8 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 4
  5358 ;; This function calls:
  5359 ;;		___fladd
  5360 ;;		___fldiv
  5361 ;;		___flmul
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367     09CE                     _SR04_init:	
  5368                           ;psect for function _SR04_init
  5369                           
  5370     09CE                     l3346:	
  5371                           ;incstack = 0
  5372                           ; Regs used in _SR04_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5373                           
  5374                           
  5375                           ;HCSR04_lib.c: 25:     ANSELH = 0x00;
  5376     09CE  1683               	bsf	3,5	;RP0=1, select bank3
  5377     09CF  1703               	bsf	3,6	;RP1=1, select bank3
  5378     09D0  0189               	clrf	9	;volatile
  5379     09D1                     l3348:
  5380                           
  5381                           ;HCSR04_lib.c: 26:     TRISB1 = 0;
  5382     09D1  1683               	bsf	3,5	;RP0=1, select bank1
  5383     09D2  1303               	bcf	3,6	;RP1=0, select bank1
  5384     09D3  1086               	bcf	6,1	;volatile
  5385     09D4                     l3350:
  5386                           
  5387                           ;HCSR04_lib.c: 27:     TRISB0 = 1;
  5388     09D4  1406               	bsf	6,0	;volatile
  5389     09D5                     l3352:
  5390                           
  5391                           ;HCSR04_lib.c: 28:     IOCB0 = 1;
  5392     09D5  1416               	bsf	22,0	;volatile
  5393     09D6                     l3354:
  5394                           
  5395                           ;HCSR04_lib.c: 30:     GIE = 1;
  5396     09D6  178B               	bsf	11,7	;volatile
  5397     09D7                     l3356:
  5398                           
  5399                           ;HCSR04_lib.c: 31:     RBIF = 0;
  5400     09D7  100B               	bcf	11,0	;volatile
  5401     09D8                     l3358:
  5402                           
  5403                           ;HCSR04_lib.c: 32:     RBIE = 1;
  5404     09D8  158B               	bsf	11,3	;volatile
  5405                           
  5406                           ;HCSR04_lib.c: 34:     T1CON = 0x00;
  5407     09D9  1283               	bcf	3,5	;RP0=0, select bank0
  5408     09DA  1303               	bcf	3,6	;RP1=0, select bank0
  5409     09DB  0190               	clrf	16	;volatile
  5410     09DC                     l3360:
  5411                           
  5412                           ;HCSR04_lib.c: 36:     float instruction_freq = crystal_freq_mhz * 1000000 / 4;
  5413     09DC  304A               	movlw	74
  5414     09DD  1683               	bsf	3,5	;RP0=1, select bank3
  5415     09DE  1703               	bsf	3,6	;RP1=1, select bank3
  5416     09DF  0097               	movwf	(SR04_init@instruction_freq+3)^(0+384)
  5417     09E0  3037               	movlw	55
  5418     09E1  0096               	movwf	(SR04_init@instruction_freq+2)^(0+384)
  5419     09E2  301B               	movlw	27
  5420     09E3  0095               	movwf	(SR04_init@instruction_freq+1)^(0+384)
  5421     09E4  3000               	movlw	0
  5422     09E5  0094               	movwf	SR04_init@instruction_freq^(0+384)
  5423     09E6                     l3362:
  5424                           
  5425                           ;HCSR04_lib.c: 39:     float time_per_tick_us = (timer_prescaler * 1000000.0) / instruct
      +                          ion_freq;
  5426     09E6  0817               	movf	(SR04_init@instruction_freq+3)^(0+384),w
  5427     09E7  1683               	bsf	3,5	;RP0=1, select bank1
  5428     09E8  1303               	bcf	3,6	;RP1=0, select bank1
  5429     09E9  00C6               	movwf	(___fldiv@a+3)^(0+128)
  5430     09EA  1683               	bsf	3,5	;RP0=1, select bank3
  5431     09EB  1703               	bsf	3,6	;RP1=1, select bank3
  5432     09EC  0816               	movf	(SR04_init@instruction_freq+2)^(0+384),w
  5433     09ED  1683               	bsf	3,5	;RP0=1, select bank1
  5434     09EE  1303               	bcf	3,6	;RP1=0, select bank1
  5435     09EF  00C5               	movwf	(___fldiv@a+2)^(0+128)
  5436     09F0  1683               	bsf	3,5	;RP0=1, select bank3
  5437     09F1  1703               	bsf	3,6	;RP1=1, select bank3
  5438     09F2  0815               	movf	(SR04_init@instruction_freq+1)^(0+384),w
  5439     09F3  1683               	bsf	3,5	;RP0=1, select bank1
  5440     09F4  1303               	bcf	3,6	;RP1=0, select bank1
  5441     09F5  00C4               	movwf	(___fldiv@a+1)^(0+128)
  5442     09F6  1683               	bsf	3,5	;RP0=1, select bank3
  5443     09F7  1703               	bsf	3,6	;RP1=1, select bank3
  5444     09F8  0814               	movf	SR04_init@instruction_freq^(0+384),w
  5445     09F9  1683               	bsf	3,5	;RP0=1, select bank1
  5446     09FA  1303               	bcf	3,6	;RP1=0, select bank1
  5447     09FB  00C3               	movwf	___fldiv@a^(0+128)
  5448     09FC  3049               	movlw	73
  5449     09FD  00CA               	movwf	(___fldiv@b+3)^(0+128)
  5450     09FE  3074               	movlw	116
  5451     09FF  00C9               	movwf	(___fldiv@b+2)^(0+128)
  5452     0A00  3024               	movlw	36
  5453     0A01  00C8               	movwf	(___fldiv@b+1)^(0+128)
  5454     0A02  3000               	movlw	0
  5455     0A03  00C7               	movwf	___fldiv@b^(0+128)
  5456     0A04  120A  158A  2459  120A  158A  	fcall	___fldiv
  5457     0A09  1683               	bsf	3,5	;RP0=1, select bank1
  5458     0A0A  1303               	bcf	3,6	;RP1=0, select bank1
  5459     0A0B  0846               	movf	(?___fldiv+3)^(0+128),w
  5460     0A0C  1683               	bsf	3,5	;RP0=1, select bank3
  5461     0A0D  1703               	bsf	3,6	;RP1=1, select bank3
  5462     0A0E  009B               	movwf	(SR04_init@time_per_tick_us+3)^(0+384)
  5463     0A0F  1683               	bsf	3,5	;RP0=1, select bank1
  5464     0A10  1303               	bcf	3,6	;RP1=0, select bank1
  5465     0A11  0845               	movf	(?___fldiv+2)^(0+128),w
  5466     0A12  1683               	bsf	3,5	;RP0=1, select bank3
  5467     0A13  1703               	bsf	3,6	;RP1=1, select bank3
  5468     0A14  009A               	movwf	(SR04_init@time_per_tick_us+2)^(0+384)
  5469     0A15  1683               	bsf	3,5	;RP0=1, select bank1
  5470     0A16  1303               	bcf	3,6	;RP1=0, select bank1
  5471     0A17  0844               	movf	(?___fldiv+1)^(0+128),w
  5472     0A18  1683               	bsf	3,5	;RP0=1, select bank3
  5473     0A19  1703               	bsf	3,6	;RP1=1, select bank3
  5474     0A1A  0099               	movwf	(SR04_init@time_per_tick_us+1)^(0+384)
  5475     0A1B  1683               	bsf	3,5	;RP0=1, select bank1
  5476     0A1C  1303               	bcf	3,6	;RP1=0, select bank1
  5477     0A1D  0843               	movf	?___fldiv^(0+128),w
  5478     0A1E  1683               	bsf	3,5	;RP0=1, select bank3
  5479     0A1F  1703               	bsf	3,6	;RP1=1, select bank3
  5480     0A20  0098               	movwf	SR04_init@time_per_tick_us^(0+384)
  5481     0A21                     l3364:
  5482                           
  5483                           ;HCSR04_lib.c: 45:     division_factor = 2000000.0 / (time_per_tick_us * sound_speed_cms
      +                          )-1;
  5484     0A21  30BF               	movlw	191
  5485     0A22  1683               	bsf	3,5	;RP0=1, select bank1
  5486     0A23  1303               	bcf	3,6	;RP1=0, select bank1
  5487     0A24  00E0               	movwf	(___fladd@b+3)^(0+128)
  5488     0A25  3080               	movlw	128
  5489     0A26  00DF               	movwf	(___fladd@b+2)^(0+128)
  5490     0A27  3000               	movlw	0
  5491     0A28  00DE               	movwf	(___fladd@b+1)^(0+128)
  5492     0A29  3000               	movlw	0
  5493     0A2A  00DD               	movwf	___fladd@b^(0+128)
  5494     0A2B  3047               	movlw	71
  5495     0A2C  00AC               	movwf	(___flmul@b+3)^(0+128)
  5496     0A2D  3005               	movlw	5
  5497     0A2E  00AB               	movwf	(___flmul@b+2)^(0+128)
  5498     0A2F  30FC               	movlw	252
  5499     0A30  00AA               	movwf	(___flmul@b+1)^(0+128)
  5500     0A31  3000               	movlw	0
  5501     0A32  00A9               	movwf	___flmul@b^(0+128)
  5502     0A33  1683               	bsf	3,5	;RP0=1, select bank3
  5503     0A34  1703               	bsf	3,6	;RP1=1, select bank3
  5504     0A35  081B               	movf	(SR04_init@time_per_tick_us+3)^(0+384),w
  5505     0A36  1683               	bsf	3,5	;RP0=1, select bank1
  5506     0A37  1303               	bcf	3,6	;RP1=0, select bank1
  5507     0A38  00B0               	movwf	(___flmul@a+3)^(0+128)
  5508     0A39  1683               	bsf	3,5	;RP0=1, select bank3
  5509     0A3A  1703               	bsf	3,6	;RP1=1, select bank3
  5510     0A3B  081A               	movf	(SR04_init@time_per_tick_us+2)^(0+384),w
  5511     0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  5512     0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  5513     0A3E  00AF               	movwf	(___flmul@a+2)^(0+128)
  5514     0A3F  1683               	bsf	3,5	;RP0=1, select bank3
  5515     0A40  1703               	bsf	3,6	;RP1=1, select bank3
  5516     0A41  0819               	movf	(SR04_init@time_per_tick_us+1)^(0+384),w
  5517     0A42  1683               	bsf	3,5	;RP0=1, select bank1
  5518     0A43  1303               	bcf	3,6	;RP1=0, select bank1
  5519     0A44  00AE               	movwf	(___flmul@a+1)^(0+128)
  5520     0A45  1683               	bsf	3,5	;RP0=1, select bank3
  5521     0A46  1703               	bsf	3,6	;RP1=1, select bank3
  5522     0A47  0818               	movf	SR04_init@time_per_tick_us^(0+384),w
  5523     0A48  1683               	bsf	3,5	;RP0=1, select bank1
  5524     0A49  1303               	bcf	3,6	;RP1=0, select bank1
  5525     0A4A  00AD               	movwf	___flmul@a^(0+128)
  5526     0A4B  120A  118A  203F  120A  158A  	fcall	___flmul
  5527     0A50  1683               	bsf	3,5	;RP0=1, select bank1
  5528     0A51  1303               	bcf	3,6	;RP1=0, select bank1
  5529     0A52  082C               	movf	(?___flmul+3)^(0+128),w
  5530     0A53  00C6               	movwf	(___fldiv@a+3)^(0+128)
  5531     0A54  082B               	movf	(?___flmul+2)^(0+128),w
  5532     0A55  00C5               	movwf	(___fldiv@a+2)^(0+128)
  5533     0A56  082A               	movf	(?___flmul+1)^(0+128),w
  5534     0A57  00C4               	movwf	(___fldiv@a+1)^(0+128)
  5535     0A58  0829               	movf	?___flmul^(0+128),w
  5536     0A59  00C3               	movwf	___fldiv@a^(0+128)
  5537     0A5A  3049               	movlw	73
  5538     0A5B  00CA               	movwf	(___fldiv@b+3)^(0+128)
  5539     0A5C  30F4               	movlw	244
  5540     0A5D  00C9               	movwf	(___fldiv@b+2)^(0+128)
  5541     0A5E  3024               	movlw	36
  5542     0A5F  00C8               	movwf	(___fldiv@b+1)^(0+128)
  5543     0A60  3000               	movlw	0
  5544     0A61  00C7               	movwf	___fldiv@b^(0+128)
  5545     0A62  120A  158A  2459  120A  158A  	fcall	___fldiv
  5546     0A67  1683               	bsf	3,5	;RP0=1, select bank1
  5547     0A68  1303               	bcf	3,6	;RP1=0, select bank1
  5548     0A69  0846               	movf	(?___fldiv+3)^(0+128),w
  5549     0A6A  00E4               	movwf	(___fladd@a+3)^(0+128)
  5550     0A6B  0845               	movf	(?___fldiv+2)^(0+128),w
  5551     0A6C  00E3               	movwf	(___fladd@a+2)^(0+128)
  5552     0A6D  0844               	movf	(?___fldiv+1)^(0+128),w
  5553     0A6E  00E2               	movwf	(___fladd@a+1)^(0+128)
  5554     0A6F  0843               	movf	?___fldiv^(0+128),w
  5555     0A70  00E1               	movwf	___fladd@a^(0+128)
  5556     0A71  120A  118A  2381  120A  158A  	fcall	___fladd
  5557     0A76  1683               	bsf	3,5	;RP0=1, select bank1
  5558     0A77  1303               	bcf	3,6	;RP1=0, select bank1
  5559     0A78  0860               	movf	(?___fladd+3)^(0+128),w
  5560     0A79  1283               	bcf	3,5	;RP0=0, select bank0
  5561     0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  5562     0A7B  00E1               	movwf	_division_factor+3
  5563     0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  5564     0A7D  1303               	bcf	3,6	;RP1=0, select bank1
  5565     0A7E  085F               	movf	(?___fladd+2)^(0+128),w
  5566     0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  5567     0A80  1303               	bcf	3,6	;RP1=0, select bank0
  5568     0A81  00E0               	movwf	_division_factor+2
  5569     0A82  1683               	bsf	3,5	;RP0=1, select bank1
  5570     0A83  1303               	bcf	3,6	;RP1=0, select bank1
  5571     0A84  085E               	movf	(?___fladd+1)^(0+128),w
  5572     0A85  1283               	bcf	3,5	;RP0=0, select bank0
  5573     0A86  1303               	bcf	3,6	;RP1=0, select bank0
  5574     0A87  00DF               	movwf	_division_factor+1
  5575     0A88  1683               	bsf	3,5	;RP0=1, select bank1
  5576     0A89  1303               	bcf	3,6	;RP1=0, select bank1
  5577     0A8A  085D               	movf	?___fladd^(0+128),w
  5578     0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  5579     0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  5580     0A8D  00DE               	movwf	_division_factor
  5581     0A8E                     l129:
  5582     0A8E  0008               	return
  5583     0A8F                     __end_of_SR04_init:
  5584                           
  5585                           	psect	text28
  5586     003F                     __ptext28:	
  5587 ;; *************** function ___flmul *****************
  5588 ;; Defined at:
  5589 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  b               4    9[BANK1 ] void 
  5592 ;;  a               4   13[BANK1 ] void 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  prod            4   29[BANK1 ] struct .
  5595 ;;  grs             4   23[BANK1 ] unsigned long 
  5596 ;;  temp            2   33[BANK1 ] struct .
  5597 ;;  bexp            1   28[BANK1 ] unsigned char 
  5598 ;;  aexp            1   27[BANK1 ] unsigned char 
  5599 ;;  sign            1   22[BANK1 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  4    9[BANK1 ] unsigned char 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5609 ;;      Params:         0       0       8       0       0
  5610 ;;      Locals:         0       0      13       0       0
  5611 ;;      Temps:          0       0       5       0       0
  5612 ;;      Totals:         0       0      26       0       0
  5613 ;;Total ram usage:       26 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 3
  5616 ;; This function calls:
  5617 ;;		__Umul8_16
  5618 ;; This function is called by:
  5619 ;;		_SR04_init
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623     003F                     ___flmul:	
  5624                           ;psect for function ___flmul
  5625                           
  5626     003F                     l3174:	
  5627                           ;incstack = 0
  5628                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5629                           
  5630     003F  1683               	bsf	3,5	;RP0=1, select bank1
  5631     0040  1303               	bcf	3,6	;RP1=0, select bank1
  5632     0041  082C               	movf	(___flmul@b^(0+128)+3),w
  5633     0042  00B6               	movwf	___flmul@sign^(0+128)
  5634     0043                     l3176:
  5635     0043  3080               	movlw	128
  5636     0044  05B6               	andwf	___flmul@sign^(0+128),f
  5637     0045                     l3178:
  5638     0045  082C               	movf	(___flmul@b^(0+128)+3),w
  5639     0046  00B1               	movwf	??___flmul^(0+128)
  5640     0047  0731               	addwf	??___flmul^(0+128),w
  5641     0048  00BC               	movwf	___flmul@bexp^(0+128)
  5642     0049                     l3180:
  5643     0049  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  5644     004A  284C               	goto	u4171
  5645     004B  284D               	goto	u4170
  5646     004C                     u4171:
  5647     004C  284E               	goto	l3184
  5648     004D                     u4170:
  5649     004D                     l3182:
  5650     004D  143C               	bsf	___flmul@bexp^(0+128),0
  5651     004E                     l3184:
  5652     004E  083C               	movf	___flmul@bexp^(0+128),w
  5653     004F  1903               	btfsc	3,2
  5654     0050  2852               	goto	u4181
  5655     0051  2853               	goto	u4180
  5656     0052                     u4181:
  5657     0052  2862               	goto	l3192
  5658     0053                     u4180:
  5659     0053                     l3186:
  5660     0053  0A3C               	incf	___flmul@bexp^(0+128),w
  5661     0054  1D03               	btfss	3,2
  5662     0055  2857               	goto	u4191
  5663     0056  2858               	goto	u4190
  5664     0057                     u4191:
  5665     0057  2860               	goto	l3190
  5666     0058                     u4190:
  5667     0058                     l3188:
  5668     0058  3000               	movlw	0
  5669     0059  00AC               	movwf	(___flmul@b+3)^(0+128)
  5670     005A  3000               	movlw	0
  5671     005B  00AB               	movwf	(___flmul@b+2)^(0+128)
  5672     005C  3000               	movlw	0
  5673     005D  00AA               	movwf	(___flmul@b+1)^(0+128)
  5674     005E  3000               	movlw	0
  5675     005F  00A9               	movwf	___flmul@b^(0+128)
  5676     0060                     l3190:
  5677     0060  17AB               	bsf	(___flmul@b^(0+128)+2),7
  5678     0061  286A               	goto	l3194
  5679     0062                     l3192:
  5680     0062  3000               	movlw	0
  5681     0063  00AC               	movwf	(___flmul@b+3)^(0+128)
  5682     0064  3000               	movlw	0
  5683     0065  00AB               	movwf	(___flmul@b+2)^(0+128)
  5684     0066  3000               	movlw	0
  5685     0067  00AA               	movwf	(___flmul@b+1)^(0+128)
  5686     0068  3000               	movlw	0
  5687     0069  00A9               	movwf	___flmul@b^(0+128)
  5688     006A                     l3194:
  5689     006A  0830               	movf	(___flmul@a^(0+128)+3),w
  5690     006B  3980               	andlw	128
  5691     006C  06B6               	xorwf	___flmul@sign^(0+128),f
  5692     006D                     l3196:
  5693     006D  0830               	movf	(___flmul@a^(0+128)+3),w
  5694     006E  00B1               	movwf	??___flmul^(0+128)
  5695     006F  0731               	addwf	??___flmul^(0+128),w
  5696     0070  00BB               	movwf	___flmul@aexp^(0+128)
  5697     0071                     l3198:
  5698     0071  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  5699     0072  2874               	goto	u4201
  5700     0073  2875               	goto	u4200
  5701     0074                     u4201:
  5702     0074  2876               	goto	l3202
  5703     0075                     u4200:
  5704     0075                     l3200:
  5705     0075  143B               	bsf	___flmul@aexp^(0+128),0
  5706     0076                     l3202:
  5707     0076  083B               	movf	___flmul@aexp^(0+128),w
  5708     0077  1903               	btfsc	3,2
  5709     0078  287A               	goto	u4211
  5710     0079  287B               	goto	u4210
  5711     007A                     u4211:
  5712     007A  288A               	goto	l3210
  5713     007B                     u4210:
  5714     007B                     l3204:
  5715     007B  0A3B               	incf	___flmul@aexp^(0+128),w
  5716     007C  1D03               	btfss	3,2
  5717     007D  287F               	goto	u4221
  5718     007E  2880               	goto	u4220
  5719     007F                     u4221:
  5720     007F  2888               	goto	l3208
  5721     0080                     u4220:
  5722     0080                     l3206:
  5723     0080  3000               	movlw	0
  5724     0081  00B0               	movwf	(___flmul@a+3)^(0+128)
  5725     0082  3000               	movlw	0
  5726     0083  00AF               	movwf	(___flmul@a+2)^(0+128)
  5727     0084  3000               	movlw	0
  5728     0085  00AE               	movwf	(___flmul@a+1)^(0+128)
  5729     0086  3000               	movlw	0
  5730     0087  00AD               	movwf	___flmul@a^(0+128)
  5731     0088                     l3208:
  5732     0088  17AF               	bsf	(___flmul@a^(0+128)+2),7
  5733     0089  2892               	goto	l3212
  5734     008A                     l3210:
  5735     008A  3000               	movlw	0
  5736     008B  00B0               	movwf	(___flmul@a+3)^(0+128)
  5737     008C  3000               	movlw	0
  5738     008D  00AF               	movwf	(___flmul@a+2)^(0+128)
  5739     008E  3000               	movlw	0
  5740     008F  00AE               	movwf	(___flmul@a+1)^(0+128)
  5741     0090  3000               	movlw	0
  5742     0091  00AD               	movwf	___flmul@a^(0+128)
  5743     0092                     l3212:
  5744     0092  083B               	movf	___flmul@aexp^(0+128),w
  5745     0093  1903               	btfsc	3,2
  5746     0094  2896               	goto	u4231
  5747     0095  2897               	goto	u4230
  5748     0096                     u4231:
  5749     0096  289C               	goto	l3216
  5750     0097                     u4230:
  5751     0097                     l3214:
  5752     0097  083C               	movf	___flmul@bexp^(0+128),w
  5753     0098  1D03               	btfss	3,2
  5754     0099  289B               	goto	u4241
  5755     009A  289C               	goto	u4240
  5756     009B                     u4241:
  5757     009B  28A5               	goto	l3220
  5758     009C                     u4240:
  5759     009C                     l3216:
  5760     009C  3000               	movlw	0
  5761     009D  00AC               	movwf	(?___flmul+3)^(0+128)
  5762     009E  3000               	movlw	0
  5763     009F  00AB               	movwf	(?___flmul+2)^(0+128)
  5764     00A0  3000               	movlw	0
  5765     00A1  00AA               	movwf	(?___flmul+1)^(0+128)
  5766     00A2  3000               	movlw	0
  5767     00A3  00A9               	movwf	?___flmul^(0+128)
  5768     00A4  2B80               	goto	l858
  5769     00A5                     l3220:
  5770     00A5  0829               	movf	___flmul@b^(0+128),w
  5771     00A6  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5772     00A7  082F               	movf	(___flmul@a^(0+128)+2),w
  5773     00A8  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  5774     00AD  1683               	bsf	3,5	;RP0=1, select bank1
  5775     00AE  1303               	bcf	3,6	;RP1=0, select bank1
  5776     00AF  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5777     00B0  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5778     00B1  0820               	movf	?__Umul8_16^(0+128),w
  5779     00B2  00C1               	movwf	___flmul@temp^(0+128)
  5780     00B3                     l3222:
  5781     00B3  0841               	movf	___flmul@temp^(0+128),w
  5782     00B4  00B1               	movwf	??___flmul^(0+128)
  5783     00B5  01B2               	clrf	(??___flmul^(0+128)+1)
  5784     00B6  01B3               	clrf	(??___flmul^(0+128)+2)
  5785     00B7  01B4               	clrf	(??___flmul^(0+128)+3)
  5786     00B8  0834               	movf	(??___flmul+3)^(0+128),w
  5787     00B9  00BA               	movwf	(___flmul@grs+3)^(0+128)
  5788     00BA  0833               	movf	(??___flmul+2)^(0+128),w
  5789     00BB  00B9               	movwf	(___flmul@grs+2)^(0+128)
  5790     00BC  0832               	movf	(??___flmul+1)^(0+128),w
  5791     00BD  00B8               	movwf	(___flmul@grs+1)^(0+128)
  5792     00BE  0831               	movf	??___flmul^(0+128),w
  5793     00BF  00B7               	movwf	___flmul@grs^(0+128)
  5794     00C0                     l3224:
  5795     00C0  0842               	movf	(___flmul@temp^(0+128)+1),w
  5796     00C1  00B1               	movwf	??___flmul^(0+128)
  5797     00C2  01B2               	clrf	(??___flmul^(0+128)+1)
  5798     00C3  01B3               	clrf	(??___flmul^(0+128)+2)
  5799     00C4  01B4               	clrf	(??___flmul^(0+128)+3)
  5800     00C5  0834               	movf	(??___flmul+3)^(0+128),w
  5801     00C6  00C0               	movwf	(___flmul@prod+3)^(0+128)
  5802     00C7  0833               	movf	(??___flmul+2)^(0+128),w
  5803     00C8  00BF               	movwf	(___flmul@prod+2)^(0+128)
  5804     00C9  0832               	movf	(??___flmul+1)^(0+128),w
  5805     00CA  00BE               	movwf	(___flmul@prod+1)^(0+128)
  5806     00CB  0831               	movf	??___flmul^(0+128),w
  5807     00CC  00BD               	movwf	___flmul@prod^(0+128)
  5808     00CD  082A               	movf	(___flmul@b^(0+128)+1),w
  5809     00CE  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5810     00CF  082E               	movf	(___flmul@a^(0+128)+1),w
  5811     00D0  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  5812     00D5  1683               	bsf	3,5	;RP0=1, select bank1
  5813     00D6  1303               	bcf	3,6	;RP1=0, select bank1
  5814     00D7  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5815     00D8  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5816     00D9  0820               	movf	?__Umul8_16^(0+128),w
  5817     00DA  00C1               	movwf	___flmul@temp^(0+128)
  5818     00DB                     l3226:
  5819     00DB  0841               	movf	___flmul@temp^(0+128),w
  5820     00DC  00B1               	movwf	??___flmul^(0+128)
  5821     00DD  01B2               	clrf	(??___flmul^(0+128)+1)
  5822     00DE  01B3               	clrf	(??___flmul^(0+128)+2)
  5823     00DF  01B4               	clrf	(??___flmul^(0+128)+3)
  5824     00E0  0831               	movf	??___flmul^(0+128),w
  5825     00E1  07B7               	addwf	___flmul@grs^(0+128),f
  5826     00E2  0832               	movf	(??___flmul+1)^(0+128),w
  5827     00E3  1103               	clrz
  5828     00E4  1803               	skipnc
  5829     00E5  3E01               	addlw	1
  5830     00E6  1903               	skipnz
  5831     00E7  28E9               	goto	u4251
  5832     00E8  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5833     00E9                     u4251:
  5834     00E9  0833               	movf	(??___flmul+2)^(0+128),w
  5835     00EA  1103               	clrz
  5836     00EB  1803               	skipnc
  5837     00EC  3E01               	addlw	1
  5838     00ED  1903               	skipnz
  5839     00EE  28F0               	goto	u4252
  5840     00EF  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5841     00F0                     u4252:
  5842     00F0  0834               	movf	(??___flmul+3)^(0+128),w
  5843     00F1  1103               	clrz
  5844     00F2  1803               	skipnc
  5845     00F3  3E01               	addlw	1
  5846     00F4  1903               	skipnz
  5847     00F5  28F7               	goto	u4253
  5848     00F6  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5849     00F7                     u4253:
  5850     00F7                     l3228:
  5851     00F7  0842               	movf	(___flmul@temp^(0+128)+1),w
  5852     00F8  00B1               	movwf	??___flmul^(0+128)
  5853     00F9  01B2               	clrf	(??___flmul^(0+128)+1)
  5854     00FA  01B3               	clrf	(??___flmul^(0+128)+2)
  5855     00FB  01B4               	clrf	(??___flmul^(0+128)+3)
  5856     00FC  0831               	movf	??___flmul^(0+128),w
  5857     00FD  07BD               	addwf	___flmul@prod^(0+128),f
  5858     00FE  0832               	movf	(??___flmul+1)^(0+128),w
  5859     00FF  1103               	clrz
  5860     0100  1803               	skipnc
  5861     0101  3E01               	addlw	1
  5862     0102  1903               	skipnz
  5863     0103  2905               	goto	u4261
  5864     0104  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  5865     0105                     u4261:
  5866     0105  0833               	movf	(??___flmul+2)^(0+128),w
  5867     0106  1103               	clrz
  5868     0107  1803               	skipnc
  5869     0108  3E01               	addlw	1
  5870     0109  1903               	skipnz
  5871     010A  290C               	goto	u4262
  5872     010B  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  5873     010C                     u4262:
  5874     010C  0834               	movf	(??___flmul+3)^(0+128),w
  5875     010D  1103               	clrz
  5876     010E  1803               	skipnc
  5877     010F  3E01               	addlw	1
  5878     0110  1903               	skipnz
  5879     0111  2913               	goto	u4263
  5880     0112  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  5881     0113                     u4263:
  5882     0113  082B               	movf	(___flmul@b^(0+128)+2),w
  5883     0114  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5884     0115  082D               	movf	___flmul@a^(0+128),w
  5885     0116  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  5886     011B  1683               	bsf	3,5	;RP0=1, select bank1
  5887     011C  1303               	bcf	3,6	;RP1=0, select bank1
  5888     011D  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5889     011E  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5890     011F  0820               	movf	?__Umul8_16^(0+128),w
  5891     0120  00C1               	movwf	___flmul@temp^(0+128)
  5892     0121                     l3230:
  5893     0121  0841               	movf	___flmul@temp^(0+128),w
  5894     0122  00B1               	movwf	??___flmul^(0+128)
  5895     0123  01B2               	clrf	(??___flmul^(0+128)+1)
  5896     0124  01B3               	clrf	(??___flmul^(0+128)+2)
  5897     0125  01B4               	clrf	(??___flmul^(0+128)+3)
  5898     0126  0831               	movf	??___flmul^(0+128),w
  5899     0127  07B7               	addwf	___flmul@grs^(0+128),f
  5900     0128  0832               	movf	(??___flmul+1)^(0+128),w
  5901     0129  1103               	clrz
  5902     012A  1803               	skipnc
  5903     012B  3E01               	addlw	1
  5904     012C  1903               	skipnz
  5905     012D  292F               	goto	u4271
  5906     012E  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5907     012F                     u4271:
  5908     012F  0833               	movf	(??___flmul+2)^(0+128),w
  5909     0130  1103               	clrz
  5910     0131  1803               	skipnc
  5911     0132  3E01               	addlw	1
  5912     0133  1903               	skipnz
  5913     0134  2936               	goto	u4272
  5914     0135  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  5915     0136                     u4272:
  5916     0136  0834               	movf	(??___flmul+3)^(0+128),w
  5917     0137  1103               	clrz
  5918     0138  1803               	skipnc
  5919     0139  3E01               	addlw	1
  5920     013A  1903               	skipnz
  5921     013B  293D               	goto	u4273
  5922     013C  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  5923     013D                     u4273:
  5924     013D                     l3232:
  5925     013D  0842               	movf	(___flmul@temp^(0+128)+1),w
  5926     013E  00B1               	movwf	??___flmul^(0+128)
  5927     013F  01B2               	clrf	(??___flmul^(0+128)+1)
  5928     0140  01B3               	clrf	(??___flmul^(0+128)+2)
  5929     0141  01B4               	clrf	(??___flmul^(0+128)+3)
  5930     0142  0831               	movf	??___flmul^(0+128),w
  5931     0143  07BD               	addwf	___flmul@prod^(0+128),f
  5932     0144  0832               	movf	(??___flmul+1)^(0+128),w
  5933     0145  1103               	clrz
  5934     0146  1803               	skipnc
  5935     0147  3E01               	addlw	1
  5936     0148  1903               	skipnz
  5937     0149  294B               	goto	u4281
  5938     014A  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  5939     014B                     u4281:
  5940     014B  0833               	movf	(??___flmul+2)^(0+128),w
  5941     014C  1103               	clrz
  5942     014D  1803               	skipnc
  5943     014E  3E01               	addlw	1
  5944     014F  1903               	skipnz
  5945     0150  2952               	goto	u4282
  5946     0151  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  5947     0152                     u4282:
  5948     0152  0834               	movf	(??___flmul+3)^(0+128),w
  5949     0153  1103               	clrz
  5950     0154  1803               	skipnc
  5951     0155  3E01               	addlw	1
  5952     0156  1903               	skipnz
  5953     0157  2959               	goto	u4283
  5954     0158  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  5955     0159                     u4283:
  5956     0159                     l3234:
  5957     0159  3008               	movlw	8
  5958     015A  00B1               	movwf	??___flmul^(0+128)
  5959     015B                     u4295:
  5960     015B  1003               	clrc
  5961     015C  0DB7               	rlf	___flmul@grs^(0+128),f
  5962     015D  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5963     015E  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5964     015F  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5965     0160  0BB1               	decfsz	??___flmul^(0+128),f
  5966     0161  295B               	goto	u4295
  5967     0162                     l3236:
  5968     0162  082A               	movf	(___flmul@b^(0+128)+1),w
  5969     0163  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5970     0164  082D               	movf	___flmul@a^(0+128),w
  5971     0165  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  5972     016A  1683               	bsf	3,5	;RP0=1, select bank1
  5973     016B  1303               	bcf	3,6	;RP1=0, select bank1
  5974     016C  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5975     016D  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5976     016E  0820               	movf	?__Umul8_16^(0+128),w
  5977     016F  00C1               	movwf	___flmul@temp^(0+128)
  5978     0170                     l3238:
  5979     0170  0841               	movf	___flmul@temp^(0+128),w
  5980     0171  00B1               	movwf	??___flmul^(0+128)
  5981     0172  0842               	movf	(___flmul@temp+1)^(0+128),w
  5982     0173  00B2               	movwf	(??___flmul^(0+128)+1)
  5983     0174  01B3               	clrf	(??___flmul^(0+128)+2)
  5984     0175  01B4               	clrf	(??___flmul^(0+128)+3)
  5985     0176  0831               	movf	??___flmul^(0+128),w
  5986     0177  07B7               	addwf	___flmul@grs^(0+128),f
  5987     0178  0832               	movf	(??___flmul+1)^(0+128),w
  5988     0179  1103               	clrz
  5989     017A  1803               	skipnc
  5990     017B  3E01               	addlw	1
  5991     017C  1903               	skipnz
  5992     017D  297F               	goto	u4301
  5993     017E  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  5994     017F                     u4301:
  5995     017F  0833               	movf	(??___flmul+2)^(0+128),w
  5996     0180  1103               	clrz
  5997     0181  1803               	skipnc
  5998     0182  3E01               	addlw	1
  5999     0183  1903               	skipnz
  6000     0184  2986               	goto	u4302
  6001     0185  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  6002     0186                     u4302:
  6003     0186  0834               	movf	(??___flmul+3)^(0+128),w
  6004     0187  1103               	clrz
  6005     0188  1803               	skipnc
  6006     0189  3E01               	addlw	1
  6007     018A  1903               	skipnz
  6008     018B  298D               	goto	u4303
  6009     018C  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  6010     018D                     u4303:
  6011     018D                     l3240:
  6012     018D  0829               	movf	___flmul@b^(0+128),w
  6013     018E  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  6014     018F  082E               	movf	(___flmul@a^(0+128)+1),w
  6015     0190  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  6016     0195  1683               	bsf	3,5	;RP0=1, select bank1
  6017     0196  1303               	bcf	3,6	;RP1=0, select bank1
  6018     0197  0821               	movf	(?__Umul8_16+1)^(0+128),w
  6019     0198  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6020     0199  0820               	movf	?__Umul8_16^(0+128),w
  6021     019A  00C1               	movwf	___flmul@temp^(0+128)
  6022     019B                     l3242:
  6023     019B  0841               	movf	___flmul@temp^(0+128),w
  6024     019C  00B1               	movwf	??___flmul^(0+128)
  6025     019D  0842               	movf	(___flmul@temp+1)^(0+128),w
  6026     019E  00B2               	movwf	(??___flmul^(0+128)+1)
  6027     019F  01B3               	clrf	(??___flmul^(0+128)+2)
  6028     01A0  01B4               	clrf	(??___flmul^(0+128)+3)
  6029     01A1  0831               	movf	??___flmul^(0+128),w
  6030     01A2  07B7               	addwf	___flmul@grs^(0+128),f
  6031     01A3  0832               	movf	(??___flmul+1)^(0+128),w
  6032     01A4  1103               	clrz
  6033     01A5  1803               	skipnc
  6034     01A6  3E01               	addlw	1
  6035     01A7  1903               	skipnz
  6036     01A8  29AA               	goto	u4311
  6037     01A9  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  6038     01AA                     u4311:
  6039     01AA  0833               	movf	(??___flmul+2)^(0+128),w
  6040     01AB  1103               	clrz
  6041     01AC  1803               	skipnc
  6042     01AD  3E01               	addlw	1
  6043     01AE  1903               	skipnz
  6044     01AF  29B1               	goto	u4312
  6045     01B0  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  6046     01B1                     u4312:
  6047     01B1  0834               	movf	(??___flmul+3)^(0+128),w
  6048     01B2  1103               	clrz
  6049     01B3  1803               	skipnc
  6050     01B4  3E01               	addlw	1
  6051     01B5  1903               	skipnz
  6052     01B6  29B8               	goto	u4313
  6053     01B7  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  6054     01B8                     u4313:
  6055     01B8                     l3244:
  6056     01B8  3008               	movlw	8
  6057     01B9  00B1               	movwf	??___flmul^(0+128)
  6058     01BA                     u4325:
  6059     01BA  1003               	clrc
  6060     01BB  0DB7               	rlf	___flmul@grs^(0+128),f
  6061     01BC  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  6062     01BD  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  6063     01BE  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  6064     01BF  0BB1               	decfsz	??___flmul^(0+128),f
  6065     01C0  29BA               	goto	u4325
  6066     01C1  0829               	movf	___flmul@b^(0+128),w
  6067     01C2  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  6068     01C3  082D               	movf	___flmul@a^(0+128),w
  6069     01C4  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  6070     01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6071     01CA  1303               	bcf	3,6	;RP1=0, select bank1
  6072     01CB  0821               	movf	(?__Umul8_16+1)^(0+128),w
  6073     01CC  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6074     01CD  0820               	movf	?__Umul8_16^(0+128),w
  6075     01CE  00C1               	movwf	___flmul@temp^(0+128)
  6076     01CF                     l3246:
  6077     01CF  0841               	movf	___flmul@temp^(0+128),w
  6078     01D0  00B1               	movwf	??___flmul^(0+128)
  6079     01D1  0842               	movf	(___flmul@temp+1)^(0+128),w
  6080     01D2  00B2               	movwf	(??___flmul^(0+128)+1)
  6081     01D3  01B3               	clrf	(??___flmul^(0+128)+2)
  6082     01D4  01B4               	clrf	(??___flmul^(0+128)+3)
  6083     01D5  0831               	movf	??___flmul^(0+128),w
  6084     01D6  07B7               	addwf	___flmul@grs^(0+128),f
  6085     01D7  0832               	movf	(??___flmul+1)^(0+128),w
  6086     01D8  1103               	clrz
  6087     01D9  1803               	skipnc
  6088     01DA  3E01               	addlw	1
  6089     01DB  1903               	skipnz
  6090     01DC  29DE               	goto	u4331
  6091     01DD  07B8               	addwf	(___flmul@grs+1)^(0+128),f
  6092     01DE                     u4331:
  6093     01DE  0833               	movf	(??___flmul+2)^(0+128),w
  6094     01DF  1103               	clrz
  6095     01E0  1803               	skipnc
  6096     01E1  3E01               	addlw	1
  6097     01E2  1903               	skipnz
  6098     01E3  29E5               	goto	u4332
  6099     01E4  07B9               	addwf	(___flmul@grs+2)^(0+128),f
  6100     01E5                     u4332:
  6101     01E5  0834               	movf	(??___flmul+3)^(0+128),w
  6102     01E6  1103               	clrz
  6103     01E7  1803               	skipnc
  6104     01E8  3E01               	addlw	1
  6105     01E9  1903               	skipnz
  6106     01EA  29EC               	goto	u4333
  6107     01EB  07BA               	addwf	(___flmul@grs+3)^(0+128),f
  6108     01EC                     u4333:
  6109     01EC                     l3248:
  6110     01EC  082A               	movf	(___flmul@b^(0+128)+1),w
  6111     01ED  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  6112     01EE  082F               	movf	(___flmul@a^(0+128)+2),w
  6113     01EF  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  6114     01F4  1683               	bsf	3,5	;RP0=1, select bank1
  6115     01F5  1303               	bcf	3,6	;RP1=0, select bank1
  6116     01F6  0821               	movf	(?__Umul8_16+1)^(0+128),w
  6117     01F7  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6118     01F8  0820               	movf	?__Umul8_16^(0+128),w
  6119     01F9  00C1               	movwf	___flmul@temp^(0+128)
  6120     01FA  0841               	movf	___flmul@temp^(0+128),w
  6121     01FB  00B1               	movwf	??___flmul^(0+128)
  6122     01FC  0842               	movf	(___flmul@temp+1)^(0+128),w
  6123     01FD  00B2               	movwf	(??___flmul^(0+128)+1)
  6124     01FE  01B3               	clrf	(??___flmul^(0+128)+2)
  6125     01FF  01B4               	clrf	(??___flmul^(0+128)+3)
  6126     0200  0831               	movf	??___flmul^(0+128),w
  6127     0201  07BD               	addwf	___flmul@prod^(0+128),f
  6128     0202  0832               	movf	(??___flmul+1)^(0+128),w
  6129     0203  1103               	clrz
  6130     0204  1803               	skipnc
  6131     0205  3E01               	addlw	1
  6132     0206  1903               	skipnz
  6133     0207  2A09               	goto	u4341
  6134     0208  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6135     0209                     u4341:
  6136     0209  0833               	movf	(??___flmul+2)^(0+128),w
  6137     020A  1103               	clrz
  6138     020B  1803               	skipnc
  6139     020C  3E01               	addlw	1
  6140     020D  1903               	skipnz
  6141     020E  2A10               	goto	u4342
  6142     020F  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6143     0210                     u4342:
  6144     0210  0834               	movf	(??___flmul+3)^(0+128),w
  6145     0211  1103               	clrz
  6146     0212  1803               	skipnc
  6147     0213  3E01               	addlw	1
  6148     0214  1903               	skipnz
  6149     0215  2A17               	goto	u4343
  6150     0216  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6151     0217                     u4343:
  6152     0217                     l3250:
  6153     0217  082B               	movf	(___flmul@b^(0+128)+2),w
  6154     0218  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  6155     0219  082E               	movf	(___flmul@a^(0+128)+1),w
  6156     021A  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  6157     021F  1683               	bsf	3,5	;RP0=1, select bank1
  6158     0220  1303               	bcf	3,6	;RP1=0, select bank1
  6159     0221  0821               	movf	(?__Umul8_16+1)^(0+128),w
  6160     0222  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6161     0223  0820               	movf	?__Umul8_16^(0+128),w
  6162     0224  00C1               	movwf	___flmul@temp^(0+128)
  6163     0225                     l3252:
  6164     0225  0841               	movf	___flmul@temp^(0+128),w
  6165     0226  00B1               	movwf	??___flmul^(0+128)
  6166     0227  0842               	movf	(___flmul@temp+1)^(0+128),w
  6167     0228  00B2               	movwf	(??___flmul^(0+128)+1)
  6168     0229  01B3               	clrf	(??___flmul^(0+128)+2)
  6169     022A  01B4               	clrf	(??___flmul^(0+128)+3)
  6170     022B  0831               	movf	??___flmul^(0+128),w
  6171     022C  07BD               	addwf	___flmul@prod^(0+128),f
  6172     022D  0832               	movf	(??___flmul+1)^(0+128),w
  6173     022E  1103               	clrz
  6174     022F  1803               	skipnc
  6175     0230  3E01               	addlw	1
  6176     0231  1903               	skipnz
  6177     0232  2A34               	goto	u4351
  6178     0233  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6179     0234                     u4351:
  6180     0234  0833               	movf	(??___flmul+2)^(0+128),w
  6181     0235  1103               	clrz
  6182     0236  1803               	skipnc
  6183     0237  3E01               	addlw	1
  6184     0238  1903               	skipnz
  6185     0239  2A3B               	goto	u4352
  6186     023A  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6187     023B                     u4352:
  6188     023B  0834               	movf	(??___flmul+3)^(0+128),w
  6189     023C  1103               	clrz
  6190     023D  1803               	skipnc
  6191     023E  3E01               	addlw	1
  6192     023F  1903               	skipnz
  6193     0240  2A42               	goto	u4353
  6194     0241  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6195     0242                     u4353:
  6196     0242  082B               	movf	(___flmul@b^(0+128)+2),w
  6197     0243  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  6198     0244  082F               	movf	(___flmul@a^(0+128)+2),w
  6199     0245  160A  118A  23E3  120A  118A  	fcall	__Umul8_16
  6200     024A  1683               	bsf	3,5	;RP0=1, select bank1
  6201     024B  1303               	bcf	3,6	;RP1=0, select bank1
  6202     024C  0821               	movf	(?__Umul8_16+1)^(0+128),w
  6203     024D  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6204     024E  0820               	movf	?__Umul8_16^(0+128),w
  6205     024F  00C1               	movwf	___flmul@temp^(0+128)
  6206     0250                     l3254:
  6207     0250  0841               	movf	___flmul@temp^(0+128),w
  6208     0251  00B1               	movwf	??___flmul^(0+128)
  6209     0252  0842               	movf	(___flmul@temp+1)^(0+128),w
  6210     0253  00B2               	movwf	(??___flmul^(0+128)+1)
  6211     0254  01B3               	clrf	(??___flmul^(0+128)+2)
  6212     0255  01B4               	clrf	(??___flmul^(0+128)+3)
  6213     0256  3008               	movlw	8
  6214     0257                     u4365:
  6215     0257  1003               	clrc
  6216     0258  0DB1               	rlf	??___flmul^(0+128),f
  6217     0259  0DB2               	rlf	(??___flmul^(0+128)+1),f
  6218     025A  0DB3               	rlf	(??___flmul^(0+128)+2),f
  6219     025B  0DB4               	rlf	(??___flmul^(0+128)+3),f
  6220     025C                     u4360:
  6221     025C  3EFF               	addlw	-1
  6222     025D  1D03               	skipz
  6223     025E  2A57               	goto	u4365
  6224     025F  0831               	movf	??___flmul^(0+128),w
  6225     0260  07BD               	addwf	___flmul@prod^(0+128),f
  6226     0261  0832               	movf	(??___flmul+1)^(0+128),w
  6227     0262  1103               	clrz
  6228     0263  1803               	skipnc
  6229     0264  3E01               	addlw	1
  6230     0265  1903               	skipnz
  6231     0266  2A68               	goto	u4371
  6232     0267  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6233     0268                     u4371:
  6234     0268  0833               	movf	(??___flmul+2)^(0+128),w
  6235     0269  1103               	clrz
  6236     026A  1803               	skipnc
  6237     026B  3E01               	addlw	1
  6238     026C  1903               	skipnz
  6239     026D  2A6F               	goto	u4372
  6240     026E  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6241     026F                     u4372:
  6242     026F  0834               	movf	(??___flmul+3)^(0+128),w
  6243     0270  1103               	clrz
  6244     0271  1803               	skipnc
  6245     0272  3E01               	addlw	1
  6246     0273  1903               	skipnz
  6247     0274  2A76               	goto	u4373
  6248     0275  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6249     0276                     u4373:
  6250     0276                     l3256:
  6251     0276  0837               	movf	___flmul@grs^(0+128),w
  6252     0277  00B1               	movwf	??___flmul^(0+128)
  6253     0278  0838               	movf	(___flmul@grs+1)^(0+128),w
  6254     0279  00B2               	movwf	(??___flmul^(0+128)+1)
  6255     027A  0839               	movf	(___flmul@grs+2)^(0+128),w
  6256     027B  00B3               	movwf	(??___flmul^(0+128)+2)
  6257     027C  083A               	movf	(___flmul@grs+3)^(0+128),w
  6258     027D  00B4               	movwf	(??___flmul^(0+128)+3)
  6259     027E  3018               	movlw	24
  6260     027F                     u4385:
  6261     027F  1003               	clrc
  6262     0280  0CB4               	rrf	(??___flmul^(0+128)+3),f
  6263     0281  0CB3               	rrf	(??___flmul^(0+128)+2),f
  6264     0282  0CB2               	rrf	(??___flmul^(0+128)+1),f
  6265     0283  0CB1               	rrf	??___flmul^(0+128),f
  6266     0284                     u4380:
  6267     0284  3EFF               	addlw	-1
  6268     0285  1D03               	skipz
  6269     0286  2A7F               	goto	u4385
  6270     0287  0831               	movf	??___flmul^(0+128),w
  6271     0288  07BD               	addwf	___flmul@prod^(0+128),f
  6272     0289  0832               	movf	(??___flmul+1)^(0+128),w
  6273     028A  1103               	clrz
  6274     028B  1803               	skipnc
  6275     028C  3E01               	addlw	1
  6276     028D  1903               	skipnz
  6277     028E  2A90               	goto	u4391
  6278     028F  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6279     0290                     u4391:
  6280     0290  0833               	movf	(??___flmul+2)^(0+128),w
  6281     0291  1103               	clrz
  6282     0292  1803               	skipnc
  6283     0293  3E01               	addlw	1
  6284     0294  1903               	skipnz
  6285     0295  2A97               	goto	u4392
  6286     0296  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6287     0297                     u4392:
  6288     0297  0834               	movf	(??___flmul+3)^(0+128),w
  6289     0298  1103               	clrz
  6290     0299  1803               	skipnc
  6291     029A  3E01               	addlw	1
  6292     029B  1903               	skipnz
  6293     029C  2A9E               	goto	u4393
  6294     029D  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6295     029E                     u4393:
  6296     029E                     l3258:
  6297     029E  3008               	movlw	8
  6298     029F  00B1               	movwf	??___flmul^(0+128)
  6299     02A0                     u4405:
  6300     02A0  1003               	clrc
  6301     02A1  0DB7               	rlf	___flmul@grs^(0+128),f
  6302     02A2  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  6303     02A3  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  6304     02A4  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  6305     02A5  0BB1               	decfsz	??___flmul^(0+128),f
  6306     02A6  2AA0               	goto	u4405
  6307     02A7                     l3260:
  6308     02A7  083C               	movf	___flmul@bexp^(0+128),w
  6309     02A8  073B               	addwf	___flmul@aexp^(0+128),w
  6310     02A9  00B1               	movwf	??___flmul^(0+128)
  6311     02AA  01B2               	clrf	(??___flmul^(0+128)+1)
  6312     02AB  0DB2               	rlf	(??___flmul+1)^(0+128),f
  6313     02AC  0831               	movf	??___flmul^(0+128),w
  6314     02AD  3E82               	addlw	130
  6315     02AE  00C1               	movwf	___flmul@temp^(0+128)
  6316     02AF  0832               	movf	(??___flmul+1)^(0+128),w
  6317     02B0  1803               	skipnc
  6318     02B1  3E01               	addlw	1
  6319     02B2  3EFF               	addlw	255
  6320     02B3  00C2               	movwf	(___flmul@temp+1)^(0+128)
  6321     02B4  2AD2               	goto	l3272
  6322     02B5                     l3262:
  6323     02B5  3001               	movlw	1
  6324     02B6  00B1               	movwf	??___flmul^(0+128)
  6325     02B7                     u4415:
  6326     02B7  1003               	clrc
  6327     02B8  0DBD               	rlf	___flmul@prod^(0+128),f
  6328     02B9  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  6329     02BA  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  6330     02BB  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  6331     02BC  0BB1               	decfsz	??___flmul^(0+128),f
  6332     02BD  2AB7               	goto	u4415
  6333     02BE                     l3264:
  6334     02BE  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  6335     02BF  2AC1               	goto	u4421
  6336     02C0  2AC2               	goto	u4420
  6337     02C1                     u4421:
  6338     02C1  2AC3               	goto	l3268
  6339     02C2                     u4420:
  6340     02C2                     l3266:
  6341     02C2  143D               	bsf	___flmul@prod^(0+128),0
  6342     02C3                     l3268:
  6343     02C3  3001               	movlw	1
  6344     02C4  00B1               	movwf	??___flmul^(0+128)
  6345     02C5                     u4435:
  6346     02C5  1003               	clrc
  6347     02C6  0DB7               	rlf	___flmul@grs^(0+128),f
  6348     02C7  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  6349     02C8  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  6350     02C9  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  6351     02CA  0BB1               	decfsz	??___flmul^(0+128),f
  6352     02CB  2AC5               	goto	u4435
  6353     02CC                     l3270:
  6354     02CC  30FF               	movlw	255
  6355     02CD  07C1               	addwf	___flmul@temp^(0+128),f
  6356     02CE  1803               	skipnc
  6357     02CF  0AC2               	incf	(___flmul@temp+1)^(0+128),f
  6358     02D0  30FF               	movlw	255
  6359     02D1  07C2               	addwf	(___flmul@temp+1)^(0+128),f
  6360     02D2                     l3272:
  6361     02D2  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  6362     02D3  2AD5               	goto	u4441
  6363     02D4  2AD6               	goto	u4440
  6364     02D5                     u4441:
  6365     02D5  2AB5               	goto	l3262
  6366     02D6                     u4440:
  6367     02D6                     l3274:
  6368     02D6  01BB               	clrf	___flmul@aexp^(0+128)
  6369     02D7                     l3276:
  6370     02D7  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  6371     02D8  2ADA               	goto	u4451
  6372     02D9  2ADB               	goto	u4450
  6373     02DA                     u4451:
  6374     02DA  2AF7               	goto	l3284
  6375     02DB                     u4450:
  6376     02DB                     l3278:
  6377     02DB  30FF               	movlw	255
  6378     02DC  0537               	andwf	___flmul@grs^(0+128),w
  6379     02DD  00B1               	movwf	??___flmul^(0+128)
  6380     02DE  30FF               	movlw	255
  6381     02DF  0538               	andwf	(___flmul@grs+1)^(0+128),w
  6382     02E0  00B2               	movwf	(??___flmul^(0+128)+1)
  6383     02E1  30FF               	movlw	255
  6384     02E2  0539               	andwf	(___flmul@grs+2)^(0+128),w
  6385     02E3  00B3               	movwf	(??___flmul^(0+128)+2)
  6386     02E4  307F               	movlw	127
  6387     02E5  053A               	andwf	(___flmul@grs+3)^(0+128),w
  6388     02E6  00B4               	movwf	(??___flmul^(0+128)+3)
  6389     02E7  0834               	movf	(??___flmul+3)^(0+128),w
  6390     02E8  0433               	iorwf	(??___flmul+2)^(0+128),w
  6391     02E9  0432               	iorwf	(??___flmul+1)^(0+128),w
  6392     02EA  0431               	iorwf	??___flmul^(0+128),w
  6393     02EB  1903               	skipnz
  6394     02EC  2AEE               	goto	u4461
  6395     02ED  2AEF               	goto	u4460
  6396     02EE                     u4461:
  6397     02EE  2AF2               	goto	l864
  6398     02EF                     u4460:
  6399     02EF                     l3280:
  6400     02EF  3001               	movlw	1
  6401     02F0  00BB               	movwf	___flmul@aexp^(0+128)
  6402     02F1  2AF7               	goto	l3284
  6403     02F2                     l864:
  6404     02F2  1C3D               	btfss	___flmul@prod^(0+128),0
  6405     02F3  2AF5               	goto	u4471
  6406     02F4  2AF6               	goto	u4470
  6407     02F5                     u4471:
  6408     02F5  2AF7               	goto	l3284
  6409     02F6                     u4470:
  6410     02F6  2AEF               	goto	l3280
  6411     02F7                     l3284:
  6412     02F7  083B               	movf	___flmul@aexp^(0+128),w
  6413     02F8  1903               	btfsc	3,2
  6414     02F9  2AFB               	goto	u4481
  6415     02FA  2AFC               	goto	u4480
  6416     02FB                     u4481:
  6417     02FB  2B2D               	goto	l3294
  6418     02FC                     u4480:
  6419     02FC                     l3286:
  6420     02FC  3001               	movlw	1
  6421     02FD  07BD               	addwf	___flmul@prod^(0+128),f
  6422     02FE  3000               	movlw	0
  6423     02FF  1803               	skipnc
  6424     0300  3001               	movlw	1
  6425     0301  07BE               	addwf	(___flmul@prod+1)^(0+128),f
  6426     0302  3000               	movlw	0
  6427     0303  1803               	skipnc
  6428     0304  3001               	movlw	1
  6429     0305  07BF               	addwf	(___flmul@prod+2)^(0+128),f
  6430     0306  3000               	movlw	0
  6431     0307  1803               	skipnc
  6432     0308  3001               	movlw	1
  6433     0309  07C0               	addwf	(___flmul@prod+3)^(0+128),f
  6434     030A                     l3288:
  6435     030A  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  6436     030B  2B0D               	goto	u4491
  6437     030C  2B0E               	goto	u4490
  6438     030D                     u4491:
  6439     030D  2B2D               	goto	l3294
  6440     030E                     u4490:
  6441     030E                     l3290:
  6442     030E  083D               	movf	___flmul@prod^(0+128),w
  6443     030F  00B1               	movwf	??___flmul^(0+128)
  6444     0310  083E               	movf	(___flmul@prod+1)^(0+128),w
  6445     0311  00B2               	movwf	(??___flmul^(0+128)+1)
  6446     0312  083F               	movf	(___flmul@prod+2)^(0+128),w
  6447     0313  00B3               	movwf	(??___flmul^(0+128)+2)
  6448     0314  0840               	movf	(___flmul@prod+3)^(0+128),w
  6449     0315  00B4               	movwf	(??___flmul^(0+128)+3)
  6450     0316  3001               	movlw	1
  6451     0317  00B5               	movwf	(??___flmul+4)^(0+128)
  6452     0318                     u4505:
  6453     0318  0D34               	rlf	(??___flmul^(0+128)+3),w
  6454     0319  0CB4               	rrf	(??___flmul^(0+128)+3),f
  6455     031A  0CB3               	rrf	(??___flmul^(0+128)+2),f
  6456     031B  0CB2               	rrf	(??___flmul^(0+128)+1),f
  6457     031C  0CB1               	rrf	??___flmul^(0+128),f
  6458     031D                     u4500:
  6459     031D  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  6460     031E  2B18               	goto	u4505
  6461     031F  0834               	movf	(??___flmul+3)^(0+128),w
  6462     0320  00C0               	movwf	(___flmul@prod+3)^(0+128)
  6463     0321  0833               	movf	(??___flmul+2)^(0+128),w
  6464     0322  00BF               	movwf	(___flmul@prod+2)^(0+128)
  6465     0323  0832               	movf	(??___flmul+1)^(0+128),w
  6466     0324  00BE               	movwf	(___flmul@prod+1)^(0+128)
  6467     0325  0831               	movf	??___flmul^(0+128),w
  6468     0326  00BD               	movwf	___flmul@prod^(0+128)
  6469     0327                     l3292:
  6470     0327  3001               	movlw	1
  6471     0328  07C1               	addwf	___flmul@temp^(0+128),f
  6472     0329  1803               	skipnc
  6473     032A  0AC2               	incf	(___flmul@temp+1)^(0+128),f
  6474     032B  3000               	movlw	0
  6475     032C  07C2               	addwf	(___flmul@temp+1)^(0+128),f
  6476     032D                     l3294:
  6477     032D  0842               	movf	(___flmul@temp+1)^(0+128),w
  6478     032E  3A80               	xorlw	128
  6479     032F  00FF               	movwf	btemp+1
  6480     0330  3080               	movlw	128
  6481     0331  027F               	subwf	btemp+1,w
  6482     0332  1D03               	skipz
  6483     0333  2B36               	goto	u4515
  6484     0334  30FF               	movlw	255
  6485     0335  0241               	subwf	___flmul@temp^(0+128),w
  6486     0336                     u4515:
  6487     0336  1C03               	skipc
  6488     0337  2B39               	goto	u4511
  6489     0338  2B3A               	goto	u4510
  6490     0339                     u4511:
  6491     0339  2B45               	goto	l3298
  6492     033A                     u4510:
  6493     033A                     l3296:
  6494     033A  307F               	movlw	127
  6495     033B  1683               	bsf	3,5	;RP0=1, select bank1
  6496     033C  1303               	bcf	3,6	;RP1=0, select bank1
  6497     033D  00C0               	movwf	(___flmul@prod+3)^(0+128)
  6498     033E  3080               	movlw	128
  6499     033F  00BF               	movwf	(___flmul@prod+2)^(0+128)
  6500     0340  3000               	movlw	0
  6501     0341  00BE               	movwf	(___flmul@prod+1)^(0+128)
  6502     0342  3000               	movlw	0
  6503     0343  00BD               	movwf	___flmul@prod^(0+128)
  6504     0344  2B76               	goto	l870
  6505     0345                     l3298:
  6506     0345  1683               	bsf	3,5	;RP0=1, select bank1
  6507     0346  1303               	bcf	3,6	;RP1=0, select bank1
  6508     0347  0842               	movf	(___flmul@temp+1)^(0+128),w
  6509     0348  3A80               	xorlw	128
  6510     0349  00FF               	movwf	btemp+1
  6511     034A  3080               	movlw	128
  6512     034B  027F               	subwf	btemp+1,w
  6513     034C  1D03               	skipz
  6514     034D  2B50               	goto	u4525
  6515     034E  3001               	movlw	1
  6516     034F  0241               	subwf	___flmul@temp^(0+128),w
  6517     0350                     u4525:
  6518     0350  1803               	skipnc
  6519     0351  2B53               	goto	u4521
  6520     0352  2B54               	goto	u4520
  6521     0353                     u4521:
  6522     0353  2B60               	goto	l3304
  6523     0354                     u4520:
  6524     0354                     l3300:
  6525     0354  3000               	movlw	0
  6526     0355  1683               	bsf	3,5	;RP0=1, select bank1
  6527     0356  1303               	bcf	3,6	;RP1=0, select bank1
  6528     0357  00C0               	movwf	(___flmul@prod+3)^(0+128)
  6529     0358  3000               	movlw	0
  6530     0359  00BF               	movwf	(___flmul@prod+2)^(0+128)
  6531     035A  3000               	movlw	0
  6532     035B  00BE               	movwf	(___flmul@prod+1)^(0+128)
  6533     035C  3000               	movlw	0
  6534     035D  00BD               	movwf	___flmul@prod^(0+128)
  6535     035E                     l3302:
  6536     035E  01B6               	clrf	___flmul@sign^(0+128)
  6537     035F  2B76               	goto	l870
  6538     0360                     l3304:
  6539     0360  1683               	bsf	3,5	;RP0=1, select bank1
  6540     0361  1303               	bcf	3,6	;RP1=0, select bank1
  6541     0362  0841               	movf	___flmul@temp^(0+128),w
  6542     0363  00BC               	movwf	___flmul@bexp^(0+128)
  6543     0364  30FF               	movlw	255
  6544     0365  05BD               	andwf	___flmul@prod^(0+128),f
  6545     0366  30FF               	movlw	255
  6546     0367  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  6547     0368  307F               	movlw	127
  6548     0369  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  6549     036A  3000               	movlw	0
  6550     036B  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  6551     036C                     l3306:
  6552     036C  1C3C               	btfss	___flmul@bexp^(0+128),0
  6553     036D  2B6F               	goto	u4531
  6554     036E  2B70               	goto	u4530
  6555     036F                     u4531:
  6556     036F  2B71               	goto	l3310
  6557     0370                     u4530:
  6558     0370                     l3308:
  6559     0370  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  6560     0371                     l3310:
  6561     0371  083C               	movf	___flmul@bexp^(0+128),w
  6562     0372  00B1               	movwf	??___flmul^(0+128)
  6563     0373  1003               	clrc
  6564     0374  0C31               	rrf	??___flmul^(0+128),w
  6565     0375  00C0               	movwf	(___flmul@prod^(0+128)+3)
  6566     0376                     l870:
  6567     0376  0836               	movf	___flmul@sign^(0+128),w
  6568     0377  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  6569     0378                     l3312:
  6570     0378  0840               	movf	(___flmul@prod+3)^(0+128),w
  6571     0379  00AC               	movwf	(?___flmul+3)^(0+128)
  6572     037A  083F               	movf	(___flmul@prod+2)^(0+128),w
  6573     037B  00AB               	movwf	(?___flmul+2)^(0+128)
  6574     037C  083E               	movf	(___flmul@prod+1)^(0+128),w
  6575     037D  00AA               	movwf	(?___flmul+1)^(0+128)
  6576     037E  083D               	movf	___flmul@prod^(0+128),w
  6577     037F  00A9               	movwf	?___flmul^(0+128)
  6578     0380                     l858:
  6579     0380  0008               	return
  6580     0381                     __end_of___flmul:
  6581                           
  6582                           	psect	text29
  6583     13E3                     __ptext29:	
  6584 ;; *************** function __Umul8_16 *****************
  6585 ;; Defined at:
  6586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  multiplier      1    wreg     unsigned char 
  6589 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  multiplier      1    8[BANK1 ] unsigned char 
  6592 ;;  word_mpld       2    6[BANK1 ] unsigned short 
  6593 ;;  product         2    4[BANK1 ] unsigned short 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  2    0[BANK1 ] unsigned int 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6603 ;;      Params:         0       0       2       0       0
  6604 ;;      Locals:         0       0       5       0       0
  6605 ;;      Temps:          0       0       2       0       0
  6606 ;;      Totals:         0       0       9       0       0
  6607 ;;Total ram usage:        9 bytes
  6608 ;; Hardware stack levels used: 1
  6609 ;; Hardware stack levels required when called: 2
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		___flmul
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617     13E3                     __Umul8_16:	
  6618                           ;psect for function __Umul8_16
  6619                           
  6620                           
  6621                           ;incstack = 0
  6622                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6623                           ;__Umul8_16@multiplier stored from wreg
  6624     13E3  1683               	bsf	3,5	;RP0=1, select bank1
  6625     13E4  1303               	bcf	3,6	;RP1=0, select bank1
  6626     13E5  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  6627     13E6                     l2720:
  6628     13E6  01A4               	clrf	__Umul8_16@product^(0+128)
  6629     13E7  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  6630     13E8                     l2722:
  6631     13E8  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  6632     13E9  00A2               	movwf	??__Umul8_16^(0+128)
  6633     13EA  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  6634     13EB  0822               	movf	??__Umul8_16^(0+128),w
  6635     13EC  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  6636     13ED  0823               	movf	(??__Umul8_16+1)^(0+128),w
  6637     13EE  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  6638     13EF                     l2724:
  6639     13EF  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  6640     13F0  2BF2               	goto	u3261
  6641     13F1  2BF3               	goto	u3260
  6642     13F2                     u3261:
  6643     13F2  2BF9               	goto	l877
  6644     13F3                     u3260:
  6645     13F3                     l2726:
  6646     13F3  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  6647     13F4  07A4               	addwf	__Umul8_16@product^(0+128),f
  6648     13F5  1803               	skipnc
  6649     13F6  0AA5               	incf	(__Umul8_16@product+1)^(0+128),f
  6650     13F7  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  6651     13F8  07A5               	addwf	(__Umul8_16@product+1)^(0+128),f
  6652     13F9                     l877:
  6653     13F9  3001               	movlw	1
  6654     13FA                     u3275:
  6655     13FA  1003               	clrc
  6656     13FB  0DA6               	rlf	__Umul8_16@word_mpld^(0+128),f
  6657     13FC  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  6658     13FD  3EFF               	addlw	-1
  6659     13FE  1D03               	skipz
  6660     13FF  2BFA               	goto	u3275
  6661     1400  1003               	clrc
  6662     1401  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  6663     1402                     l2728:
  6664     1402  0828               	movf	__Umul8_16@multiplier^(0+128),w
  6665     1403  1D03               	btfss	3,2
  6666     1404  2C06               	goto	u3281
  6667     1405  2C07               	goto	u3280
  6668     1406                     u3281:
  6669     1406  2BEF               	goto	l2724
  6670     1407                     u3280:
  6671     1407                     l2730:
  6672     1407  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  6673     1408  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  6674     1409  0824               	movf	__Umul8_16@product^(0+128),w
  6675     140A  00A0               	movwf	?__Umul8_16^(0+128)
  6676     140B                     l879:
  6677     140B  0008               	return
  6678     140C                     __end_of__Umul8_16:
  6679                           
  6680                           	psect	text30
  6681     0C59                     __ptext30:	
  6682 ;; *************** function ___fldiv *****************
  6683 ;; Defined at:
  6684 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  a               4   35[BANK1 ] unsigned int 
  6687 ;;  b               4   39[BANK1 ] unsigned int 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;  grs             4   55[BANK1 ] unsigned long 
  6690 ;;  rem             4   48[BANK1 ] unsigned long 
  6691 ;;  new_exp         2   53[BANK1 ] short 
  6692 ;;  aexp            1   60[BANK1 ] unsigned char 
  6693 ;;  bexp            1   59[BANK1 ] unsigned char 
  6694 ;;  sign            1   52[BANK1 ] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  4   35[BANK1 ] unsigned char 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, btemp+1
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6704 ;;      Params:         0       0       8       0       0
  6705 ;;      Locals:         0       0      13       0       0
  6706 ;;      Temps:          0       0       5       0       0
  6707 ;;      Totals:         0       0      26       0       0
  6708 ;;Total ram usage:       26 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 2
  6711 ;; This function calls:
  6712 ;;		Nothing
  6713 ;; This function is called by:
  6714 ;;		_SR04_init
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718     0C59                     ___fldiv:	
  6719                           ;psect for function ___fldiv
  6720                           
  6721     0C59                     l3030:	
  6722                           ;incstack = 0
  6723                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6724                           
  6725     0C59  1683               	bsf	3,5	;RP0=1, select bank1
  6726     0C5A  1303               	bcf	3,6	;RP1=0, select bank1
  6727     0C5B  084A               	movf	(___fldiv@b^(0+128)+3),w
  6728     0C5C  00D4               	movwf	___fldiv@sign^(0+128)
  6729     0C5D                     l3032:
  6730     0C5D  3080               	movlw	128
  6731     0C5E  05D4               	andwf	___fldiv@sign^(0+128),f
  6732     0C5F                     l3034:
  6733     0C5F  084A               	movf	(___fldiv@b^(0+128)+3),w
  6734     0C60  00CB               	movwf	??___fldiv^(0+128)
  6735     0C61  074B               	addwf	??___fldiv^(0+128),w
  6736     0C62  00DB               	movwf	___fldiv@bexp^(0+128)
  6737     0C63                     l3036:
  6738     0C63  1FC9               	btfss	(___fldiv@b^(0+128)+2),7
  6739     0C64  2C66               	goto	u3881
  6740     0C65  2C67               	goto	u3880
  6741     0C66                     u3881:
  6742     0C66  2C68               	goto	l3040
  6743     0C67                     u3880:
  6744     0C67                     l3038:
  6745     0C67  145B               	bsf	___fldiv@bexp^(0+128),0
  6746     0C68                     l3040:
  6747     0C68  085B               	movf	___fldiv@bexp^(0+128),w
  6748     0C69  1903               	btfsc	3,2
  6749     0C6A  2C6C               	goto	u3891
  6750     0C6B  2C6D               	goto	u3890
  6751     0C6C                     u3891:
  6752     0C6C  2C7D               	goto	l3050
  6753     0C6D                     u3890:
  6754     0C6D                     l3042:
  6755     0C6D  0A5B               	incf	___fldiv@bexp^(0+128),w
  6756     0C6E  1D03               	btfss	3,2
  6757     0C6F  2C71               	goto	u3901
  6758     0C70  2C72               	goto	u3900
  6759     0C71                     u3901:
  6760     0C71  2C7A               	goto	l3046
  6761     0C72                     u3900:
  6762     0C72                     l3044:
  6763     0C72  3000               	movlw	0
  6764     0C73  00CA               	movwf	(___fldiv@b+3)^(0+128)
  6765     0C74  3000               	movlw	0
  6766     0C75  00C9               	movwf	(___fldiv@b+2)^(0+128)
  6767     0C76  3000               	movlw	0
  6768     0C77  00C8               	movwf	(___fldiv@b+1)^(0+128)
  6769     0C78  3000               	movlw	0
  6770     0C79  00C7               	movwf	___fldiv@b^(0+128)
  6771     0C7A                     l3046:
  6772     0C7A  17C9               	bsf	(___fldiv@b^(0+128)+2),7
  6773     0C7B                     l3048:
  6774     0C7B  01CA               	clrf	(___fldiv@b^(0+128)+3)
  6775     0C7C  2C85               	goto	l3052
  6776     0C7D                     l3050:
  6777     0C7D  3000               	movlw	0
  6778     0C7E  00CA               	movwf	(___fldiv@b+3)^(0+128)
  6779     0C7F  3000               	movlw	0
  6780     0C80  00C9               	movwf	(___fldiv@b+2)^(0+128)
  6781     0C81  3000               	movlw	0
  6782     0C82  00C8               	movwf	(___fldiv@b+1)^(0+128)
  6783     0C83  3000               	movlw	0
  6784     0C84  00C7               	movwf	___fldiv@b^(0+128)
  6785     0C85                     l3052:
  6786     0C85  0846               	movf	(___fldiv@a^(0+128)+3),w
  6787     0C86  3980               	andlw	128
  6788     0C87  06D4               	xorwf	___fldiv@sign^(0+128),f
  6789     0C88                     l3054:
  6790     0C88  0846               	movf	(___fldiv@a^(0+128)+3),w
  6791     0C89  00CB               	movwf	??___fldiv^(0+128)
  6792     0C8A  074B               	addwf	??___fldiv^(0+128),w
  6793     0C8B  00DC               	movwf	___fldiv@aexp^(0+128)
  6794     0C8C                     l3056:
  6795     0C8C  1FC5               	btfss	(___fldiv@a^(0+128)+2),7
  6796     0C8D  2C8F               	goto	u3911
  6797     0C8E  2C90               	goto	u3910
  6798     0C8F                     u3911:
  6799     0C8F  2C91               	goto	l3060
  6800     0C90                     u3910:
  6801     0C90                     l3058:
  6802     0C90  145C               	bsf	___fldiv@aexp^(0+128),0
  6803     0C91                     l3060:
  6804     0C91  085C               	movf	___fldiv@aexp^(0+128),w
  6805     0C92  1903               	btfsc	3,2
  6806     0C93  2C95               	goto	u3921
  6807     0C94  2C96               	goto	u3920
  6808     0C95                     u3921:
  6809     0C95  2CA6               	goto	l3070
  6810     0C96                     u3920:
  6811     0C96                     l3062:
  6812     0C96  0A5C               	incf	___fldiv@aexp^(0+128),w
  6813     0C97  1D03               	btfss	3,2
  6814     0C98  2C9A               	goto	u3931
  6815     0C99  2C9B               	goto	u3930
  6816     0C9A                     u3931:
  6817     0C9A  2CA3               	goto	l3066
  6818     0C9B                     u3930:
  6819     0C9B                     l3064:
  6820     0C9B  3000               	movlw	0
  6821     0C9C  00C6               	movwf	(___fldiv@a+3)^(0+128)
  6822     0C9D  3000               	movlw	0
  6823     0C9E  00C5               	movwf	(___fldiv@a+2)^(0+128)
  6824     0C9F  3000               	movlw	0
  6825     0CA0  00C4               	movwf	(___fldiv@a+1)^(0+128)
  6826     0CA1  3000               	movlw	0
  6827     0CA2  00C3               	movwf	___fldiv@a^(0+128)
  6828     0CA3                     l3066:
  6829     0CA3  17C5               	bsf	(___fldiv@a^(0+128)+2),7
  6830     0CA4                     l3068:
  6831     0CA4  01C6               	clrf	(___fldiv@a^(0+128)+3)
  6832     0CA5  2CAE               	goto	l818
  6833     0CA6                     l3070:
  6834     0CA6  3000               	movlw	0
  6835     0CA7  00C6               	movwf	(___fldiv@a+3)^(0+128)
  6836     0CA8  3000               	movlw	0
  6837     0CA9  00C5               	movwf	(___fldiv@a+2)^(0+128)
  6838     0CAA  3000               	movlw	0
  6839     0CAB  00C4               	movwf	(___fldiv@a+1)^(0+128)
  6840     0CAC  3000               	movlw	0
  6841     0CAD  00C3               	movwf	___fldiv@a^(0+128)
  6842     0CAE                     l818:
  6843     0CAE  0846               	movf	(___fldiv@a+3)^(0+128),w
  6844     0CAF  0445               	iorwf	(___fldiv@a+2)^(0+128),w
  6845     0CB0  0444               	iorwf	(___fldiv@a+1)^(0+128),w
  6846     0CB1  0443               	iorwf	___fldiv@a^(0+128),w
  6847     0CB2  1D03               	skipz
  6848     0CB3  2CB5               	goto	u3941
  6849     0CB4  2CB6               	goto	u3940
  6850     0CB5                     u3941:
  6851     0CB5  2CCD               	goto	l3080
  6852     0CB6                     u3940:
  6853     0CB6                     l3072:
  6854     0CB6  3000               	movlw	0
  6855     0CB7  00CA               	movwf	(___fldiv@b+3)^(0+128)
  6856     0CB8  3000               	movlw	0
  6857     0CB9  00C9               	movwf	(___fldiv@b+2)^(0+128)
  6858     0CBA  3000               	movlw	0
  6859     0CBB  00C8               	movwf	(___fldiv@b+1)^(0+128)
  6860     0CBC  3000               	movlw	0
  6861     0CBD  00C7               	movwf	___fldiv@b^(0+128)
  6862     0CBE  3080               	movlw	128
  6863     0CBF  04C9               	iorwf	(___fldiv@b^(0+128)+2),f
  6864     0CC0  307F               	movlw	127
  6865     0CC1  04CA               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  6866     0CC2                     l3074:
  6867     0CC2  0854               	movf	___fldiv@sign^(0+128),w
  6868     0CC3  04CA               	iorwf	(___fldiv@b^(0+128)+3),f
  6869     0CC4                     l3076:
  6870     0CC4  084A               	movf	(___fldiv@b+3)^(0+128),w
  6871     0CC5  00C6               	movwf	(?___fldiv+3)^(0+128)
  6872     0CC6  0849               	movf	(___fldiv@b+2)^(0+128),w
  6873     0CC7  00C5               	movwf	(?___fldiv+2)^(0+128)
  6874     0CC8  0848               	movf	(___fldiv@b+1)^(0+128),w
  6875     0CC9  00C4               	movwf	(?___fldiv+1)^(0+128)
  6876     0CCA  0847               	movf	___fldiv@b^(0+128),w
  6877     0CCB  00C3               	movwf	?___fldiv^(0+128)
  6878     0CCC  2E22               	goto	l820
  6879     0CCD                     l3080:
  6880     0CCD  085B               	movf	___fldiv@bexp^(0+128),w
  6881     0CCE  1D03               	btfss	3,2
  6882     0CCF  2CD1               	goto	u3951
  6883     0CD0  2CD2               	goto	u3950
  6884     0CD1                     u3951:
  6885     0CD1  2CDB               	goto	l3086
  6886     0CD2                     u3950:
  6887     0CD2                     l3082:
  6888     0CD2  3000               	movlw	0
  6889     0CD3  00C6               	movwf	(?___fldiv+3)^(0+128)
  6890     0CD4  3000               	movlw	0
  6891     0CD5  00C5               	movwf	(?___fldiv+2)^(0+128)
  6892     0CD6  3000               	movlw	0
  6893     0CD7  00C4               	movwf	(?___fldiv+1)^(0+128)
  6894     0CD8  3000               	movlw	0
  6895     0CD9  00C3               	movwf	?___fldiv^(0+128)
  6896     0CDA  2E22               	goto	l820
  6897     0CDB                     l3086:
  6898     0CDB  085B               	movf	___fldiv@bexp^(0+128),w
  6899     0CDC  00CB               	movwf	??___fldiv^(0+128)
  6900     0CDD  01CC               	clrf	(??___fldiv^(0+128)+1)
  6901     0CDE  084C               	movf	(??___fldiv+1)^(0+128),w
  6902     0CDF  00CE               	movwf	((??___fldiv+2)^(0+128)+1)
  6903     0CE0  085C               	movf	___fldiv@aexp^(0+128),w
  6904     0CE1  024B               	subwf	??___fldiv^(0+128),w
  6905     0CE2  00CD               	movwf	(??___fldiv+2)^(0+128)
  6906     0CE3  1C03               	skipc
  6907     0CE4  03CE               	decf	((??___fldiv+2)^(0+128)+1),f
  6908     0CE5  084D               	movf	(??___fldiv+2)^(0+128),w
  6909     0CE6  3E7F               	addlw	127
  6910     0CE7  00D5               	movwf	___fldiv@new_exp^(0+128)
  6911     0CE8  084E               	movf	(??___fldiv+3)^(0+128),w
  6912     0CE9  1803               	skipnc
  6913     0CEA  3E01               	addlw	1
  6914     0CEB  3E00               	addlw	0
  6915     0CEC  00D6               	movwf	(___fldiv@new_exp+1)^(0+128)
  6916     0CED                     l3088:
  6917     0CED  084A               	movf	(___fldiv@b+3)^(0+128),w
  6918     0CEE  00D3               	movwf	(___fldiv@rem+3)^(0+128)
  6919     0CEF  0849               	movf	(___fldiv@b+2)^(0+128),w
  6920     0CF0  00D2               	movwf	(___fldiv@rem+2)^(0+128)
  6921     0CF1  0848               	movf	(___fldiv@b+1)^(0+128),w
  6922     0CF2  00D1               	movwf	(___fldiv@rem+1)^(0+128)
  6923     0CF3  0847               	movf	___fldiv@b^(0+128),w
  6924     0CF4  00D0               	movwf	___fldiv@rem^(0+128)
  6925     0CF5                     l3090:
  6926     0CF5  3000               	movlw	0
  6927     0CF6  00CA               	movwf	(___fldiv@b+3)^(0+128)
  6928     0CF7  3000               	movlw	0
  6929     0CF8  00C9               	movwf	(___fldiv@b+2)^(0+128)
  6930     0CF9  3000               	movlw	0
  6931     0CFA  00C8               	movwf	(___fldiv@b+1)^(0+128)
  6932     0CFB  3000               	movlw	0
  6933     0CFC  00C7               	movwf	___fldiv@b^(0+128)
  6934     0CFD                     l3092:
  6935     0CFD  3000               	movlw	0
  6936     0CFE  00DA               	movwf	(___fldiv@grs+3)^(0+128)
  6937     0CFF  3000               	movlw	0
  6938     0D00  00D9               	movwf	(___fldiv@grs+2)^(0+128)
  6939     0D01  3000               	movlw	0
  6940     0D02  00D8               	movwf	(___fldiv@grs+1)^(0+128)
  6941     0D03  3000               	movlw	0
  6942     0D04  00D7               	movwf	___fldiv@grs^(0+128)
  6943     0D05                     l3094:
  6944     0D05  01DC               	clrf	___fldiv@aexp^(0+128)
  6945     0D06  2D4F               	goto	l3114
  6946     0D07                     l3096:
  6947     0D07  085C               	movf	___fldiv@aexp^(0+128),w
  6948     0D08  1903               	btfsc	3,2
  6949     0D09  2D0B               	goto	u3961
  6950     0D0A  2D0C               	goto	u3960
  6951     0D0B                     u3961:
  6952     0D0B  2D2C               	goto	l3106
  6953     0D0C                     u3960:
  6954     0D0C                     l3098:
  6955     0D0C  3001               	movlw	1
  6956     0D0D  00CB               	movwf	??___fldiv^(0+128)
  6957     0D0E                     u3975:
  6958     0D0E  1003               	clrc
  6959     0D0F  0DD0               	rlf	___fldiv@rem^(0+128),f
  6960     0D10  0DD1               	rlf	(___fldiv@rem+1)^(0+128),f
  6961     0D11  0DD2               	rlf	(___fldiv@rem+2)^(0+128),f
  6962     0D12  0DD3               	rlf	(___fldiv@rem+3)^(0+128),f
  6963     0D13  0BCB               	decfsz	??___fldiv^(0+128),f
  6964     0D14  2D0E               	goto	u3975
  6965     0D15  3001               	movlw	1
  6966     0D16  00CB               	movwf	??___fldiv^(0+128)
  6967     0D17                     u3985:
  6968     0D17  1003               	clrc
  6969     0D18  0DC7               	rlf	___fldiv@b^(0+128),f
  6970     0D19  0DC8               	rlf	(___fldiv@b+1)^(0+128),f
  6971     0D1A  0DC9               	rlf	(___fldiv@b+2)^(0+128),f
  6972     0D1B  0DCA               	rlf	(___fldiv@b+3)^(0+128),f
  6973     0D1C  0BCB               	decfsz	??___fldiv^(0+128),f
  6974     0D1D  2D17               	goto	u3985
  6975     0D1E                     l3100:
  6976     0D1E  1FDA               	btfss	(___fldiv@grs+3)^(0+128),7
  6977     0D1F  2D21               	goto	u3991
  6978     0D20  2D22               	goto	u3990
  6979     0D21                     u3991:
  6980     0D21  2D23               	goto	l3104
  6981     0D22                     u3990:
  6982     0D22                     l3102:
  6983     0D22  1447               	bsf	___fldiv@b^(0+128),0
  6984     0D23                     l3104:
  6985     0D23  3001               	movlw	1
  6986     0D24  00CB               	movwf	??___fldiv^(0+128)
  6987     0D25                     u4005:
  6988     0D25  1003               	clrc
  6989     0D26  0DD7               	rlf	___fldiv@grs^(0+128),f
  6990     0D27  0DD8               	rlf	(___fldiv@grs+1)^(0+128),f
  6991     0D28  0DD9               	rlf	(___fldiv@grs+2)^(0+128),f
  6992     0D29  0DDA               	rlf	(___fldiv@grs+3)^(0+128),f
  6993     0D2A  0BCB               	decfsz	??___fldiv^(0+128),f
  6994     0D2B  2D25               	goto	u4005
  6995     0D2C                     l3106:
  6996     0D2C  0846               	movf	(___fldiv@a+3)^(0+128),w
  6997     0D2D  0253               	subwf	(___fldiv@rem+3)^(0+128),w
  6998     0D2E  1D03               	skipz
  6999     0D2F  2D3A               	goto	u4015
  7000     0D30  0845               	movf	(___fldiv@a+2)^(0+128),w
  7001     0D31  0252               	subwf	(___fldiv@rem+2)^(0+128),w
  7002     0D32  1D03               	skipz
  7003     0D33  2D3A               	goto	u4015
  7004     0D34  0844               	movf	(___fldiv@a+1)^(0+128),w
  7005     0D35  0251               	subwf	(___fldiv@rem+1)^(0+128),w
  7006     0D36  1D03               	skipz
  7007     0D37  2D3A               	goto	u4015
  7008     0D38  0843               	movf	___fldiv@a^(0+128),w
  7009     0D39  0250               	subwf	___fldiv@rem^(0+128),w
  7010     0D3A                     u4015:
  7011     0D3A  1C03               	skipc
  7012     0D3B  2D3D               	goto	u4011
  7013     0D3C  2D3E               	goto	u4010
  7014     0D3D                     u4011:
  7015     0D3D  2D4D               	goto	l3112
  7016     0D3E                     u4010:
  7017     0D3E                     l3108:
  7018     0D3E  175A               	bsf	(___fldiv@grs^(0+128)+3),6
  7019     0D3F                     l3110:
  7020     0D3F  0843               	movf	___fldiv@a^(0+128),w
  7021     0D40  02D0               	subwf	___fldiv@rem^(0+128),f
  7022     0D41  0844               	movf	(___fldiv@a+1)^(0+128),w
  7023     0D42  1C03               	skipc
  7024     0D43  0F44               	incfsz	(___fldiv@a+1)^(0+128),w
  7025     0D44  02D1               	subwf	(___fldiv@rem+1)^(0+128),f
  7026     0D45  0845               	movf	(___fldiv@a+2)^(0+128),w
  7027     0D46  1C03               	skipc
  7028     0D47  0F45               	incfsz	(___fldiv@a+2)^(0+128),w
  7029     0D48  02D2               	subwf	(___fldiv@rem+2)^(0+128),f
  7030     0D49  0846               	movf	(___fldiv@a+3)^(0+128),w
  7031     0D4A  1C03               	skipc
  7032     0D4B  0F46               	incfsz	(___fldiv@a+3)^(0+128),w
  7033     0D4C  02D3               	subwf	(___fldiv@rem+3)^(0+128),f
  7034     0D4D                     l3112:
  7035     0D4D  3001               	movlw	1
  7036     0D4E  07DC               	addwf	___fldiv@aexp^(0+128),f
  7037     0D4F                     l3114:
  7038     0D4F  301A               	movlw	26
  7039     0D50  025C               	subwf	___fldiv@aexp^(0+128),w
  7040     0D51  1C03               	skipc
  7041     0D52  2D54               	goto	u4021
  7042     0D53  2D55               	goto	u4020
  7043     0D54                     u4021:
  7044     0D54  2D07               	goto	l3096
  7045     0D55                     u4020:
  7046     0D55                     l3116:
  7047     0D55  0853               	movf	(___fldiv@rem+3)^(0+128),w
  7048     0D56  0452               	iorwf	(___fldiv@rem+2)^(0+128),w
  7049     0D57  0451               	iorwf	(___fldiv@rem+1)^(0+128),w
  7050     0D58  0450               	iorwf	___fldiv@rem^(0+128),w
  7051     0D59  1903               	skipnz
  7052     0D5A  2D5C               	goto	u4031
  7053     0D5B  2D5D               	goto	u4030
  7054     0D5C                     u4031:
  7055     0D5C  2D7C               	goto	l3130
  7056     0D5D                     u4030:
  7057     0D5D                     l3118:
  7058     0D5D  1457               	bsf	___fldiv@grs^(0+128),0
  7059     0D5E  2D7C               	goto	l3130
  7060     0D5F                     l3120:
  7061     0D5F  3001               	movlw	1
  7062     0D60  00CB               	movwf	??___fldiv^(0+128)
  7063     0D61                     u4045:
  7064     0D61  1003               	clrc
  7065     0D62  0DC7               	rlf	___fldiv@b^(0+128),f
  7066     0D63  0DC8               	rlf	(___fldiv@b+1)^(0+128),f
  7067     0D64  0DC9               	rlf	(___fldiv@b+2)^(0+128),f
  7068     0D65  0DCA               	rlf	(___fldiv@b+3)^(0+128),f
  7069     0D66  0BCB               	decfsz	??___fldiv^(0+128),f
  7070     0D67  2D61               	goto	u4045
  7071     0D68                     l3122:
  7072     0D68  1FDA               	btfss	(___fldiv@grs+3)^(0+128),7
  7073     0D69  2D6B               	goto	u4051
  7074     0D6A  2D6C               	goto	u4050
  7075     0D6B                     u4051:
  7076     0D6B  2D6D               	goto	l3126
  7077     0D6C                     u4050:
  7078     0D6C                     l3124:
  7079     0D6C  1447               	bsf	___fldiv@b^(0+128),0
  7080     0D6D                     l3126:
  7081     0D6D  3001               	movlw	1
  7082     0D6E  00CB               	movwf	??___fldiv^(0+128)
  7083     0D6F                     u4065:
  7084     0D6F  1003               	clrc
  7085     0D70  0DD7               	rlf	___fldiv@grs^(0+128),f
  7086     0D71  0DD8               	rlf	(___fldiv@grs+1)^(0+128),f
  7087     0D72  0DD9               	rlf	(___fldiv@grs+2)^(0+128),f
  7088     0D73  0DDA               	rlf	(___fldiv@grs+3)^(0+128),f
  7089     0D74  0BCB               	decfsz	??___fldiv^(0+128),f
  7090     0D75  2D6F               	goto	u4065
  7091     0D76                     l3128:
  7092     0D76  30FF               	movlw	255
  7093     0D77  07D5               	addwf	___fldiv@new_exp^(0+128),f
  7094     0D78  1803               	skipnc
  7095     0D79  0AD6               	incf	(___fldiv@new_exp+1)^(0+128),f
  7096     0D7A  30FF               	movlw	255
  7097     0D7B  07D6               	addwf	(___fldiv@new_exp+1)^(0+128),f
  7098     0D7C                     l3130:
  7099     0D7C  1FC9               	btfss	(___fldiv@b+2)^(0+128),7
  7100     0D7D  2D7F               	goto	u4071
  7101     0D7E  2D80               	goto	u4070
  7102     0D7F                     u4071:
  7103     0D7F  2D5F               	goto	l3120
  7104     0D80                     u4070:
  7105     0D80                     l3132:
  7106     0D80  01DC               	clrf	___fldiv@aexp^(0+128)
  7107     0D81                     l3134:
  7108     0D81  1FDA               	btfss	(___fldiv@grs+3)^(0+128),7
  7109     0D82  2D84               	goto	u4081
  7110     0D83  2D85               	goto	u4080
  7111     0D84                     u4081:
  7112     0D84  2DA1               	goto	l3142
  7113     0D85                     u4080:
  7114     0D85                     l3136:
  7115     0D85  30FF               	movlw	255
  7116     0D86  0557               	andwf	___fldiv@grs^(0+128),w
  7117     0D87  00CB               	movwf	??___fldiv^(0+128)
  7118     0D88  30FF               	movlw	255
  7119     0D89  0558               	andwf	(___fldiv@grs+1)^(0+128),w
  7120     0D8A  00CC               	movwf	(??___fldiv^(0+128)+1)
  7121     0D8B  30FF               	movlw	255
  7122     0D8C  0559               	andwf	(___fldiv@grs+2)^(0+128),w
  7123     0D8D  00CD               	movwf	(??___fldiv^(0+128)+2)
  7124     0D8E  307F               	movlw	127
  7125     0D8F  055A               	andwf	(___fldiv@grs+3)^(0+128),w
  7126     0D90  00CE               	movwf	(??___fldiv^(0+128)+3)
  7127     0D91  084E               	movf	(??___fldiv+3)^(0+128),w
  7128     0D92  044D               	iorwf	(??___fldiv+2)^(0+128),w
  7129     0D93  044C               	iorwf	(??___fldiv+1)^(0+128),w
  7130     0D94  044B               	iorwf	??___fldiv^(0+128),w
  7131     0D95  1903               	skipnz
  7132     0D96  2D98               	goto	u4091
  7133     0D97  2D99               	goto	u4090
  7134     0D98                     u4091:
  7135     0D98  2D9C               	goto	l834
  7136     0D99                     u4090:
  7137     0D99                     l3138:
  7138     0D99  3001               	movlw	1
  7139     0D9A  00DC               	movwf	___fldiv@aexp^(0+128)
  7140     0D9B  2DA1               	goto	l3142
  7141     0D9C                     l834:
  7142     0D9C  1C47               	btfss	___fldiv@b^(0+128),0
  7143     0D9D  2D9F               	goto	u4101
  7144     0D9E  2DA0               	goto	u4100
  7145     0D9F                     u4101:
  7146     0D9F  2DA1               	goto	l3142
  7147     0DA0                     u4100:
  7148     0DA0  2D99               	goto	l3138
  7149     0DA1                     l3142:
  7150     0DA1  085C               	movf	___fldiv@aexp^(0+128),w
  7151     0DA2  1903               	btfsc	3,2
  7152     0DA3  2DA5               	goto	u4111
  7153     0DA4  2DA6               	goto	u4110
  7154     0DA5                     u4111:
  7155     0DA5  2DD7               	goto	l3152
  7156     0DA6                     u4110:
  7157     0DA6                     l3144:
  7158     0DA6  3001               	movlw	1
  7159     0DA7  07C7               	addwf	___fldiv@b^(0+128),f
  7160     0DA8  3000               	movlw	0
  7161     0DA9  1803               	skipnc
  7162     0DAA  3001               	movlw	1
  7163     0DAB  07C8               	addwf	(___fldiv@b+1)^(0+128),f
  7164     0DAC  3000               	movlw	0
  7165     0DAD  1803               	skipnc
  7166     0DAE  3001               	movlw	1
  7167     0DAF  07C9               	addwf	(___fldiv@b+2)^(0+128),f
  7168     0DB0  3000               	movlw	0
  7169     0DB1  1803               	skipnc
  7170     0DB2  3001               	movlw	1
  7171     0DB3  07CA               	addwf	(___fldiv@b+3)^(0+128),f
  7172     0DB4                     l3146:
  7173     0DB4  1C4A               	btfss	(___fldiv@b+3)^(0+128),0
  7174     0DB5  2DB7               	goto	u4121
  7175     0DB6  2DB8               	goto	u4120
  7176     0DB7                     u4121:
  7177     0DB7  2DD7               	goto	l3152
  7178     0DB8                     u4120:
  7179     0DB8                     l3148:
  7180     0DB8  0847               	movf	___fldiv@b^(0+128),w
  7181     0DB9  00CB               	movwf	??___fldiv^(0+128)
  7182     0DBA  0848               	movf	(___fldiv@b+1)^(0+128),w
  7183     0DBB  00CC               	movwf	(??___fldiv^(0+128)+1)
  7184     0DBC  0849               	movf	(___fldiv@b+2)^(0+128),w
  7185     0DBD  00CD               	movwf	(??___fldiv^(0+128)+2)
  7186     0DBE  084A               	movf	(___fldiv@b+3)^(0+128),w
  7187     0DBF  00CE               	movwf	(??___fldiv^(0+128)+3)
  7188     0DC0  3001               	movlw	1
  7189     0DC1  00CF               	movwf	(??___fldiv+4)^(0+128)
  7190     0DC2                     u4135:
  7191     0DC2  0D4E               	rlf	(??___fldiv^(0+128)+3),w
  7192     0DC3  0CCE               	rrf	(??___fldiv^(0+128)+3),f
  7193     0DC4  0CCD               	rrf	(??___fldiv^(0+128)+2),f
  7194     0DC5  0CCC               	rrf	(??___fldiv^(0+128)+1),f
  7195     0DC6  0CCB               	rrf	??___fldiv^(0+128),f
  7196     0DC7                     u4130:
  7197     0DC7  0BCF               	decfsz	(??___fldiv+4)^(0+128),f
  7198     0DC8  2DC2               	goto	u4135
  7199     0DC9  084E               	movf	(??___fldiv+3)^(0+128),w
  7200     0DCA  00CA               	movwf	(___fldiv@b+3)^(0+128)
  7201     0DCB  084D               	movf	(??___fldiv+2)^(0+128),w
  7202     0DCC  00C9               	movwf	(___fldiv@b+2)^(0+128)
  7203     0DCD  084C               	movf	(??___fldiv+1)^(0+128),w
  7204     0DCE  00C8               	movwf	(___fldiv@b+1)^(0+128)
  7205     0DCF  084B               	movf	??___fldiv^(0+128),w
  7206     0DD0  00C7               	movwf	___fldiv@b^(0+128)
  7207     0DD1                     l3150:
  7208     0DD1  3001               	movlw	1
  7209     0DD2  07D5               	addwf	___fldiv@new_exp^(0+128),f
  7210     0DD3  1803               	skipnc
  7211     0DD4  0AD6               	incf	(___fldiv@new_exp+1)^(0+128),f
  7212     0DD5  3000               	movlw	0
  7213     0DD6  07D6               	addwf	(___fldiv@new_exp+1)^(0+128),f
  7214     0DD7                     l3152:
  7215     0DD7  0856               	movf	(___fldiv@new_exp+1)^(0+128),w
  7216     0DD8  3A80               	xorlw	128
  7217     0DD9  00FF               	movwf	btemp+1
  7218     0DDA  3080               	movlw	128
  7219     0DDB  027F               	subwf	btemp+1,w
  7220     0DDC  1D03               	skipz
  7221     0DDD  2DE0               	goto	u4145
  7222     0DDE  30FF               	movlw	255
  7223     0DDF  0255               	subwf	___fldiv@new_exp^(0+128),w
  7224     0DE0                     u4145:
  7225     0DE0  1C03               	skipc
  7226     0DE1  2DE3               	goto	u4141
  7227     0DE2  2DE4               	goto	u4140
  7228     0DE3                     u4141:
  7229     0DE3  2DF2               	goto	l3156
  7230     0DE4                     u4140:
  7231     0DE4                     l3154:
  7232     0DE4  30FF               	movlw	255
  7233     0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  7234     0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  7235     0DE7  00D5               	movwf	___fldiv@new_exp^(0+128)
  7236     0DE8  3000               	movlw	0
  7237     0DE9  00D6               	movwf	(___fldiv@new_exp^(0+128)+1)
  7238     0DEA  3000               	movlw	0
  7239     0DEB  00CA               	movwf	(___fldiv@b+3)^(0+128)
  7240     0DEC  3000               	movlw	0
  7241     0DED  00C9               	movwf	(___fldiv@b+2)^(0+128)
  7242     0DEE  3000               	movlw	0
  7243     0DEF  00C8               	movwf	(___fldiv@b+1)^(0+128)
  7244     0DF0  3000               	movlw	0
  7245     0DF1  00C7               	movwf	___fldiv@b^(0+128)
  7246     0DF2                     l3156:
  7247     0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  7248     0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  7249     0DF4  0856               	movf	(___fldiv@new_exp+1)^(0+128),w
  7250     0DF5  3A80               	xorlw	128
  7251     0DF6  00FF               	movwf	btemp+1
  7252     0DF7  3080               	movlw	128
  7253     0DF8  027F               	subwf	btemp+1,w
  7254     0DF9  1D03               	skipz
  7255     0DFA  2DFD               	goto	u4155
  7256     0DFB  3001               	movlw	1
  7257     0DFC  0255               	subwf	___fldiv@new_exp^(0+128),w
  7258     0DFD                     u4155:
  7259     0DFD  1803               	skipnc
  7260     0DFE  2E00               	goto	u4151
  7261     0DFF  2E01               	goto	u4150
  7262     0E00                     u4151:
  7263     0E00  2E0E               	goto	l840
  7264     0E01                     u4150:
  7265     0E01                     l3158:
  7266     0E01  1683               	bsf	3,5	;RP0=1, select bank1
  7267     0E02  1303               	bcf	3,6	;RP1=0, select bank1
  7268     0E03  01D5               	clrf	___fldiv@new_exp^(0+128)
  7269     0E04  01D6               	clrf	(___fldiv@new_exp+1)^(0+128)
  7270     0E05                     l3160:
  7271     0E05  3000               	movlw	0
  7272     0E06  00CA               	movwf	(___fldiv@b+3)^(0+128)
  7273     0E07  3000               	movlw	0
  7274     0E08  00C9               	movwf	(___fldiv@b+2)^(0+128)
  7275     0E09  3000               	movlw	0
  7276     0E0A  00C8               	movwf	(___fldiv@b+1)^(0+128)
  7277     0E0B  3000               	movlw	0
  7278     0E0C  00C7               	movwf	___fldiv@b^(0+128)
  7279     0E0D                     l3162:
  7280     0E0D  01D4               	clrf	___fldiv@sign^(0+128)
  7281     0E0E                     l840:
  7282     0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  7283     0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  7284     0E10  0855               	movf	___fldiv@new_exp^(0+128),w
  7285     0E11  00DB               	movwf	___fldiv@bexp^(0+128)
  7286     0E12                     l3164:
  7287     0E12  1C5B               	btfss	___fldiv@bexp^(0+128),0
  7288     0E13  2E15               	goto	u4161
  7289     0E14  2E16               	goto	u4160
  7290     0E15                     u4161:
  7291     0E15  2E18               	goto	l3168
  7292     0E16                     u4160:
  7293     0E16                     l3166:
  7294     0E16  17C9               	bsf	(___fldiv@b^(0+128)+2),7
  7295     0E17  2E1A               	goto	l842
  7296     0E18                     l3168:
  7297     0E18  307F               	movlw	127
  7298     0E19  05C9               	andwf	(___fldiv@b^(0+128)+2),f
  7299     0E1A                     l842:
  7300     0E1A  085B               	movf	___fldiv@bexp^(0+128),w
  7301     0E1B  00CB               	movwf	??___fldiv^(0+128)
  7302     0E1C  1003               	clrc
  7303     0E1D  0C4B               	rrf	??___fldiv^(0+128),w
  7304     0E1E  00CA               	movwf	(___fldiv@b^(0+128)+3)
  7305     0E1F  0854               	movf	___fldiv@sign^(0+128),w
  7306     0E20  04CA               	iorwf	(___fldiv@b^(0+128)+3),f
  7307     0E21  2CC4               	goto	l3076
  7308     0E22                     l820:
  7309     0E22  0008               	return
  7310     0E23                     __end_of___fldiv:
  7311                           
  7312                           	psect	text31
  7313     0381                     __ptext31:	
  7314 ;; *************** function ___fladd *****************
  7315 ;; Defined at:
  7316 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  b               4   61[BANK1 ] unsigned char 
  7319 ;;  a               4   65[BANK1 ] unsigned char 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  grs             1    3[BANK3 ] unsigned char 
  7322 ;;  bexp            1    2[BANK3 ] unsigned char 
  7323 ;;  aexp            1    1[BANK3 ] unsigned char 
  7324 ;;  signs           1    0[BANK3 ] unsigned char 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  4   61[BANK1 ] unsigned char 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0, btemp+1
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7334 ;;      Params:         0       0       8       0       0
  7335 ;;      Locals:         0       0       0       4       0
  7336 ;;      Temps:          0       0       8       0       0
  7337 ;;      Totals:         0       0      16       4       0
  7338 ;;Total ram usage:       20 bytes
  7339 ;; Hardware stack levels used: 1
  7340 ;; Hardware stack levels required when called: 2
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_SR04_init
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348     0381                     ___fladd:	
  7349                           ;psect for function ___fladd
  7350                           
  7351     0381                     l2832:	
  7352                           ;incstack = 0
  7353                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7354                           
  7355     0381  1683               	bsf	3,5	;RP0=1, select bank1
  7356     0382  1303               	bcf	3,6	;RP1=0, select bank1
  7357     0383  0860               	movf	(___fladd@b^(0+128)+3),w
  7358     0384  1683               	bsf	3,5	;RP0=1, select bank3
  7359     0385  1703               	bsf	3,6	;RP1=1, select bank3
  7360     0386  0090               	movwf	___fladd@signs^(0+384)
  7361     0387                     l2834:
  7362     0387  3080               	movlw	128
  7363     0388  0590               	andwf	___fladd@signs^(0+384),f
  7364     0389                     l2836:
  7365     0389  1683               	bsf	3,5	;RP0=1, select bank1
  7366     038A  1303               	bcf	3,6	;RP1=0, select bank1
  7367     038B  0860               	movf	(___fladd@b^(0+128)+3),w
  7368     038C  00E5               	movwf	??___fladd^(0+128)
  7369     038D  0765               	addwf	??___fladd^(0+128),w
  7370     038E  1683               	bsf	3,5	;RP0=1, select bank3
  7371     038F  1703               	bsf	3,6	;RP1=1, select bank3
  7372     0390  0092               	movwf	___fladd@bexp^(0+384)
  7373     0391                     l2838:
  7374     0391  1683               	bsf	3,5	;RP0=1, select bank1
  7375     0392  1303               	bcf	3,6	;RP1=0, select bank1
  7376     0393  1FDF               	btfss	(___fladd@b^(0+128)+2),7
  7377     0394  2B96               	goto	u3421
  7378     0395  2B97               	goto	u3420
  7379     0396                     u3421:
  7380     0396  2B9A               	goto	l2842
  7381     0397                     u3420:
  7382     0397                     l2840:
  7383     0397  1683               	bsf	3,5	;RP0=1, select bank3
  7384     0398  1703               	bsf	3,6	;RP1=1, select bank3
  7385     0399  1412               	bsf	___fladd@bexp^(0+384),0
  7386     039A                     l2842:
  7387     039A  1683               	bsf	3,5	;RP0=1, select bank3
  7388     039B  1703               	bsf	3,6	;RP1=1, select bank3
  7389     039C  0812               	movf	___fladd@bexp^(0+384),w
  7390     039D  1903               	btfsc	3,2
  7391     039E  2BA0               	goto	u3431
  7392     039F  2BA1               	goto	u3430
  7393     03A0                     u3431:
  7394     03A0  2BB4               	goto	l2852
  7395     03A1                     u3430:
  7396     03A1                     l2844:
  7397     03A1  0A12               	incf	___fladd@bexp^(0+384),w
  7398     03A2  1D03               	btfss	3,2
  7399     03A3  2BA5               	goto	u3441
  7400     03A4  2BA6               	goto	u3440
  7401     03A5                     u3441:
  7402     03A5  2BB0               	goto	l2848
  7403     03A6                     u3440:
  7404     03A6                     l2846:
  7405     03A6  3000               	movlw	0
  7406     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  7407     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  7408     03A9  00E0               	movwf	(___fladd@b+3)^(0+128)
  7409     03AA  3000               	movlw	0
  7410     03AB  00DF               	movwf	(___fladd@b+2)^(0+128)
  7411     03AC  3000               	movlw	0
  7412     03AD  00DE               	movwf	(___fladd@b+1)^(0+128)
  7413     03AE  3000               	movlw	0
  7414     03AF  00DD               	movwf	___fladd@b^(0+128)
  7415     03B0                     l2848:
  7416     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  7417     03B1  17DF               	bsf	(___fladd@b^(0+128)+2),7
  7418     03B2                     l2850:
  7419     03B2  01E0               	clrf	(___fladd@b^(0+128)+3)
  7420     03B3  2BBE               	goto	l757
  7421     03B4                     l2852:
  7422     03B4  3000               	movlw	0
  7423     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  7424     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  7425     03B7  00E0               	movwf	(___fladd@b+3)^(0+128)
  7426     03B8  3000               	movlw	0
  7427     03B9  00DF               	movwf	(___fladd@b+2)^(0+128)
  7428     03BA  3000               	movlw	0
  7429     03BB  00DE               	movwf	(___fladd@b+1)^(0+128)
  7430     03BC  3000               	movlw	0
  7431     03BD  00DD               	movwf	___fladd@b^(0+128)
  7432     03BE                     l757:
  7433     03BE  0864               	movf	(___fladd@a^(0+128)+3),w
  7434     03BF  1683               	bsf	3,5	;RP0=1, select bank3
  7435     03C0  1703               	bsf	3,6	;RP1=1, select bank3
  7436     03C1  0091               	movwf	___fladd@aexp^(0+384)
  7437     03C2                     l2854:
  7438     03C2  3080               	movlw	128
  7439     03C3  0591               	andwf	___fladd@aexp^(0+384),f
  7440     03C4                     l2856:
  7441     03C4  0811               	movf	___fladd@aexp^(0+384),w
  7442     03C5  0610               	xorwf	___fladd@signs^(0+384),w
  7443     03C6  1903               	skipnz
  7444     03C7  2BC9               	goto	u3451
  7445     03C8  2BCA               	goto	u3450
  7446     03C9                     u3451:
  7447     03C9  2BCB               	goto	l2860
  7448     03CA                     u3450:
  7449     03CA                     l2858:
  7450     03CA  1710               	bsf	___fladd@signs^(0+384),6
  7451     03CB                     l2860:
  7452     03CB  1683               	bsf	3,5	;RP0=1, select bank1
  7453     03CC  1303               	bcf	3,6	;RP1=0, select bank1
  7454     03CD  0864               	movf	(___fladd@a^(0+128)+3),w
  7455     03CE  00E5               	movwf	??___fladd^(0+128)
  7456     03CF  0765               	addwf	??___fladd^(0+128),w
  7457     03D0  1683               	bsf	3,5	;RP0=1, select bank3
  7458     03D1  1703               	bsf	3,6	;RP1=1, select bank3
  7459     03D2  0091               	movwf	___fladd@aexp^(0+384)
  7460     03D3                     l2862:
  7461     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  7462     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  7463     03D5  1FE3               	btfss	(___fladd@a^(0+128)+2),7
  7464     03D6  2BD8               	goto	u3461
  7465     03D7  2BD9               	goto	u3460
  7466     03D8                     u3461:
  7467     03D8  2BDC               	goto	l2866
  7468     03D9                     u3460:
  7469     03D9                     l2864:
  7470     03D9  1683               	bsf	3,5	;RP0=1, select bank3
  7471     03DA  1703               	bsf	3,6	;RP1=1, select bank3
  7472     03DB  1411               	bsf	___fladd@aexp^(0+384),0
  7473     03DC                     l2866:
  7474     03DC  1683               	bsf	3,5	;RP0=1, select bank3
  7475     03DD  1703               	bsf	3,6	;RP1=1, select bank3
  7476     03DE  0811               	movf	___fladd@aexp^(0+384),w
  7477     03DF  1903               	btfsc	3,2
  7478     03E0  2BE2               	goto	u3471
  7479     03E1  2BE3               	goto	u3470
  7480     03E2                     u3471:
  7481     03E2  2BF6               	goto	l2876
  7482     03E3                     u3470:
  7483     03E3                     l2868:
  7484     03E3  0A11               	incf	___fladd@aexp^(0+384),w
  7485     03E4  1D03               	btfss	3,2
  7486     03E5  2BE7               	goto	u3481
  7487     03E6  2BE8               	goto	u3480
  7488     03E7                     u3481:
  7489     03E7  2BF2               	goto	l2872
  7490     03E8                     u3480:
  7491     03E8                     l2870:
  7492     03E8  3000               	movlw	0
  7493     03E9  1683               	bsf	3,5	;RP0=1, select bank1
  7494     03EA  1303               	bcf	3,6	;RP1=0, select bank1
  7495     03EB  00E4               	movwf	(___fladd@a+3)^(0+128)
  7496     03EC  3000               	movlw	0
  7497     03ED  00E3               	movwf	(___fladd@a+2)^(0+128)
  7498     03EE  3000               	movlw	0
  7499     03EF  00E2               	movwf	(___fladd@a+1)^(0+128)
  7500     03F0  3000               	movlw	0
  7501     03F1  00E1               	movwf	___fladd@a^(0+128)
  7502     03F2                     l2872:
  7503     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  7504     03F3  17E3               	bsf	(___fladd@a^(0+128)+2),7
  7505     03F4                     l2874:
  7506     03F4  01E4               	clrf	(___fladd@a^(0+128)+3)
  7507     03F5  2C00               	goto	l762
  7508     03F6                     l2876:
  7509     03F6  3000               	movlw	0
  7510     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  7511     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  7512     03F9  00E4               	movwf	(___fladd@a+3)^(0+128)
  7513     03FA  3000               	movlw	0
  7514     03FB  00E3               	movwf	(___fladd@a+2)^(0+128)
  7515     03FC  3000               	movlw	0
  7516     03FD  00E2               	movwf	(___fladd@a+1)^(0+128)
  7517     03FE  3000               	movlw	0
  7518     03FF  00E1               	movwf	___fladd@a^(0+128)
  7519     0400                     l762:
  7520     0400  1683               	bsf	3,5	;RP0=1, select bank3
  7521     0401  1703               	bsf	3,6	;RP1=1, select bank3
  7522     0402  0812               	movf	___fladd@bexp^(0+384),w
  7523     0403  0211               	subwf	___fladd@aexp^(0+384),w
  7524     0404  1803               	skipnc
  7525     0405  2C07               	goto	u3491
  7526     0406  2C08               	goto	u3490
  7527     0407                     u3491:
  7528     0407  2C4E               	goto	l2912
  7529     0408                     u3490:
  7530     0408                     l2878:
  7531     0408  1F10               	btfss	___fladd@signs^(0+384),6
  7532     0409  2C0B               	goto	u3501
  7533     040A  2C0C               	goto	u3500
  7534     040B                     u3501:
  7535     040B  2C0E               	goto	l2882
  7536     040C                     u3500:
  7537     040C                     l2880:
  7538     040C  3080               	movlw	128
  7539     040D  0690               	xorwf	___fladd@signs^(0+384),f
  7540     040E                     l2882:
  7541     040E  0812               	movf	___fladd@bexp^(0+384),w
  7542     040F  0093               	movwf	___fladd@grs^(0+384)
  7543     0410                     l2884:
  7544     0410  0811               	movf	___fladd@aexp^(0+384),w
  7545     0411  0092               	movwf	___fladd@bexp^(0+384)
  7546     0412                     l2886:
  7547     0412  0813               	movf	___fladd@grs^(0+384),w
  7548     0413  0091               	movwf	___fladd@aexp^(0+384)
  7549     0414                     l2888:
  7550     0414  1683               	bsf	3,5	;RP0=1, select bank1
  7551     0415  1303               	bcf	3,6	;RP1=0, select bank1
  7552     0416  085D               	movf	___fladd@b^(0+128),w
  7553     0417  1683               	bsf	3,5	;RP0=1, select bank3
  7554     0418  1703               	bsf	3,6	;RP1=1, select bank3
  7555     0419  0093               	movwf	___fladd@grs^(0+384)
  7556     041A                     l2890:
  7557     041A  1683               	bsf	3,5	;RP0=1, select bank1
  7558     041B  1303               	bcf	3,6	;RP1=0, select bank1
  7559     041C  0861               	movf	___fladd@a^(0+128),w
  7560     041D  00DD               	movwf	___fladd@b^(0+128)
  7561     041E                     l2892:
  7562     041E  1683               	bsf	3,5	;RP0=1, select bank3
  7563     041F  1703               	bsf	3,6	;RP1=1, select bank3
  7564     0420  0813               	movf	___fladd@grs^(0+384),w
  7565     0421  1683               	bsf	3,5	;RP0=1, select bank1
  7566     0422  1303               	bcf	3,6	;RP1=0, select bank1
  7567     0423  00E1               	movwf	___fladd@a^(0+128)
  7568     0424                     l2894:
  7569     0424  085E               	movf	(___fladd@b^(0+128)+1),w
  7570     0425  1683               	bsf	3,5	;RP0=1, select bank3
  7571     0426  1703               	bsf	3,6	;RP1=1, select bank3
  7572     0427  0093               	movwf	___fladd@grs^(0+384)
  7573     0428                     l2896:
  7574     0428  1683               	bsf	3,5	;RP0=1, select bank1
  7575     0429  1303               	bcf	3,6	;RP1=0, select bank1
  7576     042A  0862               	movf	(___fladd@a^(0+128)+1),w
  7577     042B  00DE               	movwf	(___fladd@b^(0+128)+1)
  7578     042C                     l2898:
  7579     042C  1683               	bsf	3,5	;RP0=1, select bank3
  7580     042D  1703               	bsf	3,6	;RP1=1, select bank3
  7581     042E  0813               	movf	___fladd@grs^(0+384),w
  7582     042F  1683               	bsf	3,5	;RP0=1, select bank1
  7583     0430  1303               	bcf	3,6	;RP1=0, select bank1
  7584     0431  00E2               	movwf	(___fladd@a^(0+128)+1)
  7585     0432                     l2900:
  7586     0432  085F               	movf	(___fladd@b^(0+128)+2),w
  7587     0433  1683               	bsf	3,5	;RP0=1, select bank3
  7588     0434  1703               	bsf	3,6	;RP1=1, select bank3
  7589     0435  0093               	movwf	___fladd@grs^(0+384)
  7590     0436                     l2902:
  7591     0436  1683               	bsf	3,5	;RP0=1, select bank1
  7592     0437  1303               	bcf	3,6	;RP1=0, select bank1
  7593     0438  0863               	movf	(___fladd@a^(0+128)+2),w
  7594     0439  00DF               	movwf	(___fladd@b^(0+128)+2)
  7595     043A                     l2904:
  7596     043A  1683               	bsf	3,5	;RP0=1, select bank3
  7597     043B  1703               	bsf	3,6	;RP1=1, select bank3
  7598     043C  0813               	movf	___fladd@grs^(0+384),w
  7599     043D  1683               	bsf	3,5	;RP0=1, select bank1
  7600     043E  1303               	bcf	3,6	;RP1=0, select bank1
  7601     043F  00E3               	movwf	(___fladd@a^(0+128)+2)
  7602     0440                     l2906:
  7603     0440  0860               	movf	(___fladd@b^(0+128)+3),w
  7604     0441  1683               	bsf	3,5	;RP0=1, select bank3
  7605     0442  1703               	bsf	3,6	;RP1=1, select bank3
  7606     0443  0093               	movwf	___fladd@grs^(0+384)
  7607     0444                     l2908:
  7608     0444  1683               	bsf	3,5	;RP0=1, select bank1
  7609     0445  1303               	bcf	3,6	;RP1=0, select bank1
  7610     0446  0864               	movf	(___fladd@a^(0+128)+3),w
  7611     0447  00E0               	movwf	(___fladd@b^(0+128)+3)
  7612     0448                     l2910:
  7613     0448  1683               	bsf	3,5	;RP0=1, select bank3
  7614     0449  1703               	bsf	3,6	;RP1=1, select bank3
  7615     044A  0813               	movf	___fladd@grs^(0+384),w
  7616     044B  1683               	bsf	3,5	;RP0=1, select bank1
  7617     044C  1303               	bcf	3,6	;RP1=0, select bank1
  7618     044D  00E4               	movwf	(___fladd@a^(0+128)+3)
  7619     044E                     l2912:
  7620     044E  1683               	bsf	3,5	;RP0=1, select bank3
  7621     044F  1703               	bsf	3,6	;RP1=1, select bank3
  7622     0450  0193               	clrf	___fladd@grs^(0+384)
  7623     0451                     l2914:
  7624     0451  0811               	movf	___fladd@aexp^(0+384),w
  7625     0452  1683               	bsf	3,5	;RP0=1, select bank1
  7626     0453  1303               	bcf	3,6	;RP1=0, select bank1
  7627     0454  00E5               	movwf	??___fladd^(0+128)
  7628     0455  01E6               	clrf	(??___fladd^(0+128)+1)
  7629     0456  0866               	movf	(??___fladd+1)^(0+128),w
  7630     0457  00E8               	movwf	((??___fladd+2)^(0+128)+1)
  7631     0458  1683               	bsf	3,5	;RP0=1, select bank3
  7632     0459  1703               	bsf	3,6	;RP1=1, select bank3
  7633     045A  0812               	movf	___fladd@bexp^(0+384),w
  7634     045B  1683               	bsf	3,5	;RP0=1, select bank1
  7635     045C  1303               	bcf	3,6	;RP1=0, select bank1
  7636     045D  0265               	subwf	??___fladd^(0+128),w
  7637     045E  00E7               	movwf	(??___fladd+2)^(0+128)
  7638     045F  1C03               	skipc
  7639     0460  03E8               	decf	((??___fladd+2)^(0+128)+1),f
  7640     0461  0868               	movf	(??___fladd+3)^(0+128),w
  7641     0462  3A80               	xorlw	128
  7642     0463  00FF               	movwf	btemp+1
  7643     0464  3080               	movlw	128
  7644     0465  027F               	subwf	btemp+1,w
  7645     0466  1D03               	skipz
  7646     0467  2C6A               	goto	u3515
  7647     0468  301A               	movlw	26
  7648     0469  0267               	subwf	(??___fladd+2)^(0+128),w
  7649     046A                     u3515:
  7650     046A  1C03               	skipc
  7651     046B  2C6D               	goto	u3511
  7652     046C  2C6E               	goto	u3510
  7653     046D                     u3511:
  7654     046D  2CB4               	goto	l2930
  7655     046E                     u3510:
  7656     046E                     l2916:
  7657     046E  1683               	bsf	3,5	;RP0=1, select bank1
  7658     046F  1303               	bcf	3,6	;RP1=0, select bank1
  7659     0470  0860               	movf	(___fladd@b+3)^(0+128),w
  7660     0471  045F               	iorwf	(___fladd@b+2)^(0+128),w
  7661     0472  045E               	iorwf	(___fladd@b+1)^(0+128),w
  7662     0473  045D               	iorwf	___fladd@b^(0+128),w
  7663     0474  1D03               	skipz
  7664     0475  2C77               	goto	u3521
  7665     0476  2C79               	goto	u3520
  7666     0477                     u3521:
  7667     0477  3001               	movlw	1
  7668     0478  2C7A               	goto	u3530
  7669     0479                     u3520:
  7670     0479  3000               	movlw	0
  7671     047A                     u3530:
  7672     047A  1683               	bsf	3,5	;RP0=1, select bank3
  7673     047B  1703               	bsf	3,6	;RP1=1, select bank3
  7674     047C  0093               	movwf	___fladd@grs^(0+384)
  7675     047D  3000               	movlw	0
  7676     047E  1683               	bsf	3,5	;RP0=1, select bank1
  7677     047F  1303               	bcf	3,6	;RP1=0, select bank1
  7678     0480  00E0               	movwf	(___fladd@b+3)^(0+128)
  7679     0481  3000               	movlw	0
  7680     0482  00DF               	movwf	(___fladd@b+2)^(0+128)
  7681     0483  3000               	movlw	0
  7682     0484  00DE               	movwf	(___fladd@b+1)^(0+128)
  7683     0485  3000               	movlw	0
  7684     0486  00DD               	movwf	___fladd@b^(0+128)
  7685     0487  1683               	bsf	3,5	;RP0=1, select bank3
  7686     0488  1703               	bsf	3,6	;RP1=1, select bank3
  7687     0489  0811               	movf	___fladd@aexp^(0+384),w
  7688     048A  0092               	movwf	___fladd@bexp^(0+384)
  7689     048B  2CBC               	goto	l766
  7690     048C                     l768:
  7691     048C  1C13               	btfss	___fladd@grs^(0+384),0
  7692     048D  2C8F               	goto	u3541
  7693     048E  2C90               	goto	u3540
  7694     048F                     u3541:
  7695     048F  2C9B               	goto	l2920
  7696     0490                     u3540:
  7697     0490                     l2918:
  7698     0490  0813               	movf	___fladd@grs^(0+384),w
  7699     0491  1683               	bsf	3,5	;RP0=1, select bank1
  7700     0492  1303               	bcf	3,6	;RP1=0, select bank1
  7701     0493  00E5               	movwf	??___fladd^(0+128)
  7702     0494  1003               	clrc
  7703     0495  0C65               	rrf	??___fladd^(0+128),w
  7704     0496  3801               	iorlw	1
  7705     0497  1683               	bsf	3,5	;RP0=1, select bank3
  7706     0498  1703               	bsf	3,6	;RP1=1, select bank3
  7707     0499  0093               	movwf	___fladd@grs^(0+384)
  7708     049A  2C9D               	goto	l2922
  7709     049B                     l2920:
  7710     049B  1003               	clrc
  7711     049C  0C93               	rrf	___fladd@grs^(0+384),f
  7712     049D                     l2922:
  7713     049D  1683               	bsf	3,5	;RP0=1, select bank1
  7714     049E  1303               	bcf	3,6	;RP1=0, select bank1
  7715     049F  1C5D               	btfss	___fladd@b^(0+128),0
  7716     04A0  2CA2               	goto	u3551
  7717     04A1  2CA3               	goto	u3550
  7718     04A2                     u3551:
  7719     04A2  2CA6               	goto	l2926
  7720     04A3                     u3550:
  7721     04A3                     l2924:
  7722     04A3  1683               	bsf	3,5	;RP0=1, select bank3
  7723     04A4  1703               	bsf	3,6	;RP1=1, select bank3
  7724     04A5  1793               	bsf	___fladd@grs^(0+384),7
  7725     04A6                     l2926:
  7726     04A6  3001               	movlw	1
  7727     04A7  1303               	bcf	3,6	;RP1=0, select bank1
  7728     04A8  00E5               	movwf	??___fladd^(0+128)
  7729     04A9                     u3565:
  7730     04A9  0D60               	rlf	(___fladd@b+3)^(0+128),w
  7731     04AA  0CE0               	rrf	(___fladd@b+3)^(0+128),f
  7732     04AB  0CDF               	rrf	(___fladd@b+2)^(0+128),f
  7733     04AC  0CDE               	rrf	(___fladd@b+1)^(0+128),f
  7734     04AD  0CDD               	rrf	___fladd@b^(0+128),f
  7735     04AE  0BE5               	decfsz	(??___fladd^(0+128))& (0+127),f
  7736     04AF  2CA9               	goto	u3565
  7737     04B0                     l2928:
  7738     04B0  3001               	movlw	1
  7739     04B1  1683               	bsf	3,5	;RP0=1, select bank3
  7740     04B2  1703               	bsf	3,6	;RP1=1, select bank3
  7741     04B3  0792               	addwf	___fladd@bexp^(0+384),f
  7742     04B4                     l2930:
  7743     04B4  1683               	bsf	3,5	;RP0=1, select bank3
  7744     04B5  1703               	bsf	3,6	;RP1=1, select bank3
  7745     04B6  0811               	movf	___fladd@aexp^(0+384),w
  7746     04B7  0212               	subwf	___fladd@bexp^(0+384),w
  7747     04B8  1C03               	skipc
  7748     04B9  2CBB               	goto	u3571
  7749     04BA  2CBC               	goto	u3570
  7750     04BB                     u3571:
  7751     04BB  2C8C               	goto	l768
  7752     04BC                     u3570:
  7753     04BC                     l766:
  7754     04BC  1B10               	btfsc	___fladd@signs^(0+384),6
  7755     04BD  2CBF               	goto	u3581
  7756     04BE  2CC0               	goto	u3580
  7757     04BF                     u3581:
  7758     04BF  2D18               	goto	l2956
  7759     04C0                     u3580:
  7760     04C0                     l2932:
  7761     04C0  0812               	movf	___fladd@bexp^(0+384),w
  7762     04C1  1D03               	btfss	3,2
  7763     04C2  2CC4               	goto	u3591
  7764     04C3  2CC5               	goto	u3590
  7765     04C4                     u3591:
  7766     04C4  2CD0               	goto	l2938
  7767     04C5                     u3590:
  7768     04C5                     l2934:
  7769     04C5  3000               	movlw	0
  7770     04C6  1683               	bsf	3,5	;RP0=1, select bank1
  7771     04C7  1303               	bcf	3,6	;RP1=0, select bank1
  7772     04C8  00E0               	movwf	(?___fladd+3)^(0+128)
  7773     04C9  3000               	movlw	0
  7774     04CA  00DF               	movwf	(?___fladd+2)^(0+128)
  7775     04CB  3000               	movlw	0
  7776     04CC  00DE               	movwf	(?___fladd+1)^(0+128)
  7777     04CD  3000               	movlw	0
  7778     04CE  00DD               	movwf	?___fladd^(0+128)
  7779     04CF  2E70               	goto	l775
  7780     04D0                     l2938:
  7781     04D0  1683               	bsf	3,5	;RP0=1, select bank1
  7782     04D1  1303               	bcf	3,6	;RP1=0, select bank1
  7783     04D2  0861               	movf	___fladd@a^(0+128),w
  7784     04D3  07DD               	addwf	___fladd@b^(0+128),f
  7785     04D4  0862               	movf	(___fladd@a+1)^(0+128),w
  7786     04D5  1103               	clrz
  7787     04D6  1803               	skipnc
  7788     04D7  3E01               	addlw	1
  7789     04D8  1903               	skipnz
  7790     04D9  2CDB               	goto	u3601
  7791     04DA  07DE               	addwf	(___fladd@b+1)^(0+128),f
  7792     04DB                     u3601:
  7793     04DB  0863               	movf	(___fladd@a+2)^(0+128),w
  7794     04DC  1103               	clrz
  7795     04DD  1803               	skipnc
  7796     04DE  3E01               	addlw	1
  7797     04DF  1903               	skipnz
  7798     04E0  2CE2               	goto	u3602
  7799     04E1  07DF               	addwf	(___fladd@b+2)^(0+128),f
  7800     04E2                     u3602:
  7801     04E2  0864               	movf	(___fladd@a+3)^(0+128),w
  7802     04E3  1103               	clrz
  7803     04E4  1803               	skipnc
  7804     04E5  3E01               	addlw	1
  7805     04E6  1903               	skipnz
  7806     04E7  2CE9               	goto	u3603
  7807     04E8  07E0               	addwf	(___fladd@b+3)^(0+128),f
  7808     04E9                     u3603:
  7809     04E9                     l2940:
  7810     04E9  1C60               	btfss	(___fladd@b+3)^(0+128),0
  7811     04EA  2CEC               	goto	u3611
  7812     04EB  2CED               	goto	u3610
  7813     04EC                     u3611:
  7814     04EC  2DDE               	goto	l2992
  7815     04ED                     u3610:
  7816     04ED                     l2942:
  7817     04ED  1683               	bsf	3,5	;RP0=1, select bank3
  7818     04EE  1703               	bsf	3,6	;RP1=1, select bank3
  7819     04EF  1C13               	btfss	___fladd@grs^(0+384),0
  7820     04F0  2CF2               	goto	u3621
  7821     04F1  2CF3               	goto	u3620
  7822     04F2                     u3621:
  7823     04F2  2CFE               	goto	l2946
  7824     04F3                     u3620:
  7825     04F3                     l2944:
  7826     04F3  0813               	movf	___fladd@grs^(0+384),w
  7827     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  7828     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  7829     04F6  00E5               	movwf	??___fladd^(0+128)
  7830     04F7  1003               	clrc
  7831     04F8  0C65               	rrf	??___fladd^(0+128),w
  7832     04F9  3801               	iorlw	1
  7833     04FA  1683               	bsf	3,5	;RP0=1, select bank3
  7834     04FB  1703               	bsf	3,6	;RP1=1, select bank3
  7835     04FC  0093               	movwf	___fladd@grs^(0+384)
  7836     04FD  2D00               	goto	l2948
  7837     04FE                     l2946:
  7838     04FE  1003               	clrc
  7839     04FF  0C93               	rrf	___fladd@grs^(0+384),f
  7840     0500                     l2948:
  7841     0500  1683               	bsf	3,5	;RP0=1, select bank1
  7842     0501  1303               	bcf	3,6	;RP1=0, select bank1
  7843     0502  1C5D               	btfss	___fladd@b^(0+128),0
  7844     0503  2D05               	goto	u3631
  7845     0504  2D06               	goto	u3630
  7846     0505                     u3631:
  7847     0505  2D09               	goto	l2952
  7848     0506                     u3630:
  7849     0506                     l2950:
  7850     0506  1683               	bsf	3,5	;RP0=1, select bank3
  7851     0507  1703               	bsf	3,6	;RP1=1, select bank3
  7852     0508  1793               	bsf	___fladd@grs^(0+384),7
  7853     0509                     l2952:
  7854     0509  3001               	movlw	1
  7855     050A  1303               	bcf	3,6	;RP1=0, select bank1
  7856     050B  00E5               	movwf	??___fladd^(0+128)
  7857     050C                     u3645:
  7858     050C  0D60               	rlf	(___fladd@b+3)^(0+128),w
  7859     050D  0CE0               	rrf	(___fladd@b+3)^(0+128),f
  7860     050E  0CDF               	rrf	(___fladd@b+2)^(0+128),f
  7861     050F  0CDE               	rrf	(___fladd@b+1)^(0+128),f
  7862     0510  0CDD               	rrf	___fladd@b^(0+128),f
  7863     0511  0BE5               	decfsz	(??___fladd^(0+128))& (0+127),f
  7864     0512  2D0C               	goto	u3645
  7865     0513                     l2954:
  7866     0513  3001               	movlw	1
  7867     0514  1683               	bsf	3,5	;RP0=1, select bank3
  7868     0515  1703               	bsf	3,6	;RP1=1, select bank3
  7869     0516  0792               	addwf	___fladd@bexp^(0+384),f
  7870     0517  2DDE               	goto	l2992
  7871     0518                     l2956:
  7872     0518  1683               	bsf	3,5	;RP0=1, select bank1
  7873     0519  1303               	bcf	3,6	;RP1=0, select bank1
  7874     051A  0860               	movf	(___fladd@b+3)^(0+128),w
  7875     051B  3A80               	xorlw	128
  7876     051C  00FF               	movwf	btemp+1
  7877     051D  0864               	movf	(___fladd@a+3)^(0+128),w
  7878     051E  3A80               	xorlw	128
  7879     051F  027F               	subwf	btemp+1,w
  7880     0520  1D03               	skipz
  7881     0521  2D2C               	goto	u3653
  7882     0522  0863               	movf	(___fladd@a+2)^(0+128),w
  7883     0523  025F               	subwf	(___fladd@b+2)^(0+128),w
  7884     0524  1D03               	skipz
  7885     0525  2D2C               	goto	u3653
  7886     0526  0862               	movf	(___fladd@a+1)^(0+128),w
  7887     0527  025E               	subwf	(___fladd@b+1)^(0+128),w
  7888     0528  1D03               	skipz
  7889     0529  2D2C               	goto	u3653
  7890     052A  0861               	movf	___fladd@a^(0+128),w
  7891     052B  025D               	subwf	___fladd@b^(0+128),w
  7892     052C                     u3653:
  7893     052C  1803               	skipnc
  7894     052D  2D2F               	goto	u3651
  7895     052E  2D30               	goto	u3650
  7896     052F                     u3651:
  7897     052F  2D8B               	goto	l2968
  7898     0530                     u3650:
  7899     0530                     l2958:
  7900     0530  30FF               	movlw	255
  7901     0531  00E5               	movwf	??___fladd^(0+128)
  7902     0532  30FF               	movlw	255
  7903     0533  00E6               	movwf	(??___fladd^(0+128)+1)
  7904     0534  30FF               	movlw	255
  7905     0535  00E7               	movwf	(??___fladd^(0+128)+2)
  7906     0536  30FF               	movlw	255
  7907     0537  00E8               	movwf	(??___fladd^(0+128)+3)
  7908     0538  0861               	movf	___fladd@a^(0+128),w
  7909     0539  00E9               	movwf	(??___fladd+4)^(0+128)
  7910     053A  0862               	movf	(___fladd@a+1)^(0+128),w
  7911     053B  00EA               	movwf	((??___fladd+4)^(0+128)+1)
  7912     053C  0863               	movf	(___fladd@a+2)^(0+128),w
  7913     053D  00EB               	movwf	((??___fladd+4)^(0+128)+2)
  7914     053E  0864               	movf	(___fladd@a+3)^(0+128),w
  7915     053F  00EC               	movwf	((??___fladd+4)^(0+128)+3)
  7916     0540  085D               	movf	___fladd@b^(0+128),w
  7917     0541  02E9               	subwf	(??___fladd+4)^(0+128),f
  7918     0542  085E               	movf	(___fladd@b+1)^(0+128),w
  7919     0543  1C03               	skipc
  7920     0544  0F5E               	incfsz	(___fladd@b+1)^(0+128),w
  7921     0545  2D47               	goto	u3661
  7922     0546  2D48               	goto	u3662
  7923     0547                     u3661:
  7924     0547  02EA               	subwf	((??___fladd+4)^(0+128)+1),f
  7925     0548                     u3662:
  7926     0548  085F               	movf	(___fladd@b+2)^(0+128),w
  7927     0549  1C03               	skipc
  7928     054A  0F5F               	incfsz	(___fladd@b+2)^(0+128),w
  7929     054B  2D4D               	goto	u3663
  7930     054C  2D4E               	goto	u3664
  7931     054D                     u3663:
  7932     054D  02EB               	subwf	((??___fladd+4)^(0+128)+2),f
  7933     054E                     u3664:
  7934     054E  0860               	movf	(___fladd@b+3)^(0+128),w
  7935     054F  1C03               	skipc
  7936     0550  0F60               	incfsz	(___fladd@b+3)^(0+128),w
  7937     0551  2D53               	goto	u3665
  7938     0552  2D54               	goto	u3666
  7939     0553                     u3665:
  7940     0553  02EC               	subwf	((??___fladd+4)^(0+128)+3),f
  7941     0554                     u3666:
  7942     0554  0869               	movf	(??___fladd+4)^(0+128),w
  7943     0555  07E5               	addwf	??___fladd^(0+128),f
  7944     0556  086A               	movf	(??___fladd+5)^(0+128),w
  7945     0557  1803               	skipnc
  7946     0558  0F6A               	incfsz	(??___fladd+5)^(0+128),w
  7947     0559  2D5B               	goto	u3670
  7948     055A  2D5C               	goto	u3671
  7949     055B                     u3670:
  7950     055B  07E6               	addwf	(??___fladd^(0+128)+1),f
  7951     055C                     u3671:
  7952     055C  086B               	movf	(??___fladd+6)^(0+128),w
  7953     055D  1803               	skipnc
  7954     055E  0F6B               	incfsz	(??___fladd+6)^(0+128),w
  7955     055F  2D61               	goto	u3672
  7956     0560  2D62               	goto	u3673
  7957     0561                     u3672:
  7958     0561  07E7               	addwf	(??___fladd^(0+128)+2),f
  7959     0562                     u3673:
  7960     0562  086C               	movf	(??___fladd+7)^(0+128),w
  7961     0563  1803               	skipnc
  7962     0564  0A6C               	incf	(??___fladd+7)^(0+128),w
  7963     0565  07E8               	addwf	(??___fladd^(0+128)+3),f
  7964     0566  0868               	movf	(??___fladd+3)^(0+128),w
  7965     0567  00E0               	movwf	(___fladd@b+3)^(0+128)
  7966     0568  0867               	movf	(??___fladd+2)^(0+128),w
  7967     0569  00DF               	movwf	(___fladd@b+2)^(0+128)
  7968     056A  0866               	movf	(??___fladd+1)^(0+128),w
  7969     056B  00DE               	movwf	(___fladd@b+1)^(0+128)
  7970     056C  0865               	movf	??___fladd^(0+128),w
  7971     056D  00DD               	movwf	___fladd@b^(0+128)
  7972     056E                     l2960:
  7973     056E  3080               	movlw	128
  7974     056F  1683               	bsf	3,5	;RP0=1, select bank3
  7975     0570  1703               	bsf	3,6	;RP1=1, select bank3
  7976     0571  0690               	xorwf	___fladd@signs^(0+384),f
  7977     0572                     l2962:
  7978     0572  0313               	decf	___fladd@grs^(0+384),w
  7979     0573  3AFF               	xorlw	255
  7980     0574  0093               	movwf	___fladd@grs^(0+384)
  7981     0575                     l2964:
  7982     0575  0813               	movf	___fladd@grs^(0+384),w
  7983     0576  1D03               	btfss	3,2
  7984     0577  2D79               	goto	u3681
  7985     0578  2D7A               	goto	u3680
  7986     0579                     u3681:
  7987     0579  2D99               	goto	l783
  7988     057A                     u3680:
  7989     057A                     l2966:
  7990     057A  3001               	movlw	1
  7991     057B  1683               	bsf	3,5	;RP0=1, select bank1
  7992     057C  1303               	bcf	3,6	;RP1=0, select bank1
  7993     057D  07DD               	addwf	___fladd@b^(0+128),f
  7994     057E  3000               	movlw	0
  7995     057F  1803               	skipnc
  7996     0580  3001               	movlw	1
  7997     0581  07DE               	addwf	(___fladd@b+1)^(0+128),f
  7998     0582  3000               	movlw	0
  7999     0583  1803               	skipnc
  8000     0584  3001               	movlw	1
  8001     0585  07DF               	addwf	(___fladd@b+2)^(0+128),f
  8002     0586  3000               	movlw	0
  8003     0587  1803               	skipnc
  8004     0588  3001               	movlw	1
  8005     0589  07E0               	addwf	(___fladd@b+3)^(0+128),f
  8006     058A  2D99               	goto	l783
  8007     058B                     l2968:
  8008     058B  0861               	movf	___fladd@a^(0+128),w
  8009     058C  02DD               	subwf	___fladd@b^(0+128),f
  8010     058D  0862               	movf	(___fladd@a+1)^(0+128),w
  8011     058E  1C03               	skipc
  8012     058F  0F62               	incfsz	(___fladd@a+1)^(0+128),w
  8013     0590  02DE               	subwf	(___fladd@b+1)^(0+128),f
  8014     0591  0863               	movf	(___fladd@a+2)^(0+128),w
  8015     0592  1C03               	skipc
  8016     0593  0F63               	incfsz	(___fladd@a+2)^(0+128),w
  8017     0594  02DF               	subwf	(___fladd@b+2)^(0+128),f
  8018     0595  0864               	movf	(___fladd@a+3)^(0+128),w
  8019     0596  1C03               	skipc
  8020     0597  0F64               	incfsz	(___fladd@a+3)^(0+128),w
  8021     0598  02E0               	subwf	(___fladd@b+3)^(0+128),f
  8022     0599                     l783:
  8023     0599  1303               	bcf	3,6	;RP1=0, select bank1
  8024     059A  0860               	movf	(___fladd@b+3)^(0+128),w
  8025     059B  045F               	iorwf	(___fladd@b+2)^(0+128),w
  8026     059C  045E               	iorwf	(___fladd@b+1)^(0+128),w
  8027     059D  045D               	iorwf	___fladd@b^(0+128),w
  8028     059E  1D03               	skipz
  8029     059F  2DA1               	goto	u3691
  8030     05A0  2DA2               	goto	u3690
  8031     05A1                     u3691:
  8032     05A1  2DD9               	goto	l2990
  8033     05A2                     u3690:
  8034     05A2                     l2970:
  8035     05A2  1683               	bsf	3,5	;RP0=1, select bank3
  8036     05A3  1703               	bsf	3,6	;RP1=1, select bank3
  8037     05A4  0813               	movf	___fladd@grs^(0+384),w
  8038     05A5  1D03               	btfss	3,2
  8039     05A6  2DA8               	goto	u3701
  8040     05A7  2DA9               	goto	u3700
  8041     05A8                     u3701:
  8042     05A8  2DD9               	goto	l2990
  8043     05A9                     u3700:
  8044     05A9                     l2972:
  8045     05A9  3000               	movlw	0
  8046     05AA  1683               	bsf	3,5	;RP0=1, select bank1
  8047     05AB  1303               	bcf	3,6	;RP1=0, select bank1
  8048     05AC  00E0               	movwf	(?___fladd+3)^(0+128)
  8049     05AD  3000               	movlw	0
  8050     05AE  00DF               	movwf	(?___fladd+2)^(0+128)
  8051     05AF  3000               	movlw	0
  8052     05B0  00DE               	movwf	(?___fladd+1)^(0+128)
  8053     05B1  3000               	movlw	0
  8054     05B2  00DD               	movwf	?___fladd^(0+128)
  8055     05B3  2E70               	goto	l775
  8056     05B4                     l2976:
  8057     05B4  3001               	movlw	1
  8058     05B5  00E5               	movwf	??___fladd^(0+128)
  8059     05B6                     u3715:
  8060     05B6  1003               	clrc
  8061     05B7  0DDD               	rlf	___fladd@b^(0+128),f
  8062     05B8  0DDE               	rlf	(___fladd@b+1)^(0+128),f
  8063     05B9  0DDF               	rlf	(___fladd@b+2)^(0+128),f
  8064     05BA  0DE0               	rlf	(___fladd@b+3)^(0+128),f
  8065     05BB  0BE5               	decfsz	??___fladd^(0+128),f
  8066     05BC  2DB6               	goto	u3715
  8067     05BD                     l2978:
  8068     05BD  1683               	bsf	3,5	;RP0=1, select bank3
  8069     05BE  1703               	bsf	3,6	;RP1=1, select bank3
  8070     05BF  1F93               	btfss	___fladd@grs^(0+384),7
  8071     05C0  2DC2               	goto	u3721
  8072     05C1  2DC3               	goto	u3720
  8073     05C2                     u3721:
  8074     05C2  2DC6               	goto	l787
  8075     05C3                     u3720:
  8076     05C3                     l2980:
  8077     05C3  1683               	bsf	3,5	;RP0=1, select bank1
  8078     05C4  1303               	bcf	3,6	;RP1=0, select bank1
  8079     05C5  145D               	bsf	___fladd@b^(0+128),0
  8080     05C6                     l787:
  8081     05C6  1683               	bsf	3,5	;RP0=1, select bank3
  8082     05C7  1703               	bsf	3,6	;RP1=1, select bank3
  8083     05C8  1C13               	btfss	___fladd@grs^(0+384),0
  8084     05C9  2DCB               	goto	u3731
  8085     05CA  2DCC               	goto	u3730
  8086     05CB                     u3731:
  8087     05CB  2DD0               	goto	l2984
  8088     05CC                     u3730:
  8089     05CC                     l2982:
  8090     05CC  1403               	setc
  8091     05CD  0D13               	rlf	___fladd@grs^(0+384),w
  8092     05CE  0093               	movwf	___fladd@grs^(0+384)
  8093     05CF  2DD2               	goto	l2986
  8094     05D0                     l2984:
  8095     05D0  1003               	clrc
  8096     05D1  0D93               	rlf	___fladd@grs^(0+384),f
  8097     05D2                     l2986:
  8098     05D2  0812               	movf	___fladd@bexp^(0+384),w
  8099     05D3  1903               	btfsc	3,2
  8100     05D4  2DD6               	goto	u3741
  8101     05D5  2DD7               	goto	u3740
  8102     05D6                     u3741:
  8103     05D6  2DD9               	goto	l2990
  8104     05D7                     u3740:
  8105     05D7                     l2988:
  8106     05D7  3001               	movlw	1
  8107     05D8  0292               	subwf	___fladd@bexp^(0+384),f
  8108     05D9                     l2990:
  8109     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  8110     05DA  1FDF               	btfss	(___fladd@b+2)^(0+128),7
  8111     05DB  2DDD               	goto	u3751
  8112     05DC  2DDE               	goto	u3750
  8113     05DD                     u3751:
  8114     05DD  2DB4               	goto	l2976
  8115     05DE                     u3750:
  8116     05DE                     l2992:
  8117     05DE  1683               	bsf	3,5	;RP0=1, select bank3
  8118     05DF  1703               	bsf	3,6	;RP1=1, select bank3
  8119     05E0  0191               	clrf	___fladd@aexp^(0+384)
  8120     05E1                     l2994:
  8121     05E1  1F93               	btfss	___fladd@grs^(0+384),7
  8122     05E2  2DE4               	goto	u3761
  8123     05E3  2DE5               	goto	u3760
  8124     05E4                     u3761:
  8125     05E4  2DF7               	goto	l3002
  8126     05E5                     u3760:
  8127     05E5                     l2996:
  8128     05E5  0813               	movf	___fladd@grs^(0+384),w
  8129     05E6  397F               	andlw	127
  8130     05E7  1903               	btfsc	3,2
  8131     05E8  2DEA               	goto	u3771
  8132     05E9  2DEB               	goto	u3770
  8133     05EA                     u3771:
  8134     05EA  2DF0               	goto	l793
  8135     05EB                     u3770:
  8136     05EB                     l2998:
  8137     05EB  3001               	movlw	1
  8138     05EC  1683               	bsf	3,5	;RP0=1, select bank3
  8139     05ED  1703               	bsf	3,6	;RP1=1, select bank3
  8140     05EE  0091               	movwf	___fladd@aexp^(0+384)
  8141     05EF  2DF7               	goto	l3002
  8142     05F0                     l793:
  8143     05F0  1683               	bsf	3,5	;RP0=1, select bank1
  8144     05F1  1303               	bcf	3,6	;RP1=0, select bank1
  8145     05F2  1C5D               	btfss	___fladd@b^(0+128),0
  8146     05F3  2DF5               	goto	u3781
  8147     05F4  2DF6               	goto	u3780
  8148     05F5                     u3781:
  8149     05F5  2DF7               	goto	l3002
  8150     05F6                     u3780:
  8151     05F6  2DEB               	goto	l2998
  8152     05F7                     l3002:
  8153     05F7  1683               	bsf	3,5	;RP0=1, select bank3
  8154     05F8  1703               	bsf	3,6	;RP1=1, select bank3
  8155     05F9  0811               	movf	___fladd@aexp^(0+384),w
  8156     05FA  1903               	btfsc	3,2
  8157     05FB  2DFD               	goto	u3791
  8158     05FC  2DFE               	goto	u3790
  8159     05FD                     u3791:
  8160     05FD  2E34               	goto	l796
  8161     05FE                     u3790:
  8162     05FE                     l3004:
  8163     05FE  3001               	movlw	1
  8164     05FF  1683               	bsf	3,5	;RP0=1, select bank1
  8165     0600  1303               	bcf	3,6	;RP1=0, select bank1
  8166     0601  07DD               	addwf	___fladd@b^(0+128),f
  8167     0602  3000               	movlw	0
  8168     0603  1803               	skipnc
  8169     0604  3001               	movlw	1
  8170     0605  07DE               	addwf	(___fladd@b+1)^(0+128),f
  8171     0606  3000               	movlw	0
  8172     0607  1803               	skipnc
  8173     0608  3001               	movlw	1
  8174     0609  07DF               	addwf	(___fladd@b+2)^(0+128),f
  8175     060A  3000               	movlw	0
  8176     060B  1803               	skipnc
  8177     060C  3001               	movlw	1
  8178     060D  07E0               	addwf	(___fladd@b+3)^(0+128),f
  8179     060E                     l3006:
  8180     060E  1C60               	btfss	(___fladd@b+3)^(0+128),0
  8181     060F  2E11               	goto	u3801
  8182     0610  2E12               	goto	u3800
  8183     0611                     u3801:
  8184     0611  2E34               	goto	l796
  8185     0612                     u3800:
  8186     0612                     l3008:
  8187     0612  085D               	movf	___fladd@b^(0+128),w
  8188     0613  00E5               	movwf	??___fladd^(0+128)
  8189     0614  085E               	movf	(___fladd@b+1)^(0+128),w
  8190     0615  00E6               	movwf	(??___fladd^(0+128)+1)
  8191     0616  085F               	movf	(___fladd@b+2)^(0+128),w
  8192     0617  00E7               	movwf	(??___fladd^(0+128)+2)
  8193     0618  0860               	movf	(___fladd@b+3)^(0+128),w
  8194     0619  00E8               	movwf	(??___fladd^(0+128)+3)
  8195     061A  3001               	movlw	1
  8196     061B  00E9               	movwf	(??___fladd+4)^(0+128)
  8197     061C                     u3815:
  8198     061C  0D68               	rlf	(??___fladd^(0+128)+3),w
  8199     061D  0CE8               	rrf	(??___fladd^(0+128)+3),f
  8200     061E  0CE7               	rrf	(??___fladd^(0+128)+2),f
  8201     061F  0CE6               	rrf	(??___fladd^(0+128)+1),f
  8202     0620  0CE5               	rrf	??___fladd^(0+128),f
  8203     0621                     u3810:
  8204     0621  0BE9               	decfsz	(??___fladd+4)^(0+128),f
  8205     0622  2E1C               	goto	u3815
  8206     0623  0868               	movf	(??___fladd+3)^(0+128),w
  8207     0624  00E0               	movwf	(___fladd@b+3)^(0+128)
  8208     0625  0867               	movf	(??___fladd+2)^(0+128),w
  8209     0626  00DF               	movwf	(___fladd@b+2)^(0+128)
  8210     0627  0866               	movf	(??___fladd+1)^(0+128),w
  8211     0628  00DE               	movwf	(___fladd@b+1)^(0+128)
  8212     0629  0865               	movf	??___fladd^(0+128),w
  8213     062A  00DD               	movwf	___fladd@b^(0+128)
  8214     062B  1683               	bsf	3,5	;RP0=1, select bank3
  8215     062C  1703               	bsf	3,6	;RP1=1, select bank3
  8216     062D  0A12               	incf	___fladd@bexp^(0+384),w
  8217     062E  1903               	btfsc	3,2
  8218     062F  2E31               	goto	u3821
  8219     0630  2E32               	goto	u3820
  8220     0631                     u3821:
  8221     0631  2E34               	goto	l796
  8222     0632                     u3820:
  8223     0632                     l3010:
  8224     0632  3001               	movlw	1
  8225     0633  0792               	addwf	___fladd@bexp^(0+384),f
  8226     0634                     l796:
  8227     0634  1683               	bsf	3,5	;RP0=1, select bank3
  8228     0635  1703               	bsf	3,6	;RP1=1, select bank3
  8229     0636  0A12               	incf	___fladd@bexp^(0+384),w
  8230     0637  1903               	btfsc	3,2
  8231     0638  2E3A               	goto	u3831
  8232     0639  2E3B               	goto	u3830
  8233     063A                     u3831:
  8234     063A  2E40               	goto	l3014
  8235     063B                     u3830:
  8236     063B                     l3012:
  8237     063B  0812               	movf	___fladd@bexp^(0+384),w
  8238     063C  1D03               	btfss	3,2
  8239     063D  2E3F               	goto	u3841
  8240     063E  2E40               	goto	u3840
  8241     063F                     u3841:
  8242     063F  2E52               	goto	l3020
  8243     0640                     u3840:
  8244     0640                     l3014:
  8245     0640  3000               	movlw	0
  8246     0641  1683               	bsf	3,5	;RP0=1, select bank1
  8247     0642  1303               	bcf	3,6	;RP1=0, select bank1
  8248     0643  00E0               	movwf	(___fladd@b+3)^(0+128)
  8249     0644  3000               	movlw	0
  8250     0645  00DF               	movwf	(___fladd@b+2)^(0+128)
  8251     0646  3000               	movlw	0
  8252     0647  00DE               	movwf	(___fladd@b+1)^(0+128)
  8253     0648  3000               	movlw	0
  8254     0649  00DD               	movwf	___fladd@b^(0+128)
  8255     064A                     l3016:
  8256     064A  1683               	bsf	3,5	;RP0=1, select bank3
  8257     064B  1703               	bsf	3,6	;RP1=1, select bank3
  8258     064C  0812               	movf	___fladd@bexp^(0+384),w
  8259     064D  1D03               	btfss	3,2
  8260     064E  2E50               	goto	u3851
  8261     064F  2E51               	goto	u3850
  8262     0650                     u3851:
  8263     0650  2E52               	goto	l3020
  8264     0651                     u3850:
  8265     0651                     l3018:
  8266     0651  0190               	clrf	___fladd@signs^(0+384)
  8267     0652                     l3020:
  8268     0652  1C12               	btfss	___fladd@bexp^(0+384),0
  8269     0653  2E55               	goto	u3861
  8270     0654  2E56               	goto	u3860
  8271     0655                     u3861:
  8272     0655  2E5A               	goto	l3024
  8273     0656                     u3860:
  8274     0656                     l3022:
  8275     0656  1683               	bsf	3,5	;RP0=1, select bank1
  8276     0657  1303               	bcf	3,6	;RP1=0, select bank1
  8277     0658  17DF               	bsf	(___fladd@b^(0+128)+2),7
  8278     0659  2E5E               	goto	l804
  8279     065A                     l3024:
  8280     065A  307F               	movlw	127
  8281     065B  1683               	bsf	3,5	;RP0=1, select bank1
  8282     065C  1303               	bcf	3,6	;RP1=0, select bank1
  8283     065D  05DF               	andwf	(___fladd@b^(0+128)+2),f
  8284     065E                     l804:
  8285     065E  1683               	bsf	3,5	;RP0=1, select bank3
  8286     065F  1703               	bsf	3,6	;RP1=1, select bank3
  8287     0660  0812               	movf	___fladd@bexp^(0+384),w
  8288     0661  1683               	bsf	3,5	;RP0=1, select bank1
  8289     0662  1303               	bcf	3,6	;RP1=0, select bank1
  8290     0663  00E5               	movwf	??___fladd^(0+128)
  8291     0664  1003               	clrc
  8292     0665  0C65               	rrf	??___fladd^(0+128),w
  8293     0666  00E0               	movwf	(___fladd@b^(0+128)+3)
  8294     0667                     l3026:
  8295     0667  1683               	bsf	3,5	;RP0=1, select bank3
  8296     0668  1703               	bsf	3,6	;RP1=1, select bank3
  8297     0669  1F90               	btfss	___fladd@signs^(0+384),7
  8298     066A  2E6C               	goto	u3871
  8299     066B  2E6D               	goto	u3870
  8300     066C                     u3871:
  8301     066C  2E70               	goto	l805
  8302     066D                     u3870:
  8303     066D                     l3028:
  8304     066D  1683               	bsf	3,5	;RP0=1, select bank1
  8305     066E  1303               	bcf	3,6	;RP1=0, select bank1
  8306     066F  17E0               	bsf	(___fladd@b^(0+128)+3),7
  8307     0670                     l805:
  8308     0670                     l775:
  8309     0670  0008               	return
  8310     0671                     __end_of___fladd:
  8311                           
  8312                           	psect	text32
  8313     1148                     __ptext32:	
  8314 ;; *************** function _LED_Init *****************
  8315 ;; Defined at:
  8316 ;;		line 61 in file "main.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, status,2, status,0
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8330 ;;      Params:         0       0       0       0       0
  8331 ;;      Locals:         0       0       0       0       0
  8332 ;;      Temps:          0       0       0       0       0
  8333 ;;      Totals:         0       0       0       0       0
  8334 ;;Total ram usage:        0 bytes
  8335 ;; Hardware stack levels used: 1
  8336 ;; Hardware stack levels required when called: 2
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_main
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344     1148                     _LED_Init:	
  8345                           ;psect for function _LED_Init
  8346                           
  8347     1148                     l3318:	
  8348                           ;incstack = 0
  8349                           ; Regs used in _LED_Init: [wreg+status,2+status,0]
  8350                           
  8351                           
  8352                           ;main.c: 63:     TRISC &= ~(1 << 2);
  8353     1148  30FB               	movlw	251
  8354     1149  1683               	bsf	3,5	;RP0=1, select bank1
  8355     114A  1303               	bcf	3,6	;RP1=0, select bank1
  8356     114B  0587               	andwf	7,f	;volatile
  8357                           
  8358                           ;main.c: 64:     PORTC &= ~(1 << 2);
  8359     114C  30FB               	movlw	251
  8360     114D  1283               	bcf	3,5	;RP0=0, select bank0
  8361     114E  1303               	bcf	3,6	;RP1=0, select bank0
  8362     114F  0587               	andwf	7,f	;volatile
  8363     1150                     l44:
  8364     1150  0008               	return
  8365     1151                     __end_of_LED_Init:
  8366                           
  8367                           	psect	text33
  8368     1763                     __ptext33:	
  8369 ;; *************** function _LCD_Init *****************
  8370 ;; Defined at:
  8371 ;;		line 91 in file "I2C_LCD.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  I2C_Add         1    wreg     unsigned char 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  I2C_Add         1    8[BANK1 ] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0, pclath, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8385 ;;      Params:         0       0       0       0       0
  8386 ;;      Locals:         0       0       1       0       0
  8387 ;;      Temps:          0       0       2       0       0
  8388 ;;      Totals:         0       0       3       0       0
  8389 ;;Total ram usage:        3 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; Hardware stack levels required when called: 7
  8392 ;; This function calls:
  8393 ;;		_IO_Expander_Write
  8394 ;;		_LCD_CMD
  8395 ;; This function is called by:
  8396 ;;		_main
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400     1763                     _LCD_Init:	
  8401                           ;psect for function _LCD_Init
  8402                           
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8406                           ;LCD_Init@I2C_Add stored from wreg
  8407     1763  1683               	bsf	3,5	;RP0=1, select bank1
  8408     1764  1303               	bcf	3,6	;RP1=0, select bank1
  8409     1765  00A8               	movwf	LCD_Init@I2C_Add^(0+128)
  8410     1766                     l3382:
  8411                           
  8412                           ;I2C_LCD.c: 91: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 92: {;I2C_LCD.c: 93:    
      +                           i2c_add = I2C_Add;
  8413     1766  0828               	movf	LCD_Init@I2C_Add^(0+128),w
  8414     1767  1283               	bcf	3,5	;RP0=0, select bank0
  8415     1768  1303               	bcf	3,6	;RP1=0, select bank0
  8416     1769  00D0               	movwf	_i2c_add
  8417     176A                     l3384:
  8418                           
  8419                           ;I2C_LCD.c: 94:     IO_Expander_Write(0x00);
  8420     176A  3000               	movlw	0
  8421     176B  160A  118A  2335  160A  118A  	fcall	_IO_Expander_Write
  8422     1770                     l3386:
  8423                           
  8424                           ;I2C_LCD.c: 95:     _delay((unsigned long)((30)*(12000000/4000.0)));
  8425     1770  3075               	movlw	117
  8426     1771  1683               	bsf	3,5	;RP0=1, select bank1
  8427     1772  1303               	bcf	3,6	;RP1=0, select bank1
  8428     1773  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8429     1774  30E0               	movlw	224
  8430     1775  00A6               	movwf	??_LCD_Init^(0+128)
  8431     1776                     u5397:
  8432     1776  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8433     1777  2F76               	goto	u5397
  8434     1778  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8435     1779  2F76               	goto	u5397
  8436     177A  0000               	nop
  8437                           
  8438                           ;I2C_LCD.c: 96:     LCD_CMD(0x03);
  8439     177B  3003               	movlw	3
  8440     177C  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8441     1781                     l3388:
  8442                           
  8443                           ;I2C_LCD.c: 97:     _delay((unsigned long)((5)*(12000000/4000.0)));
  8444     1781  3014               	movlw	20
  8445     1782  1683               	bsf	3,5	;RP0=1, select bank1
  8446     1783  1303               	bcf	3,6	;RP1=0, select bank1
  8447     1784  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8448     1785  3079               	movlw	121
  8449     1786  00A6               	movwf	??_LCD_Init^(0+128)
  8450     1787                     u5407:
  8451     1787  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8452     1788  2F87               	goto	u5407
  8453     1789  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8454     178A  2F87               	goto	u5407
  8455     178B                     l3390:
  8456                           
  8457                           ;I2C_LCD.c: 98:     LCD_CMD(0x03);
  8458     178B  3003               	movlw	3
  8459     178C  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8460                           
  8461                           ;I2C_LCD.c: 99:     _delay((unsigned long)((5)*(12000000/4000.0)));
  8462     1791  3014               	movlw	20
  8463     1792  1683               	bsf	3,5	;RP0=1, select bank1
  8464     1793  1303               	bcf	3,6	;RP1=0, select bank1
  8465     1794  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8466     1795  3079               	movlw	121
  8467     1796  00A6               	movwf	??_LCD_Init^(0+128)
  8468     1797                     u5417:
  8469     1797  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8470     1798  2F97               	goto	u5417
  8471     1799  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8472     179A  2F97               	goto	u5417
  8473     179B                     l3392:
  8474                           
  8475                           ;I2C_LCD.c: 100:     LCD_CMD(0x03);
  8476     179B  3003               	movlw	3
  8477     179C  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8478     17A1                     l3394:
  8479                           
  8480                           ;I2C_LCD.c: 101:     _delay((unsigned long)((5)*(12000000/4000.0)));
  8481     17A1  3014               	movlw	20
  8482     17A2  1683               	bsf	3,5	;RP0=1, select bank1
  8483     17A3  1303               	bcf	3,6	;RP1=0, select bank1
  8484     17A4  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8485     17A5  3079               	movlw	121
  8486     17A6  00A6               	movwf	??_LCD_Init^(0+128)
  8487     17A7                     u5427:
  8488     17A7  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8489     17A8  2FA7               	goto	u5427
  8490     17A9  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8491     17AA  2FA7               	goto	u5427
  8492                           
  8493                           ;I2C_LCD.c: 102:     LCD_CMD(0x02);
  8494     17AB  3002               	movlw	2
  8495     17AC  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8496     17B1                     l3396:
  8497                           
  8498                           ;I2C_LCD.c: 103:     _delay((unsigned long)((5)*(12000000/4000.0)));
  8499     17B1  3014               	movlw	20
  8500     17B2  1683               	bsf	3,5	;RP0=1, select bank1
  8501     17B3  1303               	bcf	3,6	;RP1=0, select bank1
  8502     17B4  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8503     17B5  3079               	movlw	121
  8504     17B6  00A6               	movwf	??_LCD_Init^(0+128)
  8505     17B7                     u5437:
  8506     17B7  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8507     17B8  2FB7               	goto	u5437
  8508     17B9  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8509     17BA  2FB7               	goto	u5437
  8510     17BB                     l3398:
  8511                           
  8512                           ;I2C_LCD.c: 104:     LCD_CMD(0x20 | (2 << 2));
  8513     17BB  3028               	movlw	40
  8514     17BC  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8515                           
  8516                           ;I2C_LCD.c: 105:     _delay((unsigned long)((50)*(12000000/4000.0)));
  8517     17C1  30C3               	movlw	195
  8518     17C2  1683               	bsf	3,5	;RP0=1, select bank1
  8519     17C3  1303               	bcf	3,6	;RP1=0, select bank1
  8520     17C4  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8521     17C5  30CC               	movlw	204
  8522     17C6  00A6               	movwf	??_LCD_Init^(0+128)
  8523     17C7                     u5447:
  8524     17C7  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8525     17C8  2FC7               	goto	u5447
  8526     17C9  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8527     17CA  2FC7               	goto	u5447
  8528     17CB  0000               	nop
  8529     17CC                     l3400:
  8530                           
  8531                           ;I2C_LCD.c: 106:     LCD_CMD(0x0C);
  8532     17CC  300C               	movlw	12
  8533     17CD  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8534     17D2                     l3402:
  8535                           
  8536                           ;I2C_LCD.c: 107:     _delay((unsigned long)((50)*(12000000/4000.0)));
  8537     17D2  30C3               	movlw	195
  8538     17D3  1683               	bsf	3,5	;RP0=1, select bank1
  8539     17D4  1303               	bcf	3,6	;RP1=0, select bank1
  8540     17D5  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8541     17D6  30CC               	movlw	204
  8542     17D7  00A6               	movwf	??_LCD_Init^(0+128)
  8543     17D8                     u5457:
  8544     17D8  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8545     17D9  2FD8               	goto	u5457
  8546     17DA  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8547     17DB  2FD8               	goto	u5457
  8548     17DC  0000               	nop
  8549                           
  8550                           ;I2C_LCD.c: 108:     LCD_CMD(0x01);
  8551     17DD  3001               	movlw	1
  8552     17DE  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8553     17E3                     l3404:
  8554                           
  8555                           ;I2C_LCD.c: 109:     _delay((unsigned long)((50)*(12000000/4000.0)));
  8556     17E3  30C3               	movlw	195
  8557     17E4  1683               	bsf	3,5	;RP0=1, select bank1
  8558     17E5  1303               	bcf	3,6	;RP1=0, select bank1
  8559     17E6  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8560     17E7  30CC               	movlw	204
  8561     17E8  00A6               	movwf	??_LCD_Init^(0+128)
  8562     17E9                     u5467:
  8563     17E9  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8564     17EA  2FE9               	goto	u5467
  8565     17EB  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8566     17EC  2FE9               	goto	u5467
  8567     17ED  0000               	nop
  8568     17EE                     l3406:
  8569                           
  8570                           ;I2C_LCD.c: 110:     LCD_CMD(0x04 | 0x02);
  8571     17EE  3006               	movlw	6
  8572     17EF  160A  118A  2356  160A  118A  	fcall	_LCD_CMD
  8573                           
  8574                           ;I2C_LCD.c: 111:     _delay((unsigned long)((50)*(12000000/4000.0)));
  8575     17F4  30C3               	movlw	195
  8576     17F5  1683               	bsf	3,5	;RP0=1, select bank1
  8577     17F6  1303               	bcf	3,6	;RP1=0, select bank1
  8578     17F7  00A7               	movwf	(??_LCD_Init^(0+128)+1)
  8579     17F8  30CC               	movlw	204
  8580     17F9  00A6               	movwf	??_LCD_Init^(0+128)
  8581     17FA                     u5477:
  8582     17FA  0BA6               	decfsz	??_LCD_Init^(0+128),f
  8583     17FB  2FFA               	goto	u5477
  8584     17FC  0BA7               	decfsz	(??_LCD_Init^(0+128)+1),f
  8585     17FD  2FFA               	goto	u5477
  8586     17FE  0000               	nop
  8587     17FF                     l246:
  8588     17FF  0008               	return
  8589     1800                     __end_of_LCD_Init:
  8590                           
  8591                           	psect	text34
  8592     07F3                     __ptext34:	
  8593 ;; *************** function _LCD_Clear *****************
  8594 ;; Defined at:
  8595 ;;		line 194 in file "I2C_LCD.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0, pclath, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8609 ;;      Params:         0       0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0
  8611 ;;      Temps:          0       0       1       0       0
  8612 ;;      Totals:         0       0       1       0       0
  8613 ;;Total ram usage:        1 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 7
  8616 ;; This function calls:
  8617 ;;		_LCD_CMD
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623     07F3                     _LCD_Clear:	
  8624                           ;psect for function _LCD_Clear
  8625                           
  8626     07F3                     l3408:	
  8627                           ;incstack = 0
  8628                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8629                           
  8630                           
  8631                           ;I2C_LCD.c: 196:     LCD_CMD(0x01);
  8632     07F3  3001               	movlw	1
  8633     07F4  160A  118A  2356  120A  118A  	fcall	_LCD_CMD
  8634     07F9                     l3410:
  8635                           
  8636                           ;I2C_LCD.c: 197:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  8637     07F9  3027               	movlw	39
  8638     07FA  1683               	bsf	3,5	;RP0=1, select bank1
  8639     07FB  1303               	bcf	3,6	;RP1=0, select bank1
  8640     07FC  00A6               	movwf	??_LCD_Clear^(0+128)
  8641     07FD                     u5487:
  8642     07FD  0BA6               	decfsz	??_LCD_Clear^(0+128),f
  8643     07FE  2FFD               	goto	u5487
  8644     07FF                     l288:
  8645     07FF  0008               	return
  8646     0800                     __end_of_LCD_Clear:
  8647                           
  8648                           	psect	text35
  8649     1356                     __ptext35:	
  8650 ;; *************** function _LCD_CMD *****************
  8651 ;; Defined at:
  8652 ;;		line 143 in file "I2C_LCD.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  CMD             1    wreg     unsigned char 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  CMD             1    5[BANK1 ] unsigned char 
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  1    wreg      void 
  8659 ;; Registers used:
  8660 ;;		wreg, status,2, status,0, pclath, cstack
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8666 ;;      Params:         0       0       0       0       0
  8667 ;;      Locals:         0       0       1       0       0
  8668 ;;      Temps:          0       0       1       0       0
  8669 ;;      Totals:         0       0       2       0       0
  8670 ;;Total ram usage:        2 bytes
  8671 ;; Hardware stack levels used: 1
  8672 ;; Hardware stack levels required when called: 6
  8673 ;; This function calls:
  8674 ;;		_LCD_Write_4Bit
  8675 ;; This function is called by:
  8676 ;;		_LCD_Init
  8677 ;;		_LCD_Set_Cursor
  8678 ;;		_LCD_Clear
  8679 ;;		_LCD_SL
  8680 ;;		_LCD_SR
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684     1356                     _LCD_CMD:	
  8685                           ;psect for function _LCD_CMD
  8686                           
  8687                           
  8688                           ;incstack = 0
  8689 ;; hardware stack exceeded
  8690                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  8691                           ;LCD_CMD@CMD stored from wreg
  8692     1356  1683               	bsf	3,5	;RP0=1, select bank1
  8693     1357  1303               	bcf	3,6	;RP1=0, select bank1
  8694     1358  00A5               	movwf	LCD_CMD@CMD^(0+128)
  8695     1359                     l2590:
  8696                           
  8697                           ;I2C_LCD.c: 143: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 144: {;I2C_LCD.c: 145:     R
      +                          S = 0;
  8698     1359  1283               	bcf	3,5	;RP0=0, select bank0
  8699     135A  1303               	bcf	3,6	;RP1=0, select bank0
  8700     135B  01D1               	clrf	_RS
  8701     135C                     l2592:
  8702                           
  8703                           ;I2C_LCD.c: 146:     LCD_Write_4Bit(CMD & 0xF0);
  8704     135C  1683               	bsf	3,5	;RP0=1, select bank1
  8705     135D  1303               	bcf	3,6	;RP1=0, select bank1
  8706     135E  0825               	movf	LCD_CMD@CMD^(0+128),w
  8707     135F  39F0               	andlw	240
  8708     1360  160A  118A  2315  160A  118A  	fcall	_LCD_Write_4Bit
  8709     1365                     l2594:
  8710                           
  8711                           ;I2C_LCD.c: 147:     LCD_Write_4Bit((CMD << 4) & 0xF0);
  8712     1365  1683               	bsf	3,5	;RP0=1, select bank1
  8713     1366  1303               	bcf	3,6	;RP1=0, select bank1
  8714     1367  0825               	movf	LCD_CMD@CMD^(0+128),w
  8715     1368  00A4               	movwf	??_LCD_CMD^(0+128)
  8716     1369  3003               	movlw	3
  8717     136A                     u3085:
  8718     136A  1003               	clrc
  8719     136B  0DA4               	rlf	??_LCD_CMD^(0+128),f
  8720     136C  3EFF               	addlw	-1
  8721     136D  1D03               	skipz
  8722     136E  2B6A               	goto	u3085
  8723     136F  1003               	clrc
  8724     1370  0D24               	rlf	??_LCD_CMD^(0+128),w
  8725     1371  39F0               	andlw	240
  8726     1372  160A  118A  2315  160A  118A  	fcall	_LCD_Write_4Bit
  8727     1377                     l264:
  8728     1377  0008               	return
  8729     1378                     __end_of_LCD_CMD:
  8730                           
  8731                           	psect	text36
  8732     1315                     __ptext36:	
  8733 ;; *************** function _LCD_Write_4Bit *****************
  8734 ;; Defined at:
  8735 ;;		line 122 in file "I2C_LCD.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  Nibble          1    wreg     unsigned char 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  Nibble          1    3[BANK1 ] unsigned char 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, pclath, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8749 ;;      Params:         0       0       0       0       0
  8750 ;;      Locals:         0       0       1       0       0
  8751 ;;      Temps:          0       0       1       0       0
  8752 ;;      Totals:         0       0       2       0       0
  8753 ;;Total ram usage:        2 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 5
  8756 ;; This function calls:
  8757 ;;		_IO_Expander_Write
  8758 ;; This function is called by:
  8759 ;;		_LCD_Write_Char
  8760 ;;		_LCD_CMD
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764     1315                     _LCD_Write_4Bit:	
  8765                           ;psect for function _LCD_Write_4Bit
  8766                           
  8767                           
  8768                           ;incstack = 0
  8769 ;; hardware stack exceeded
  8770                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  8771                           ;LCD_Write_4Bit@Nibble stored from wreg
  8772     1315  1683               	bsf	3,5	;RP0=1, select bank1
  8773     1316  1303               	bcf	3,6	;RP1=0, select bank1
  8774     1317  00A3               	movwf	LCD_Write_4Bit@Nibble^(0+128)
  8775     1318                     l2528:
  8776                           
  8777                           ;I2C_LCD.c: 122: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 123: {;I2C_LCD.c: 
      +                          125:     Nibble |= RS;
  8778     1318  1283               	bcf	3,5	;RP0=0, select bank0
  8779     1319  1303               	bcf	3,6	;RP1=0, select bank0
  8780     131A  0851               	movf	_RS,w
  8781     131B  1683               	bsf	3,5	;RP0=1, select bank1
  8782     131C  1303               	bcf	3,6	;RP1=0, select bank1
  8783     131D  04A3               	iorwf	LCD_Write_4Bit@Nibble^(0+128),f
  8784     131E                     l2530:
  8785                           
  8786                           ;I2C_LCD.c: 126:     IO_Expander_Write(Nibble | 0x04);
  8787     131E  0823               	movf	LCD_Write_4Bit@Nibble^(0+128),w
  8788     131F  3804               	iorlw	4
  8789     1320  160A  118A  2335  160A  118A  	fcall	_IO_Expander_Write
  8790     1325                     l2532:
  8791                           
  8792                           ;I2C_LCD.c: 127:     IO_Expander_Write(Nibble & 0xFB);
  8793     1325  1683               	bsf	3,5	;RP0=1, select bank1
  8794     1326  1303               	bcf	3,6	;RP1=0, select bank1
  8795     1327  0823               	movf	LCD_Write_4Bit@Nibble^(0+128),w
  8796     1328  39FB               	andlw	251
  8797     1329  160A  118A  2335  160A  118A  	fcall	_IO_Expander_Write
  8798                           
  8799                           ;I2C_LCD.c: 128:     _delay((unsigned long)((50)*(12000000/4000000.0)));
  8800     132E  3031               	movlw	49
  8801     132F  1683               	bsf	3,5	;RP0=1, select bank1
  8802     1330  1303               	bcf	3,6	;RP1=0, select bank1
  8803     1331  00A2               	movwf	??_LCD_Write_4Bit^(0+128)
  8804     1332                     u5497:
  8805     1332  0BA2               	decfsz	??_LCD_Write_4Bit^(0+128),f
  8806     1333  2B32               	goto	u5497
  8807     1334                     l252:
  8808     1334  0008               	return
  8809     1335                     __end_of_LCD_Write_4Bit:
  8810                           
  8811                           	psect	text37
  8812     1335                     __ptext37:	
  8813 ;; *************** function _IO_Expander_Write *****************
  8814 ;; Defined at:
  8815 ;;		line 114 in file "I2C_LCD.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  Data            1    wreg     unsigned char 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  Data            1    1[BANK1 ] unsigned char 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, status,2, status,0, pclath, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8829 ;;      Params:         0       0       0       0       0
  8830 ;;      Locals:         0       0       1       0       0
  8831 ;;      Temps:          0       0       0       0       0
  8832 ;;      Totals:         0       0       1       0       0
  8833 ;;Total ram usage:        1 bytes
  8834 ;; Hardware stack levels used: 1
  8835 ;; Hardware stack levels required when called: 4
  8836 ;; This function calls:
  8837 ;;		_I2C_Master_Start
  8838 ;;		_I2C_Master_Stop
  8839 ;;		_I2C_Master_Write
  8840 ;; This function is called by:
  8841 ;;		_LCD_Init
  8842 ;;		_LCD_Write_4Bit
  8843 ;;		_Backlight
  8844 ;;		_noBacklight
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848     1335                     _IO_Expander_Write:	
  8849                           ;psect for function _IO_Expander_Write
  8850                           
  8851                           
  8852                           ;incstack = 0
  8853 ;; hardware stack exceeded
  8854                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  8855                           ;IO_Expander_Write@Data stored from wreg
  8856     1335  1683               	bsf	3,5	;RP0=1, select bank1
  8857     1336  1303               	bcf	3,6	;RP1=0, select bank1
  8858     1337  00A1               	movwf	IO_Expander_Write@Data^(0+128)
  8859     1338                     l2422:
  8860                           
  8861                           ;I2C_LCD.c: 114: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 115: {;I2C_LCD.c:
      +                           116:     I2C_Master_Start();
  8862     1338  160A  118A  215A  160A  118A  	fcall	_I2C_Master_Start
  8863                           
  8864                           ;I2C_LCD.c: 117:     I2C_Master_Write(i2c_add);
  8865     133D  1283               	bcf	3,5	;RP0=0, select bank0
  8866     133E  1303               	bcf	3,6	;RP1=0, select bank0
  8867     133F  0850               	movf	_i2c_add,w
  8868     1340  160A  118A  22C2  160A  118A  	fcall	_I2C_Master_Write
  8869                           
  8870                           ;I2C_LCD.c: 118:     I2C_Master_Write(Data | BackLight_State);
  8871     1345  1683               	bsf	3,5	;RP0=1, select bank1
  8872     1346  1303               	bcf	3,6	;RP1=0, select bank1
  8873     1347  0821               	movf	IO_Expander_Write@Data^(0+128),w
  8874     1348  1283               	bcf	3,5	;RP0=0, select bank0
  8875     1349  1303               	bcf	3,6	;RP1=0, select bank0
  8876     134A  045C               	iorwf	_BackLight_State,w
  8877     134B  160A  118A  22C2  160A  118A  	fcall	_I2C_Master_Write
  8878                           
  8879                           ;I2C_LCD.c: 119:     I2C_Master_Stop();
  8880     1350  160A  118A  2151  160A  118A  	fcall	_I2C_Master_Stop
  8881     1355                     l249:
  8882     1355  0008               	return
  8883     1356                     __end_of_IO_Expander_Write:
  8884                           
  8885                           	psect	text38
  8886     12C2                     __ptext38:	
  8887 ;; *************** function _I2C_Master_Write *****************
  8888 ;; Defined at:
  8889 ;;		line 31 in file "I2C_LCD.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  data            1    wreg     unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  data            1    0[BANK1 ] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      unsigned char 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0, pclath, cstack
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8903 ;;      Params:         0       0       0       0       0
  8904 ;;      Locals:         0       0       1       0       0
  8905 ;;      Temps:          0       0       0       0       0
  8906 ;;      Totals:         0       0       1       0       0
  8907 ;;Total ram usage:        1 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 3
  8910 ;; This function calls:
  8911 ;;		_I2C_Master_Wait
  8912 ;; This function is called by:
  8913 ;;		_IO_Expander_Write
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917     12C2                     _I2C_Master_Write:	
  8918                           ;psect for function _I2C_Master_Write
  8919                           
  8920                           
  8921                           ;incstack = 0
  8922 ;; hardware stack exceeded
  8923                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8924                           ;I2C_Master_Write@data stored from wreg
  8925     12C2  1683               	bsf	3,5	;RP0=1, select bank1
  8926     12C3  1303               	bcf	3,6	;RP1=0, select bank1
  8927     12C4  00A0               	movwf	I2C_Master_Write@data^(0+128)
  8928     12C5                     l2410:
  8929                           
  8930                           ;I2C_LCD.c: 31: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 32: {;I2C_
      +                          LCD.c: 33:     I2C_Master_Wait();
  8931     12C5  160A  118A  2124  160A  118A  	fcall	_I2C_Master_Wait
  8932     12CA                     l2412:
  8933                           
  8934                           ;I2C_LCD.c: 34:     SSPBUF = data;
  8935     12CA  1683               	bsf	3,5	;RP0=1, select bank1
  8936     12CB  1303               	bcf	3,6	;RP1=0, select bank1
  8937     12CC  0820               	movf	I2C_Master_Write@data^(0+128),w
  8938     12CD  1283               	bcf	3,5	;RP0=0, select bank0
  8939     12CE  1303               	bcf	3,6	;RP1=0, select bank0
  8940     12CF  0093               	movwf	19	;volatile
  8941     12D0                     l219:	
  8942                           ;I2C_LCD.c: 36:         ;
  8943                           
  8944                           
  8945                           ;I2C_LCD.c: 35:     while (!SSPIF)
  8946     12D0  1D8C               	btfss	12,3	;volatile
  8947     12D1  2AD3               	goto	u2721
  8948     12D2  2AD4               	goto	u2720
  8949     12D3                     u2721:
  8950     12D3  2AD0               	goto	l219
  8951     12D4                     u2720:
  8952     12D4                     l221:
  8953                           
  8954                           ;I2C_LCD.c: 37:     SSPIF = 0;
  8955     12D4  118C               	bcf	12,3	;volatile
  8956     12D5                     l222:	
  8957                           ;I2C_LCD.c: 38:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8958                           
  8959     12D5  0008               	return
  8960     12D6                     __end_of_I2C_Master_Write:
  8961                           
  8962                           	psect	text39
  8963     1151                     __ptext39:	
  8964 ;; *************** function _I2C_Master_Stop *****************
  8965 ;; Defined at:
  8966 ;;		line 54 in file "I2C_LCD.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;		None
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;		None
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      void 
  8973 ;; Registers used:
  8974 ;;		wreg, status,2, status,0, pclath, cstack
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8980 ;;      Params:         0       0       0       0       0
  8981 ;;      Locals:         0       0       0       0       0
  8982 ;;      Temps:          0       0       0       0       0
  8983 ;;      Totals:         0       0       0       0       0
  8984 ;;Total ram usage:        0 bytes
  8985 ;; Hardware stack levels used: 1
  8986 ;; Hardware stack levels required when called: 3
  8987 ;; This function calls:
  8988 ;;		_I2C_Master_Wait
  8989 ;; This function is called by:
  8990 ;;		_IO_Expander_Write
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994     1151                     _I2C_Master_Stop:	
  8995                           ;psect for function _I2C_Master_Stop
  8996                           
  8997     1151                     l2418:	
  8998                           ;incstack = 0
  8999 ;; hardware stack exceeded
  9000                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9001                           
  9002                           
  9003                           ;I2C_LCD.c: 56:     I2C_Master_Wait();
  9004     1151  160A  118A  2124  160A  118A  	fcall	_I2C_Master_Wait
  9005     1156                     l2420:
  9006                           
  9007                           ;I2C_LCD.c: 57:     PEN = 1;
  9008     1156  1683               	bsf	3,5	;RP0=1, select bank1
  9009     1157  1303               	bcf	3,6	;RP1=0, select bank1
  9010     1158  1511               	bsf	17,2	;volatile
  9011     1159                     l231:
  9012     1159  0008               	return
  9013     115A                     __end_of_I2C_Master_Stop:
  9014                           
  9015                           	psect	text40
  9016     115A                     __ptext40:	
  9017 ;; *************** function _I2C_Master_Start *****************
  9018 ;; Defined at:
  9019 ;;		line 41 in file "I2C_LCD.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0, pclath, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9033 ;;      Params:         0       0       0       0       0
  9034 ;;      Locals:         0       0       0       0       0
  9035 ;;      Temps:          0       0       0       0       0
  9036 ;;      Totals:         0       0       0       0       0
  9037 ;;Total ram usage:        0 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 3
  9040 ;; This function calls:
  9041 ;;		_I2C_Master_Wait
  9042 ;; This function is called by:
  9043 ;;		_IO_Expander_Write
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047     115A                     _I2C_Master_Start:	
  9048                           ;psect for function _I2C_Master_Start
  9049                           
  9050     115A                     l2414:	
  9051                           ;incstack = 0
  9052 ;; hardware stack exceeded
  9053                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9054                           
  9055                           
  9056                           ;I2C_LCD.c: 43:     I2C_Master_Wait();
  9057     115A  160A  118A  2124  160A  118A  	fcall	_I2C_Master_Wait
  9058     115F                     l2416:
  9059                           
  9060                           ;I2C_LCD.c: 44:     SEN = 1;
  9061     115F  1683               	bsf	3,5	;RP0=1, select bank1
  9062     1160  1303               	bcf	3,6	;RP1=0, select bank1
  9063     1161  1411               	bsf	17,0	;volatile
  9064     1162                     l225:
  9065     1162  0008               	return
  9066     1163                     __end_of_I2C_Master_Start:
  9067                           
  9068                           	psect	text41
  9069     1124                     __ptext41:	
  9070 ;; *************** function _I2C_Master_Wait *****************
  9071 ;; Defined at:
  9072 ;;		line 25 in file "I2C_LCD.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;		None
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9086 ;;      Params:         0       0       0       0       0
  9087 ;;      Locals:         0       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0
  9089 ;;      Totals:         0       0       0       0       0
  9090 ;;Total ram usage:        0 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 2
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		_I2C_Master_Write
  9097 ;;		_I2C_Master_Start
  9098 ;;		_I2C_Master_Stop
  9099 ;;		_I2C_Master_RepeatedStart
  9100 ;;		_I2C_ACK
  9101 ;;		_I2C_NACK
  9102 ;;		_I2C_Read_Byte
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106     1124                     _I2C_Master_Wait:	
  9107                           ;psect for function _I2C_Master_Wait
  9108                           
  9109     1124                     l2406:	
  9110                           ;incstack = 0
  9111 ;; hardware stack exceeded
  9112                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9113                           
  9114     1124                     l213:	
  9115                           ;I2C_LCD.c: 28:         ;
  9116                           
  9117                           
  9118                           ;I2C_LCD.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F))
  9119     1124  1683               	bsf	3,5	;RP0=1, select bank1
  9120     1125  1303               	bcf	3,6	;RP1=0, select bank1
  9121     1126  1914               	btfsc	20,2	;volatile
  9122     1127  2929               	goto	u2701
  9123     1128  292A               	goto	u2700
  9124     1129                     u2701:
  9125     1129  2924               	goto	l213
  9126     112A                     u2700:
  9127     112A                     l2408:
  9128     112A  0811               	movf	17,w	;volatile
  9129     112B  391F               	andlw	31
  9130     112C  1D03               	btfss	3,2
  9131     112D  292F               	goto	u2711
  9132     112E  2930               	goto	u2710
  9133     112F                     u2711:
  9134     112F  2924               	goto	l213
  9135     1130                     u2710:
  9136     1130                     l216:
  9137     1130  0008               	return
  9138     1131                     __end_of_I2C_Master_Wait:
  9139                           
  9140                           	psect	text42
  9141     1131                     __ptext42:	
  9142 ;; *************** function _I2C_Master_Init *****************
  9143 ;; Defined at:
  9144 ;;		line 15 in file "I2C_LCD.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		status,2
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9158 ;;      Params:         0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0
  9161 ;;      Totals:         0       0       0       0       0
  9162 ;;Total ram usage:        0 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 2
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_main
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172     1131                     _I2C_Master_Init:	
  9173                           ;psect for function _I2C_Master_Init
  9174                           
  9175     1131                     l3372:	
  9176                           ;incstack = 0
  9177                           ; Regs used in _I2C_Master_Init: [status,2]
  9178                           
  9179                           
  9180                           ;I2C_LCD.c: 17:     SSPCON = 0x28;
  9181     1131  3028               	movlw	40
  9182     1132  1283               	bcf	3,5	;RP0=0, select bank0
  9183     1133  1303               	bcf	3,6	;RP1=0, select bank0
  9184     1134  0094               	movwf	20	;volatile
  9185     1135                     l3374:
  9186                           
  9187                           ;I2C_LCD.c: 18:     SSPCON2 = 0x00;
  9188     1135  1683               	bsf	3,5	;RP0=1, select bank1
  9189     1136  1303               	bcf	3,6	;RP1=0, select bank1
  9190     1137  0191               	clrf	17	;volatile
  9191                           
  9192                           ;I2C_LCD.c: 19:     SSPSTAT = 0x00;
  9193     1138  0194               	clrf	20	;volatile
  9194     1139                     l3376:
  9195                           
  9196                           ;I2C_LCD.c: 20:     SSPADD = ((12000000 / 4) / 100000) - 1;
  9197     1139  301D               	movlw	29
  9198     113A  0093               	movwf	19	;volatile
  9199     113B                     l3378:
  9200                           
  9201                           ;I2C_LCD.c: 21:     TRISC3 = 1;
  9202     113B  1587               	bsf	7,3	;volatile
  9203     113C                     l3380:
  9204                           
  9205                           ;I2C_LCD.c: 22:     TRISC4 = 1;
  9206     113C  1607               	bsf	7,4	;volatile
  9207     113D                     l210:
  9208     113D  0008               	return
  9209     113E                     __end_of_I2C_Master_Init:
  9210                           
  9211                           	psect	text43
  9212     1174                     __ptext43:	
  9213 ;; *************** function _BUZZER_Init *****************
  9214 ;; Defined at:
  9215 ;;		line 21 in file "BUZZER.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9229 ;;      Params:         0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 2
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_main
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243     1174                     _BUZZER_Init:	
  9244                           ;psect for function _BUZZER_Init
  9245                           
  9246     1174                     l3366:	
  9247                           ;incstack = 0
  9248                           ; Regs used in _BUZZER_Init: [wreg+status,2+status,0]
  9249                           
  9250                           
  9251                           ;BUZZER.c: 23:     TRISD &= ~(1 << 6);
  9252     1174  30BF               	movlw	191
  9253     1175  1683               	bsf	3,5	;RP0=1, select bank1
  9254     1176  1303               	bcf	3,6	;RP1=0, select bank1
  9255     1177  0588               	andwf	8,f	;volatile
  9256     1178                     l3368:
  9257                           
  9258                           ;BUZZER.c: 24:     PORTD |= (1 << 6);
  9259     1178  1283               	bcf	3,5	;RP0=0, select bank0
  9260     1179  1303               	bcf	3,6	;RP1=0, select bank0
  9261     117A  1708               	bsf	8,6	;volatile
  9262     117B                     l359:
  9263     117B  0008               	return
  9264     117C                     __end_of_BUZZER_Init:
  9265                           
  9266                           	psect	text44
  9267     1163                     __ptext44:	
  9268 ;; *************** function _BUTTON_Init *****************
  9269 ;; Defined at:
  9270 ;;		line 56 in file "main.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;		None
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		None
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9284 ;;      Params:         0       0       0       0       0
  9285 ;;      Locals:         0       0       0       0       0
  9286 ;;      Temps:          0       0       0       0       0
  9287 ;;      Totals:         0       0       0       0       0
  9288 ;;Total ram usage:        0 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 2
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_main
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298     1163                     _BUTTON_Init:	
  9299                           ;psect for function _BUTTON_Init
  9300                           
  9301     1163                     l3316:	
  9302                           ;incstack = 0
  9303                           ; Regs used in _BUTTON_Init: []
  9304                           
  9305                           
  9306                           ;main.c: 58:     TRISD = 4;
  9307     1163  3004               	movlw	4
  9308     1164  1683               	bsf	3,5	;RP0=1, select bank1
  9309     1165  1303               	bcf	3,6	;RP1=0, select bank1
  9310     1166  0088               	movwf	8	;volatile
  9311                           
  9312                           ;main.c: 59:     PORTD = 1;
  9313     1167  3001               	movlw	1
  9314     1168  1283               	bcf	3,5	;RP0=0, select bank0
  9315     1169  1303               	bcf	3,6	;RP1=0, select bank0
  9316     116A  0088               	movwf	8	;volatile
  9317     116B                     l41:
  9318     116B  0008               	return
  9319     116C                     __end_of_BUTTON_Init:
  9320                           
  9321                           	psect	text45
  9322     0800                     __ptext45:	
  9323 ;; *************** function _echoTime *****************
  9324 ;; Defined at:
  9325 ;;		line 156 in file "HCSR04_lib.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;		None
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  TMR             2   39[BANK0 ] unsigned int 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      void 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9339 ;;      Params:         0       0       0       0       0
  9340 ;;      Locals:         0       2       0       0       0
  9341 ;;      Temps:          0       3       0       0       0
  9342 ;;      Totals:         0       5       0       0       0
  9343 ;;Total ram usage:        5 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; Hardware stack levels required when called: 1
  9346 ;; This function calls:
  9347 ;;		___fltol
  9348 ;;		i1___fldiv
  9349 ;;		i1___xxtofl
  9350 ;; This function is called by:
  9351 ;;		Interrupt level 1
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355     0800                     _echoTime:	
  9356                           ;psect for function _echoTime
  9357                           
  9358     0800                     i1l3676:
  9359                           
  9360                           ;HCSR04_lib.c: 158:     if (RBIF == 1)
  9361     0800  1C0B               	btfss	11,0	;volatile
  9362     0801  2803               	goto	u513_21
  9363     0802  2804               	goto	u513_20
  9364     0803                     u513_21:
  9365     0803  286F               	goto	i1l165
  9366     0804                     u513_20:
  9367     0804                     i1l3678:
  9368                           
  9369                           ;HCSR04_lib.c: 159:     {;HCSR04_lib.c: 161:         if (RB0 == 1 && echo_state == 0)
  9370     0804  1C06               	btfss	6,0	;volatile
  9371     0805  2807               	goto	u514_21
  9372     0806  2808               	goto	u514_20
  9373     0807                     u514_21:
  9374     0807  2819               	goto	i1l162
  9375     0808                     u514_20:
  9376     0808                     i1l3680:
  9377     0808  1683               	bsf	3,5	;RP0=1, select bank3
  9378     0809  1703               	bsf	3,6	;RP1=1, select bank3
  9379     080A  0844               	movf	_echo_state^(0+384),w	;volatile
  9380     080B  1D03               	btfss	3,2
  9381     080C  280E               	goto	u515_21
  9382     080D  280F               	goto	u515_20
  9383     080E                     u515_21:
  9384     080E  2819               	goto	i1l162
  9385     080F                     u515_20:
  9386     080F                     i1l3682:
  9387                           
  9388                           ;HCSR04_lib.c: 162:         {;HCSR04_lib.c: 164:             TMR1H = 0;
  9389     080F  1283               	bcf	3,5	;RP0=0, select bank0
  9390     0810  1303               	bcf	3,6	;RP1=0, select bank0
  9391     0811  018F               	clrf	15	;volatile
  9392                           
  9393                           ;HCSR04_lib.c: 165:             TMR1L = 0;
  9394     0812  018E               	clrf	14	;volatile
  9395     0813                     i1l3684:
  9396                           
  9397                           ;HCSR04_lib.c: 166:             TMR1ON = 1;
  9398     0813  1410               	bsf	16,0	;volatile
  9399     0814                     i1l3686:
  9400                           
  9401                           ;HCSR04_lib.c: 167:             echo_state = 1;
  9402     0814  3001               	movlw	1
  9403     0815  1683               	bsf	3,5	;RP0=1, select bank3
  9404     0816  1703               	bsf	3,6	;RP1=1, select bank3
  9405     0817  00C4               	movwf	_echo_state^(0+384)	;volatile
  9406                           
  9407                           ;HCSR04_lib.c: 168:         }
  9408     0818  286E               	goto	i1l3700
  9409     0819                     i1l162:	
  9410                           ;HCSR04_lib.c: 169:         else if (RB0 == 0 && echo_state == 1)
  9411                           
  9412     0819  1283               	bcf	3,5	;RP0=0, select bank0
  9413     081A  1303               	bcf	3,6	;RP1=0, select bank0
  9414     081B  1806               	btfsc	6,0	;volatile
  9415     081C  281E               	goto	u516_21
  9416     081D  281F               	goto	u516_20
  9417     081E                     u516_21:
  9418     081E  286E               	goto	i1l3700
  9419     081F                     u516_20:
  9420     081F                     i1l3688:
  9421     081F  1683               	bsf	3,5	;RP0=1, select bank3
  9422     0820  1703               	bsf	3,6	;RP1=1, select bank3
  9423     0821  0344               	decf	_echo_state^(0+384),w	;volatile
  9424     0822  1D03               	btfss	3,2
  9425     0823  2825               	goto	u517_21
  9426     0824  2826               	goto	u517_20
  9427     0825                     u517_21:
  9428     0825  286E               	goto	i1l3700
  9429     0826                     u517_20:
  9430     0826                     i1l3690:
  9431                           
  9432                           ;HCSR04_lib.c: 170:         {;HCSR04_lib.c: 172:             TMR1ON = 0;
  9433     0826  1283               	bcf	3,5	;RP0=0, select bank0
  9434     0827  1303               	bcf	3,6	;RP1=0, select bank0
  9435     0828  1010               	bcf	16,0	;volatile
  9436     0829                     i1l3692:
  9437                           
  9438                           ;HCSR04_lib.c: 175:             unsigned int TMR = (TMR1H << 8) | TMR1L;
  9439     0829  080F               	movf	15,w	;volatile
  9440     082A  00C8               	movwf	echoTime@TMR+1
  9441     082B  080E               	movf	14,w	;volatile
  9442     082C  00C7               	movwf	echoTime@TMR
  9443     082D                     i1l3694:
  9444                           
  9445                           ;HCSR04_lib.c: 176:             last_distance = TMR / division_factor;
  9446     082D  0847               	movf	echoTime@TMR,w
  9447     082E  00F0               	movwf	i1___xxtofl@val
  9448     082F  0848               	movf	echoTime@TMR+1,w
  9449     0830  00F1               	movwf	i1___xxtofl@val+1
  9450     0831  01F2               	clrf	i1___xxtofl@val+2
  9451     0832  01F3               	clrf	i1___xxtofl@val+3
  9452     0833  3000               	movlw	0
  9453     0834  120A  158A  211A  120A  158A  	fcall	i1___xxtofl
  9454     0839  0873               	movf	?i1___xxtofl+3,w
  9455     083A  1283               	bcf	3,5	;RP0=0, select bank0
  9456     083B  1303               	bcf	3,6	;RP1=0, select bank0
  9457     083C  00A7               	movwf	i1___fldiv@b+3
  9458     083D  0872               	movf	?i1___xxtofl+2,w
  9459     083E  00A6               	movwf	i1___fldiv@b+2
  9460     083F  0871               	movf	?i1___xxtofl+1,w
  9461     0840  00A5               	movwf	i1___fldiv@b+1
  9462     0841  0870               	movf	?i1___xxtofl,w
  9463     0842  00A4               	movwf	i1___fldiv@b
  9464     0843  0861               	movf	_division_factor+3,w
  9465     0844  00A3               	movwf	i1___fldiv@a+3
  9466     0845  0860               	movf	_division_factor+2,w
  9467     0846  00A2               	movwf	i1___fldiv@a+2
  9468     0847  085F               	movf	_division_factor+1,w
  9469     0848  00A1               	movwf	i1___fldiv@a+1
  9470     0849  085E               	movf	_division_factor,w
  9471     084A  00A0               	movwf	i1___fldiv@a
  9472     084B  120A  158A  228F  120A  158A  	fcall	i1___fldiv
  9473     0850  1283               	bcf	3,5	;RP0=0, select bank0
  9474     0851  1303               	bcf	3,6	;RP1=0, select bank0
  9475     0852  0823               	movf	?i1___fldiv+3,w
  9476     0853  00BD               	movwf	___fltol@f1+3
  9477     0854  0822               	movf	?i1___fldiv+2,w
  9478     0855  00BC               	movwf	___fltol@f1+2
  9479     0856  0821               	movf	?i1___fldiv+1,w
  9480     0857  00BB               	movwf	___fltol@f1+1
  9481     0858  0820               	movf	?i1___fldiv,w
  9482     0859  00BA               	movwf	___fltol@f1
  9483     085A  160A  118A  2653  120A  158A  	fcall	___fltol
  9484     085F  1283               	bcf	3,5	;RP0=0, select bank0
  9485     0860  1303               	bcf	3,6	;RP1=0, select bank0
  9486     0861  083B               	movf	?___fltol+1,w
  9487     0862  1683               	bsf	3,5	;RP0=1, select bank3
  9488     0863  1703               	bsf	3,6	;RP1=1, select bank3
  9489     0864  00C1               	movwf	(_last_distance+1)^(0+384)	;volatile
  9490     0865  1283               	bcf	3,5	;RP0=0, select bank0
  9491     0866  1303               	bcf	3,6	;RP1=0, select bank0
  9492     0867  083A               	movf	?___fltol,w
  9493     0868  1683               	bsf	3,5	;RP0=1, select bank3
  9494     0869  1703               	bsf	3,6	;RP1=1, select bank3
  9495     086A  00C0               	movwf	_last_distance^(0+384)	;volatile
  9496     086B                     i1l3696:
  9497                           
  9498                           ;HCSR04_lib.c: 178:             echo_state = 0;
  9499     086B  01C4               	clrf	_echo_state^(0+384)	;volatile
  9500     086C                     i1l3698:
  9501                           
  9502                           ;HCSR04_lib.c: 179:             echo_complete = 1;
  9503     086C  3001               	movlw	1
  9504     086D  00C5               	movwf	_echo_complete^(0+384)	;volatile
  9505     086E                     i1l3700:
  9506                           
  9507                           ;HCSR04_lib.c: 181:         RBIF = 0;
  9508     086E  100B               	bcf	11,0	;volatile
  9509     086F                     i1l165:
  9510     086F  1283               	bcf	3,5	;RP0=0, select bank0
  9511     0870  1303               	bcf	3,6	;RP1=0, select bank0
  9512     0871  0846               	movf	??_echoTime+2,w
  9513     0872  00FF               	movwf	btemp+1
  9514     0873  0845               	movf	??_echoTime+1,w
  9515     0874  008A               	movwf	10
  9516     0875  0E44               	swapf	??_echoTime,w
  9517     0876  0083               	movwf	3
  9518     0877  0EFE               	swapf	btemp,f
  9519     0878  0E7E               	swapf	btemp,w
  9520     0879  0009               	retfie
  9521     087A                     __end_of_echoTime:
  9522                           
  9523                           	psect	intentry
  9524     0004                     __pintentry:	
  9525                           ;incstack = 0
  9526 ;; hardware stack exceeded
  9527                           ; Regs used in _echoTime: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9528                           
  9529     0004                     interrupt_function:
  9530     007E                     saved_w         set	btemp
  9531     0004  00FE               	movwf	btemp
  9532     0005  0E03               	swapf	3,w
  9533     0006  1283               	bcf	3,5	;RP0=0, select bank0
  9534     0007  1303               	bcf	3,6	;RP1=0, select bank0
  9535     0008  00C4               	movwf	??_echoTime
  9536     0009  080A               	movf	10,w
  9537     000A  00C5               	movwf	??_echoTime+1
  9538     000B  087F               	movf	btemp+1,w
  9539     000C  00C6               	movwf	??_echoTime+2
  9540     000D  120A  158A  2800   	ljmp	_echoTime
  9541                           
  9542                           	psect	text46
  9543     091A                     __ptext46:	
  9544 ;; *************** function i1___xxtofl *****************
  9545 ;; Defined at:
  9546 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  sign            1    wreg     unsigned char 
  9549 ;;  val             4    0[COMMON] long 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  sign            1    8[COMMON] unsigned char 
  9552 ;;  arg             4   10[COMMON] unsigned long 
  9553 ;;  exp             1    9[COMMON] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  4    0[COMMON] unsigned char 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9563 ;;      Params:         4       0       0       0       0
  9564 ;;      Locals:         6       0       0       0       0
  9565 ;;      Temps:          4       0       0       0       0
  9566 ;;      Totals:        14       0       0       0       0
  9567 ;;Total ram usage:       14 bytes
  9568 ;; Hardware stack levels used: 1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_echoTime
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576     091A                     i1___xxtofl:	
  9577                           ;psect for function i1___xxtofl
  9578                           
  9579                           
  9580                           ;incstack = 0
  9581 ;; hardware stack exceeded
  9582                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
  9583                           ;i1___xxtofl@sign stored from wreg
  9584     091A  00F8               	movwf	i1___xxtofl@sign
  9585     091B                     i1l3592:
  9586     091B  0878               	movf	i1___xxtofl@sign,w
  9587     091C  1903               	btfsc	3,2
  9588     091D  291F               	goto	u499_21
  9589     091E  2920               	goto	u499_20
  9590     091F                     u499_21:
  9591     091F  2934               	goto	i1l3598
  9592     0920                     u499_20:
  9593     0920                     i1l3594:
  9594     0920  1FF3               	btfss	i1___xxtofl@val+3,7
  9595     0921  2923               	goto	u500_21
  9596     0922  2924               	goto	u500_20
  9597     0923                     u500_21:
  9598     0923  2934               	goto	i1l3598
  9599     0924                     u500_20:
  9600     0924                     i1l3596:
  9601     0924  0970               	comf	i1___xxtofl@val,w
  9602     0925  00FA               	movwf	i1___xxtofl@arg
  9603     0926  0971               	comf	i1___xxtofl@val+1,w
  9604     0927  00FB               	movwf	i1___xxtofl@arg+1
  9605     0928  0972               	comf	i1___xxtofl@val+2,w
  9606     0929  00FC               	movwf	i1___xxtofl@arg+2
  9607     092A  0973               	comf	i1___xxtofl@val+3,w
  9608     092B  00FD               	movwf	i1___xxtofl@arg+3
  9609     092C  0AFA               	incf	i1___xxtofl@arg,f
  9610     092D  1903               	skipnz
  9611     092E  0AFB               	incf	i1___xxtofl@arg+1,f
  9612     092F  1903               	skipnz
  9613     0930  0AFC               	incf	i1___xxtofl@arg+2,f
  9614     0931  1903               	skipnz
  9615     0932  0AFD               	incf	i1___xxtofl@arg+3,f
  9616     0933  293C               	goto	i1l902
  9617     0934                     i1l3598:
  9618     0934  0873               	movf	i1___xxtofl@val+3,w
  9619     0935  00FD               	movwf	i1___xxtofl@arg+3
  9620     0936  0872               	movf	i1___xxtofl@val+2,w
  9621     0937  00FC               	movwf	i1___xxtofl@arg+2
  9622     0938  0871               	movf	i1___xxtofl@val+1,w
  9623     0939  00FB               	movwf	i1___xxtofl@arg+1
  9624     093A  0870               	movf	i1___xxtofl@val,w
  9625     093B  00FA               	movwf	i1___xxtofl@arg
  9626     093C                     i1l902:
  9627     093C  0873               	movf	i1___xxtofl@val+3,w
  9628     093D  0472               	iorwf	i1___xxtofl@val+2,w
  9629     093E  0471               	iorwf	i1___xxtofl@val+1,w
  9630     093F  0470               	iorwf	i1___xxtofl@val,w
  9631     0940  1D03               	skipz
  9632     0941  2943               	goto	u501_21
  9633     0942  2944               	goto	u501_20
  9634     0943                     u501_21:
  9635     0943  294D               	goto	i1l903
  9636     0944                     u501_20:
  9637     0944                     i1l3600:
  9638     0944  3000               	movlw	0
  9639     0945  00F3               	movwf	?i1___xxtofl+3
  9640     0946  3000               	movlw	0
  9641     0947  00F2               	movwf	?i1___xxtofl+2
  9642     0948  3000               	movlw	0
  9643     0949  00F1               	movwf	?i1___xxtofl+1
  9644     094A  3000               	movlw	0
  9645     094B  00F0               	movwf	?i1___xxtofl
  9646     094C  29CD               	goto	i1l904
  9647     094D                     i1l903:
  9648     094D  3096               	movlw	150
  9649     094E  00F9               	movwf	i1___xxtofl@exp
  9650     094F  295B               	goto	i1l3606
  9651     0950                     i1l3604:
  9652     0950  3001               	movlw	1
  9653     0951  07F9               	addwf	i1___xxtofl@exp,f
  9654     0952  3001               	movlw	1
  9655     0953                     u502_25:
  9656     0953  1003               	clrc
  9657     0954  0CFD               	rrf	i1___xxtofl@arg+3,f
  9658     0955  0CFC               	rrf	i1___xxtofl@arg+2,f
  9659     0956  0CFB               	rrf	i1___xxtofl@arg+1,f
  9660     0957  0CFA               	rrf	i1___xxtofl@arg,f
  9661     0958  3EFF               	addlw	-1
  9662     0959  1D03               	skipz
  9663     095A  2953               	goto	u502_25
  9664     095B                     i1l3606:
  9665     095B  30FE               	movlw	254
  9666     095C  057D               	andwf	i1___xxtofl@arg+3,w
  9667     095D  1D03               	btfss	3,2
  9668     095E  2960               	goto	u503_21
  9669     095F  2961               	goto	u503_20
  9670     0960                     u503_21:
  9671     0960  2950               	goto	i1l3604
  9672     0961                     u503_20:
  9673     0961  297B               	goto	i1l908
  9674     0962                     i1l3608:
  9675     0962  3001               	movlw	1
  9676     0963  07F9               	addwf	i1___xxtofl@exp,f
  9677     0964                     i1l3610:
  9678     0964  3001               	movlw	1
  9679     0965  07FA               	addwf	i1___xxtofl@arg,f
  9680     0966  3000               	movlw	0
  9681     0967  1803               	skipnc
  9682     0968  3001               	movlw	1
  9683     0969  07FB               	addwf	i1___xxtofl@arg+1,f
  9684     096A  3000               	movlw	0
  9685     096B  1803               	skipnc
  9686     096C  3001               	movlw	1
  9687     096D  07FC               	addwf	i1___xxtofl@arg+2,f
  9688     096E  3000               	movlw	0
  9689     096F  1803               	skipnc
  9690     0970  3001               	movlw	1
  9691     0971  07FD               	addwf	i1___xxtofl@arg+3,f
  9692     0972                     i1l3612:
  9693     0972  3001               	movlw	1
  9694     0973                     u504_25:
  9695     0973  1003               	clrc
  9696     0974  0CFD               	rrf	i1___xxtofl@arg+3,f
  9697     0975  0CFC               	rrf	i1___xxtofl@arg+2,f
  9698     0976  0CFB               	rrf	i1___xxtofl@arg+1,f
  9699     0977  0CFA               	rrf	i1___xxtofl@arg,f
  9700     0978  3EFF               	addlw	-1
  9701     0979  1D03               	skipz
  9702     097A  2973               	goto	u504_25
  9703     097B                     i1l908:
  9704     097B  30FF               	movlw	255
  9705     097C  057D               	andwf	i1___xxtofl@arg+3,w
  9706     097D  1D03               	btfss	3,2
  9707     097E  2980               	goto	u505_21
  9708     097F  2981               	goto	u505_20
  9709     0980                     u505_21:
  9710     0980  2962               	goto	i1l3608
  9711     0981                     u505_20:
  9712     0981  298D               	goto	i1l3616
  9713     0982                     i1l3614:
  9714     0982  3001               	movlw	1
  9715     0983  02F9               	subwf	i1___xxtofl@exp,f
  9716     0984  3001               	movlw	1
  9717     0985  00F4               	movwf	??i1___xxtofl
  9718     0986                     u506_25:
  9719     0986  1003               	clrc
  9720     0987  0DFA               	rlf	i1___xxtofl@arg,f
  9721     0988  0DFB               	rlf	i1___xxtofl@arg+1,f
  9722     0989  0DFC               	rlf	i1___xxtofl@arg+2,f
  9723     098A  0DFD               	rlf	i1___xxtofl@arg+3,f
  9724     098B  0BF4               	decfsz	??i1___xxtofl,f
  9725     098C  2986               	goto	u506_25
  9726     098D                     i1l3616:
  9727     098D  1BFC               	btfsc	i1___xxtofl@arg+2,7
  9728     098E  2990               	goto	u507_21
  9729     098F  2991               	goto	u507_20
  9730     0990                     u507_21:
  9731     0990  2997               	goto	i1l915
  9732     0991                     u507_20:
  9733     0991                     i1l3618:
  9734     0991  3002               	movlw	2
  9735     0992  0279               	subwf	i1___xxtofl@exp,w
  9736     0993  1803               	skipnc
  9737     0994  2996               	goto	u508_21
  9738     0995  2997               	goto	u508_20
  9739     0996                     u508_21:
  9740     0996  2982               	goto	i1l3614
  9741     0997                     u508_20:
  9742     0997                     i1l915:
  9743     0997  1879               	btfsc	i1___xxtofl@exp,0
  9744     0998  299A               	goto	u509_21
  9745     0999  299B               	goto	u509_20
  9746     099A                     u509_21:
  9747     099A  29A3               	goto	i1l916
  9748     099B                     u509_20:
  9749     099B                     i1l3620:
  9750     099B  30FF               	movlw	255
  9751     099C  05FA               	andwf	i1___xxtofl@arg,f
  9752     099D  30FF               	movlw	255
  9753     099E  05FB               	andwf	i1___xxtofl@arg+1,f
  9754     099F  307F               	movlw	127
  9755     09A0  05FC               	andwf	i1___xxtofl@arg+2,f
  9756     09A1  30FF               	movlw	255
  9757     09A2  05FD               	andwf	i1___xxtofl@arg+3,f
  9758     09A3                     i1l916:
  9759     09A3  1003               	clrc
  9760     09A4  0CF9               	rrf	i1___xxtofl@exp,f
  9761     09A5                     i1l3622:
  9762     09A5  0879               	movf	i1___xxtofl@exp,w
  9763     09A6  00F4               	movwf	??i1___xxtofl
  9764     09A7  01F5               	clrf	??i1___xxtofl+1
  9765     09A8  01F6               	clrf	??i1___xxtofl+2
  9766     09A9  01F7               	clrf	??i1___xxtofl+3
  9767     09AA  3018               	movlw	24
  9768     09AB                     u510_25:
  9769     09AB  1003               	clrc
  9770     09AC  0DF4               	rlf	??i1___xxtofl,f
  9771     09AD  0DF5               	rlf	??i1___xxtofl+1,f
  9772     09AE  0DF6               	rlf	??i1___xxtofl+2,f
  9773     09AF  0DF7               	rlf	??i1___xxtofl+3,f
  9774     09B0                     u510_20:
  9775     09B0  3EFF               	addlw	-1
  9776     09B1  1D03               	skipz
  9777     09B2  29AB               	goto	u510_25
  9778     09B3  0874               	movf	??i1___xxtofl,w
  9779     09B4  04FA               	iorwf	i1___xxtofl@arg,f
  9780     09B5  0875               	movf	??i1___xxtofl+1,w
  9781     09B6  04FB               	iorwf	i1___xxtofl@arg+1,f
  9782     09B7  0876               	movf	??i1___xxtofl+2,w
  9783     09B8  04FC               	iorwf	i1___xxtofl@arg+2,f
  9784     09B9  0877               	movf	??i1___xxtofl+3,w
  9785     09BA  04FD               	iorwf	i1___xxtofl@arg+3,f
  9786     09BB                     i1l3624:
  9787     09BB  0878               	movf	i1___xxtofl@sign,w
  9788     09BC  1903               	btfsc	3,2
  9789     09BD  29BF               	goto	u511_21
  9790     09BE  29C0               	goto	u511_20
  9791     09BF                     u511_21:
  9792     09BF  29C5               	goto	i1l3630
  9793     09C0                     u511_20:
  9794     09C0                     i1l3626:
  9795     09C0  1FF3               	btfss	i1___xxtofl@val+3,7
  9796     09C1  29C3               	goto	u512_21
  9797     09C2  29C4               	goto	u512_20
  9798     09C3                     u512_21:
  9799     09C3  29C5               	goto	i1l3630
  9800     09C4                     u512_20:
  9801     09C4                     i1l3628:
  9802     09C4  17FD               	bsf	i1___xxtofl@arg+3,7
  9803     09C5                     i1l3630:
  9804     09C5  087D               	movf	i1___xxtofl@arg+3,w
  9805     09C6  00F3               	movwf	?i1___xxtofl+3
  9806     09C7  087C               	movf	i1___xxtofl@arg+2,w
  9807     09C8  00F2               	movwf	?i1___xxtofl+2
  9808     09C9  087B               	movf	i1___xxtofl@arg+1,w
  9809     09CA  00F1               	movwf	?i1___xxtofl+1
  9810     09CB  087A               	movf	i1___xxtofl@arg,w
  9811     09CC  00F0               	movwf	?i1___xxtofl
  9812     09CD                     i1l904:
  9813     09CD  0008               	return
  9814     09CE                     __end_ofi1___xxtofl:
  9815                           
  9816                           	psect	text47
  9817     0A8F                     __ptext47:	
  9818 ;; *************** function i1___fldiv *****************
  9819 ;; Defined at:
  9820 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  a               4    0[BANK0 ] unsigned char 
  9823 ;;  b               4    4[BANK0 ] unsigned char 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  grs             4   20[BANK0 ] unsigned long 
  9826 ;;  rem             4   13[BANK0 ] unsigned long 
  9827 ;;  new_exp         2   18[BANK0 ] short 
  9828 ;;  aexp            1   25[BANK0 ] unsigned char 
  9829 ;;  bexp            1   24[BANK0 ] unsigned char 
  9830 ;;  sign            1   17[BANK0 ] unsigned char 
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  4    0[BANK0 ] unsigned char 
  9833 ;; Registers used:
  9834 ;;		wreg, status,2, status,0, btemp+1
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9840 ;;      Params:         0       8       0       0       0
  9841 ;;      Locals:         0      13       0       0       0
  9842 ;;      Temps:          0       5       0       0       0
  9843 ;;      Totals:         0      26       0       0       0
  9844 ;;Total ram usage:       26 bytes
  9845 ;; Hardware stack levels used: 1
  9846 ;; This function calls:
  9847 ;;		Nothing
  9848 ;; This function is called by:
  9849 ;;		_echoTime
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853     0A8F                     i1___fldiv:	
  9854                           ;psect for function i1___fldiv
  9855                           
  9856     0A8F                     i1l3448:	
  9857                           ;incstack = 0
  9858 ;; hardware stack exceeded
  9859                           ; Regs used in i1___fldiv: [wreg+status,2+status,0+btemp+1]
  9860                           
  9861     0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  9862     0A90  1303               	bcf	3,6	;RP1=0, select bank0
  9863     0A91  0827               	movf	i1___fldiv@b+3,w
  9864     0A92  00B1               	movwf	i1___fldiv@sign
  9865     0A93                     i1l3450:
  9866     0A93  3080               	movlw	128
  9867     0A94  05B1               	andwf	i1___fldiv@sign,f
  9868     0A95                     i1l3452:
  9869     0A95  0827               	movf	i1___fldiv@b+3,w
  9870     0A96  00A8               	movwf	??i1___fldiv
  9871     0A97  0728               	addwf	??i1___fldiv,w
  9872     0A98  00B8               	movwf	i1___fldiv@bexp
  9873     0A99                     i1l3454:
  9874     0A99  1FA6               	btfss	i1___fldiv@b+2,7
  9875     0A9A  2A9C               	goto	u470_21
  9876     0A9B  2A9D               	goto	u470_20
  9877     0A9C                     u470_21:
  9878     0A9C  2A9E               	goto	i1l3458
  9879     0A9D                     u470_20:
  9880     0A9D                     i1l3456:
  9881     0A9D  1438               	bsf	i1___fldiv@bexp,0
  9882     0A9E                     i1l3458:
  9883     0A9E  0838               	movf	i1___fldiv@bexp,w
  9884     0A9F  1903               	btfsc	3,2
  9885     0AA0  2AA2               	goto	u471_21
  9886     0AA1  2AA3               	goto	u471_20
  9887     0AA2                     u471_21:
  9888     0AA2  2AB3               	goto	i1l3468
  9889     0AA3                     u471_20:
  9890     0AA3                     i1l3460:
  9891     0AA3  0A38               	incf	i1___fldiv@bexp,w
  9892     0AA4  1D03               	btfss	3,2
  9893     0AA5  2AA7               	goto	u472_21
  9894     0AA6  2AA8               	goto	u472_20
  9895     0AA7                     u472_21:
  9896     0AA7  2AB0               	goto	i1l3464
  9897     0AA8                     u472_20:
  9898     0AA8                     i1l3462:
  9899     0AA8  3000               	movlw	0
  9900     0AA9  00A7               	movwf	i1___fldiv@b+3
  9901     0AAA  3000               	movlw	0
  9902     0AAB  00A6               	movwf	i1___fldiv@b+2
  9903     0AAC  3000               	movlw	0
  9904     0AAD  00A5               	movwf	i1___fldiv@b+1
  9905     0AAE  3000               	movlw	0
  9906     0AAF  00A4               	movwf	i1___fldiv@b
  9907     0AB0                     i1l3464:
  9908     0AB0  17A6               	bsf	i1___fldiv@b+2,7
  9909     0AB1                     i1l3466:
  9910     0AB1  01A7               	clrf	i1___fldiv@b+3
  9911     0AB2  2ABB               	goto	i1l3470
  9912     0AB3                     i1l3468:
  9913     0AB3  3000               	movlw	0
  9914     0AB4  00A7               	movwf	i1___fldiv@b+3
  9915     0AB5  3000               	movlw	0
  9916     0AB6  00A6               	movwf	i1___fldiv@b+2
  9917     0AB7  3000               	movlw	0
  9918     0AB8  00A5               	movwf	i1___fldiv@b+1
  9919     0AB9  3000               	movlw	0
  9920     0ABA  00A4               	movwf	i1___fldiv@b
  9921     0ABB                     i1l3470:
  9922     0ABB  0823               	movf	i1___fldiv@a+3,w
  9923     0ABC  3980               	andlw	128
  9924     0ABD  06B1               	xorwf	i1___fldiv@sign,f
  9925     0ABE                     i1l3472:
  9926     0ABE  0823               	movf	i1___fldiv@a+3,w
  9927     0ABF  00A8               	movwf	??i1___fldiv
  9928     0AC0  0728               	addwf	??i1___fldiv,w
  9929     0AC1  00B9               	movwf	i1___fldiv@aexp
  9930     0AC2                     i1l3474:
  9931     0AC2  1FA2               	btfss	i1___fldiv@a+2,7
  9932     0AC3  2AC5               	goto	u473_21
  9933     0AC4  2AC6               	goto	u473_20
  9934     0AC5                     u473_21:
  9935     0AC5  2AC7               	goto	i1l3478
  9936     0AC6                     u473_20:
  9937     0AC6                     i1l3476:
  9938     0AC6  1439               	bsf	i1___fldiv@aexp,0
  9939     0AC7                     i1l3478:
  9940     0AC7  0839               	movf	i1___fldiv@aexp,w
  9941     0AC8  1903               	btfsc	3,2
  9942     0AC9  2ACB               	goto	u474_21
  9943     0ACA  2ACC               	goto	u474_20
  9944     0ACB                     u474_21:
  9945     0ACB  2ADC               	goto	i1l3488
  9946     0ACC                     u474_20:
  9947     0ACC                     i1l3480:
  9948     0ACC  0A39               	incf	i1___fldiv@aexp,w
  9949     0ACD  1D03               	btfss	3,2
  9950     0ACE  2AD0               	goto	u475_21
  9951     0ACF  2AD1               	goto	u475_20
  9952     0AD0                     u475_21:
  9953     0AD0  2AD9               	goto	i1l3484
  9954     0AD1                     u475_20:
  9955     0AD1                     i1l3482:
  9956     0AD1  3000               	movlw	0
  9957     0AD2  00A3               	movwf	i1___fldiv@a+3
  9958     0AD3  3000               	movlw	0
  9959     0AD4  00A2               	movwf	i1___fldiv@a+2
  9960     0AD5  3000               	movlw	0
  9961     0AD6  00A1               	movwf	i1___fldiv@a+1
  9962     0AD7  3000               	movlw	0
  9963     0AD8  00A0               	movwf	i1___fldiv@a
  9964     0AD9                     i1l3484:
  9965     0AD9  17A2               	bsf	i1___fldiv@a+2,7
  9966     0ADA                     i1l3486:
  9967     0ADA  01A3               	clrf	i1___fldiv@a+3
  9968     0ADB  2AE4               	goto	i1l818
  9969     0ADC                     i1l3488:
  9970     0ADC  3000               	movlw	0
  9971     0ADD  00A3               	movwf	i1___fldiv@a+3
  9972     0ADE  3000               	movlw	0
  9973     0ADF  00A2               	movwf	i1___fldiv@a+2
  9974     0AE0  3000               	movlw	0
  9975     0AE1  00A1               	movwf	i1___fldiv@a+1
  9976     0AE2  3000               	movlw	0
  9977     0AE3  00A0               	movwf	i1___fldiv@a
  9978     0AE4                     i1l818:
  9979     0AE4  0823               	movf	i1___fldiv@a+3,w
  9980     0AE5  0422               	iorwf	i1___fldiv@a+2,w
  9981     0AE6  0421               	iorwf	i1___fldiv@a+1,w
  9982     0AE7  0420               	iorwf	i1___fldiv@a,w
  9983     0AE8  1D03               	skipz
  9984     0AE9  2AEB               	goto	u476_21
  9985     0AEA  2AEC               	goto	u476_20
  9986     0AEB                     u476_21:
  9987     0AEB  2B03               	goto	i1l3498
  9988     0AEC                     u476_20:
  9989     0AEC                     i1l3490:
  9990     0AEC  3000               	movlw	0
  9991     0AED  00A7               	movwf	i1___fldiv@b+3
  9992     0AEE  3000               	movlw	0
  9993     0AEF  00A6               	movwf	i1___fldiv@b+2
  9994     0AF0  3000               	movlw	0
  9995     0AF1  00A5               	movwf	i1___fldiv@b+1
  9996     0AF2  3000               	movlw	0
  9997     0AF3  00A4               	movwf	i1___fldiv@b
  9998     0AF4  3080               	movlw	128
  9999     0AF5  04A6               	iorwf	i1___fldiv@b+2,f
 10000     0AF6  307F               	movlw	127
 10001     0AF7  04A7               	iorwf	i1___fldiv@b+3,f
 10002     0AF8                     i1l3492:
 10003     0AF8  0831               	movf	i1___fldiv@sign,w
 10004     0AF9  04A7               	iorwf	i1___fldiv@b+3,f
 10005     0AFA                     i1l3494:
 10006     0AFA  0827               	movf	i1___fldiv@b+3,w
 10007     0AFB  00A3               	movwf	?i1___fldiv+3
 10008     0AFC  0826               	movf	i1___fldiv@b+2,w
 10009     0AFD  00A2               	movwf	?i1___fldiv+2
 10010     0AFE  0825               	movf	i1___fldiv@b+1,w
 10011     0AFF  00A1               	movwf	?i1___fldiv+1
 10012     0B00  0824               	movf	i1___fldiv@b,w
 10013     0B01  00A0               	movwf	?i1___fldiv
 10014     0B02  2C58               	goto	i1l820
 10015     0B03                     i1l3498:
 10016     0B03  0838               	movf	i1___fldiv@bexp,w
 10017     0B04  1D03               	btfss	3,2
 10018     0B05  2B07               	goto	u477_21
 10019     0B06  2B08               	goto	u477_20
 10020     0B07                     u477_21:
 10021     0B07  2B11               	goto	i1l3504
 10022     0B08                     u477_20:
 10023     0B08                     i1l3500:
 10024     0B08  3000               	movlw	0
 10025     0B09  00A3               	movwf	?i1___fldiv+3
 10026     0B0A  3000               	movlw	0
 10027     0B0B  00A2               	movwf	?i1___fldiv+2
 10028     0B0C  3000               	movlw	0
 10029     0B0D  00A1               	movwf	?i1___fldiv+1
 10030     0B0E  3000               	movlw	0
 10031     0B0F  00A0               	movwf	?i1___fldiv
 10032     0B10  2C58               	goto	i1l820
 10033     0B11                     i1l3504:
 10034     0B11  0838               	movf	i1___fldiv@bexp,w
 10035     0B12  00A8               	movwf	??i1___fldiv
 10036     0B13  01A9               	clrf	??i1___fldiv+1
 10037     0B14  0829               	movf	??i1___fldiv+1,w
 10038     0B15  00AB               	movwf	??i1___fldiv+3
 10039     0B16  0839               	movf	i1___fldiv@aexp,w
 10040     0B17  0228               	subwf	??i1___fldiv,w
 10041     0B18  00AA               	movwf	??i1___fldiv+2
 10042     0B19  1C03               	skipc
 10043     0B1A  03AB               	decf	??i1___fldiv+3,f
 10044     0B1B  082A               	movf	??i1___fldiv+2,w
 10045     0B1C  3E7F               	addlw	127
 10046     0B1D  00B2               	movwf	i1___fldiv@new_exp
 10047     0B1E  082B               	movf	??i1___fldiv+3,w
 10048     0B1F  1803               	skipnc
 10049     0B20  3E01               	addlw	1
 10050     0B21  3E00               	addlw	0
 10051     0B22  00B3               	movwf	i1___fldiv@new_exp+1
 10052     0B23                     i1l3506:
 10053     0B23  0827               	movf	i1___fldiv@b+3,w
 10054     0B24  00B0               	movwf	i1___fldiv@rem+3
 10055     0B25  0826               	movf	i1___fldiv@b+2,w
 10056     0B26  00AF               	movwf	i1___fldiv@rem+2
 10057     0B27  0825               	movf	i1___fldiv@b+1,w
 10058     0B28  00AE               	movwf	i1___fldiv@rem+1
 10059     0B29  0824               	movf	i1___fldiv@b,w
 10060     0B2A  00AD               	movwf	i1___fldiv@rem
 10061     0B2B                     i1l3508:
 10062     0B2B  3000               	movlw	0
 10063     0B2C  00A7               	movwf	i1___fldiv@b+3
 10064     0B2D  3000               	movlw	0
 10065     0B2E  00A6               	movwf	i1___fldiv@b+2
 10066     0B2F  3000               	movlw	0
 10067     0B30  00A5               	movwf	i1___fldiv@b+1
 10068     0B31  3000               	movlw	0
 10069     0B32  00A4               	movwf	i1___fldiv@b
 10070     0B33                     i1l3510:
 10071     0B33  3000               	movlw	0
 10072     0B34  00B7               	movwf	i1___fldiv@grs+3
 10073     0B35  3000               	movlw	0
 10074     0B36  00B6               	movwf	i1___fldiv@grs+2
 10075     0B37  3000               	movlw	0
 10076     0B38  00B5               	movwf	i1___fldiv@grs+1
 10077     0B39  3000               	movlw	0
 10078     0B3A  00B4               	movwf	i1___fldiv@grs
 10079     0B3B                     i1l3512:
 10080     0B3B  01B9               	clrf	i1___fldiv@aexp
 10081     0B3C  2B85               	goto	i1l3532
 10082     0B3D                     i1l3514:
 10083     0B3D  0839               	movf	i1___fldiv@aexp,w
 10084     0B3E  1903               	btfsc	3,2
 10085     0B3F  2B41               	goto	u478_21
 10086     0B40  2B42               	goto	u478_20
 10087     0B41                     u478_21:
 10088     0B41  2B62               	goto	i1l3524
 10089     0B42                     u478_20:
 10090     0B42                     i1l3516:
 10091     0B42  3001               	movlw	1
 10092     0B43  00A8               	movwf	??i1___fldiv
 10093     0B44                     u479_25:
 10094     0B44  1003               	clrc
 10095     0B45  0DAD               	rlf	i1___fldiv@rem,f
 10096     0B46  0DAE               	rlf	i1___fldiv@rem+1,f
 10097     0B47  0DAF               	rlf	i1___fldiv@rem+2,f
 10098     0B48  0DB0               	rlf	i1___fldiv@rem+3,f
 10099     0B49  0BA8               	decfsz	??i1___fldiv,f
 10100     0B4A  2B44               	goto	u479_25
 10101     0B4B  3001               	movlw	1
 10102     0B4C  00A8               	movwf	??i1___fldiv
 10103     0B4D                     u480_25:
 10104     0B4D  1003               	clrc
 10105     0B4E  0DA4               	rlf	i1___fldiv@b,f
 10106     0B4F  0DA5               	rlf	i1___fldiv@b+1,f
 10107     0B50  0DA6               	rlf	i1___fldiv@b+2,f
 10108     0B51  0DA7               	rlf	i1___fldiv@b+3,f
 10109     0B52  0BA8               	decfsz	??i1___fldiv,f
 10110     0B53  2B4D               	goto	u480_25
 10111     0B54                     i1l3518:
 10112     0B54  1FB7               	btfss	i1___fldiv@grs+3,7
 10113     0B55  2B57               	goto	u481_21
 10114     0B56  2B58               	goto	u481_20
 10115     0B57                     u481_21:
 10116     0B57  2B59               	goto	i1l3522
 10117     0B58                     u481_20:
 10118     0B58                     i1l3520:
 10119     0B58  1424               	bsf	i1___fldiv@b,0
 10120     0B59                     i1l3522:
 10121     0B59  3001               	movlw	1
 10122     0B5A  00A8               	movwf	??i1___fldiv
 10123     0B5B                     u482_25:
 10124     0B5B  1003               	clrc
 10125     0B5C  0DB4               	rlf	i1___fldiv@grs,f
 10126     0B5D  0DB5               	rlf	i1___fldiv@grs+1,f
 10127     0B5E  0DB6               	rlf	i1___fldiv@grs+2,f
 10128     0B5F  0DB7               	rlf	i1___fldiv@grs+3,f
 10129     0B60  0BA8               	decfsz	??i1___fldiv,f
 10130     0B61  2B5B               	goto	u482_25
 10131     0B62                     i1l3524:
 10132     0B62  0823               	movf	i1___fldiv@a+3,w
 10133     0B63  0230               	subwf	i1___fldiv@rem+3,w
 10134     0B64  1D03               	skipz
 10135     0B65  2B70               	goto	u483_25
 10136     0B66  0822               	movf	i1___fldiv@a+2,w
 10137     0B67  022F               	subwf	i1___fldiv@rem+2,w
 10138     0B68  1D03               	skipz
 10139     0B69  2B70               	goto	u483_25
 10140     0B6A  0821               	movf	i1___fldiv@a+1,w
 10141     0B6B  022E               	subwf	i1___fldiv@rem+1,w
 10142     0B6C  1D03               	skipz
 10143     0B6D  2B70               	goto	u483_25
 10144     0B6E  0820               	movf	i1___fldiv@a,w
 10145     0B6F  022D               	subwf	i1___fldiv@rem,w
 10146     0B70                     u483_25:
 10147     0B70  1C03               	skipc
 10148     0B71  2B73               	goto	u483_21
 10149     0B72  2B74               	goto	u483_20
 10150     0B73                     u483_21:
 10151     0B73  2B83               	goto	i1l3530
 10152     0B74                     u483_20:
 10153     0B74                     i1l3526:
 10154     0B74  1737               	bsf	i1___fldiv@grs+3,6
 10155     0B75                     i1l3528:
 10156     0B75  0820               	movf	i1___fldiv@a,w
 10157     0B76  02AD               	subwf	i1___fldiv@rem,f
 10158     0B77  0821               	movf	i1___fldiv@a+1,w
 10159     0B78  1C03               	skipc
 10160     0B79  0F21               	incfsz	i1___fldiv@a+1,w
 10161     0B7A  02AE               	subwf	i1___fldiv@rem+1,f
 10162     0B7B  0822               	movf	i1___fldiv@a+2,w
 10163     0B7C  1C03               	skipc
 10164     0B7D  0F22               	incfsz	i1___fldiv@a+2,w
 10165     0B7E  02AF               	subwf	i1___fldiv@rem+2,f
 10166     0B7F  0823               	movf	i1___fldiv@a+3,w
 10167     0B80  1C03               	skipc
 10168     0B81  0F23               	incfsz	i1___fldiv@a+3,w
 10169     0B82  02B0               	subwf	i1___fldiv@rem+3,f
 10170     0B83                     i1l3530:
 10171     0B83  3001               	movlw	1
 10172     0B84  07B9               	addwf	i1___fldiv@aexp,f
 10173     0B85                     i1l3532:
 10174     0B85  301A               	movlw	26
 10175     0B86  0239               	subwf	i1___fldiv@aexp,w
 10176     0B87  1C03               	skipc
 10177     0B88  2B8A               	goto	u484_21
 10178     0B89  2B8B               	goto	u484_20
 10179     0B8A                     u484_21:
 10180     0B8A  2B3D               	goto	i1l3514
 10181     0B8B                     u484_20:
 10182     0B8B                     i1l3534:
 10183     0B8B  0830               	movf	i1___fldiv@rem+3,w
 10184     0B8C  042F               	iorwf	i1___fldiv@rem+2,w
 10185     0B8D  042E               	iorwf	i1___fldiv@rem+1,w
 10186     0B8E  042D               	iorwf	i1___fldiv@rem,w
 10187     0B8F  1903               	skipnz
 10188     0B90  2B92               	goto	u485_21
 10189     0B91  2B93               	goto	u485_20
 10190     0B92                     u485_21:
 10191     0B92  2BB2               	goto	i1l3548
 10192     0B93                     u485_20:
 10193     0B93                     i1l3536:
 10194     0B93  1434               	bsf	i1___fldiv@grs,0
 10195     0B94  2BB2               	goto	i1l3548
 10196     0B95                     i1l3538:
 10197     0B95  3001               	movlw	1
 10198     0B96  00A8               	movwf	??i1___fldiv
 10199     0B97                     u486_25:
 10200     0B97  1003               	clrc
 10201     0B98  0DA4               	rlf	i1___fldiv@b,f
 10202     0B99  0DA5               	rlf	i1___fldiv@b+1,f
 10203     0B9A  0DA6               	rlf	i1___fldiv@b+2,f
 10204     0B9B  0DA7               	rlf	i1___fldiv@b+3,f
 10205     0B9C  0BA8               	decfsz	??i1___fldiv,f
 10206     0B9D  2B97               	goto	u486_25
 10207     0B9E                     i1l3540:
 10208     0B9E  1FB7               	btfss	i1___fldiv@grs+3,7
 10209     0B9F  2BA1               	goto	u487_21
 10210     0BA0  2BA2               	goto	u487_20
 10211     0BA1                     u487_21:
 10212     0BA1  2BA3               	goto	i1l3544
 10213     0BA2                     u487_20:
 10214     0BA2                     i1l3542:
 10215     0BA2  1424               	bsf	i1___fldiv@b,0
 10216     0BA3                     i1l3544:
 10217     0BA3  3001               	movlw	1
 10218     0BA4  00A8               	movwf	??i1___fldiv
 10219     0BA5                     u488_25:
 10220     0BA5  1003               	clrc
 10221     0BA6  0DB4               	rlf	i1___fldiv@grs,f
 10222     0BA7  0DB5               	rlf	i1___fldiv@grs+1,f
 10223     0BA8  0DB6               	rlf	i1___fldiv@grs+2,f
 10224     0BA9  0DB7               	rlf	i1___fldiv@grs+3,f
 10225     0BAA  0BA8               	decfsz	??i1___fldiv,f
 10226     0BAB  2BA5               	goto	u488_25
 10227     0BAC                     i1l3546:
 10228     0BAC  30FF               	movlw	255
 10229     0BAD  07B2               	addwf	i1___fldiv@new_exp,f
 10230     0BAE  1803               	skipnc
 10231     0BAF  0AB3               	incf	i1___fldiv@new_exp+1,f
 10232     0BB0  30FF               	movlw	255
 10233     0BB1  07B3               	addwf	i1___fldiv@new_exp+1,f
 10234     0BB2                     i1l3548:
 10235     0BB2  1FA6               	btfss	i1___fldiv@b+2,7
 10236     0BB3  2BB5               	goto	u489_21
 10237     0BB4  2BB6               	goto	u489_20
 10238     0BB5                     u489_21:
 10239     0BB5  2B95               	goto	i1l3538
 10240     0BB6                     u489_20:
 10241     0BB6                     i1l3550:
 10242     0BB6  01B9               	clrf	i1___fldiv@aexp
 10243     0BB7                     i1l3552:
 10244     0BB7  1FB7               	btfss	i1___fldiv@grs+3,7
 10245     0BB8  2BBA               	goto	u490_21
 10246     0BB9  2BBB               	goto	u490_20
 10247     0BBA                     u490_21:
 10248     0BBA  2BD7               	goto	i1l3560
 10249     0BBB                     u490_20:
 10250     0BBB                     i1l3554:
 10251     0BBB  30FF               	movlw	255
 10252     0BBC  0534               	andwf	i1___fldiv@grs,w
 10253     0BBD  00A8               	movwf	??i1___fldiv
 10254     0BBE  30FF               	movlw	255
 10255     0BBF  0535               	andwf	i1___fldiv@grs+1,w
 10256     0BC0  00A9               	movwf	??i1___fldiv+1
 10257     0BC1  30FF               	movlw	255
 10258     0BC2  0536               	andwf	i1___fldiv@grs+2,w
 10259     0BC3  00AA               	movwf	??i1___fldiv+2
 10260     0BC4  307F               	movlw	127
 10261     0BC5  0537               	andwf	i1___fldiv@grs+3,w
 10262     0BC6  00AB               	movwf	??i1___fldiv+3
 10263     0BC7  082B               	movf	??i1___fldiv+3,w
 10264     0BC8  042A               	iorwf	??i1___fldiv+2,w
 10265     0BC9  0429               	iorwf	??i1___fldiv+1,w
 10266     0BCA  0428               	iorwf	??i1___fldiv,w
 10267     0BCB  1903               	skipnz
 10268     0BCC  2BCE               	goto	u491_21
 10269     0BCD  2BCF               	goto	u491_20
 10270     0BCE                     u491_21:
 10271     0BCE  2BD2               	goto	i1l834
 10272     0BCF                     u491_20:
 10273     0BCF                     i1l3556:
 10274     0BCF  3001               	movlw	1
 10275     0BD0  00B9               	movwf	i1___fldiv@aexp
 10276     0BD1  2BD7               	goto	i1l3560
 10277     0BD2                     i1l834:
 10278     0BD2  1C24               	btfss	i1___fldiv@b,0
 10279     0BD3  2BD5               	goto	u492_21
 10280     0BD4  2BD6               	goto	u492_20
 10281     0BD5                     u492_21:
 10282     0BD5  2BD7               	goto	i1l3560
 10283     0BD6                     u492_20:
 10284     0BD6  2BCF               	goto	i1l3556
 10285     0BD7                     i1l3560:
 10286     0BD7  0839               	movf	i1___fldiv@aexp,w
 10287     0BD8  1903               	btfsc	3,2
 10288     0BD9  2BDB               	goto	u493_21
 10289     0BDA  2BDC               	goto	u493_20
 10290     0BDB                     u493_21:
 10291     0BDB  2C0D               	goto	i1l3570
 10292     0BDC                     u493_20:
 10293     0BDC                     i1l3562:
 10294     0BDC  3001               	movlw	1
 10295     0BDD  07A4               	addwf	i1___fldiv@b,f
 10296     0BDE  3000               	movlw	0
 10297     0BDF  1803               	skipnc
 10298     0BE0  3001               	movlw	1
 10299     0BE1  07A5               	addwf	i1___fldiv@b+1,f
 10300     0BE2  3000               	movlw	0
 10301     0BE3  1803               	skipnc
 10302     0BE4  3001               	movlw	1
 10303     0BE5  07A6               	addwf	i1___fldiv@b+2,f
 10304     0BE6  3000               	movlw	0
 10305     0BE7  1803               	skipnc
 10306     0BE8  3001               	movlw	1
 10307     0BE9  07A7               	addwf	i1___fldiv@b+3,f
 10308     0BEA                     i1l3564:
 10309     0BEA  1C27               	btfss	i1___fldiv@b+3,0
 10310     0BEB  2BED               	goto	u494_21
 10311     0BEC  2BEE               	goto	u494_20
 10312     0BED                     u494_21:
 10313     0BED  2C0D               	goto	i1l3570
 10314     0BEE                     u494_20:
 10315     0BEE                     i1l3566:
 10316     0BEE  0824               	movf	i1___fldiv@b,w
 10317     0BEF  00A8               	movwf	??i1___fldiv
 10318     0BF0  0825               	movf	i1___fldiv@b+1,w
 10319     0BF1  00A9               	movwf	??i1___fldiv+1
 10320     0BF2  0826               	movf	i1___fldiv@b+2,w
 10321     0BF3  00AA               	movwf	??i1___fldiv+2
 10322     0BF4  0827               	movf	i1___fldiv@b+3,w
 10323     0BF5  00AB               	movwf	??i1___fldiv+3
 10324     0BF6  3001               	movlw	1
 10325     0BF7  00AC               	movwf	??i1___fldiv+4
 10326     0BF8                     u495_25:
 10327     0BF8  0D2B               	rlf	??i1___fldiv+3,w
 10328     0BF9  0CAB               	rrf	??i1___fldiv+3,f
 10329     0BFA  0CAA               	rrf	??i1___fldiv+2,f
 10330     0BFB  0CA9               	rrf	??i1___fldiv+1,f
 10331     0BFC  0CA8               	rrf	??i1___fldiv,f
 10332     0BFD                     u495_20:
 10333     0BFD  0BAC               	decfsz	??i1___fldiv+4,f
 10334     0BFE  2BF8               	goto	u495_25
 10335     0BFF  082B               	movf	??i1___fldiv+3,w
 10336     0C00  00A7               	movwf	i1___fldiv@b+3
 10337     0C01  082A               	movf	??i1___fldiv+2,w
 10338     0C02  00A6               	movwf	i1___fldiv@b+2
 10339     0C03  0829               	movf	??i1___fldiv+1,w
 10340     0C04  00A5               	movwf	i1___fldiv@b+1
 10341     0C05  0828               	movf	??i1___fldiv,w
 10342     0C06  00A4               	movwf	i1___fldiv@b
 10343     0C07                     i1l3568:
 10344     0C07  3001               	movlw	1
 10345     0C08  07B2               	addwf	i1___fldiv@new_exp,f
 10346     0C09  1803               	skipnc
 10347     0C0A  0AB3               	incf	i1___fldiv@new_exp+1,f
 10348     0C0B  3000               	movlw	0
 10349     0C0C  07B3               	addwf	i1___fldiv@new_exp+1,f
 10350     0C0D                     i1l3570:
 10351     0C0D  0833               	movf	i1___fldiv@new_exp+1,w
 10352     0C0E  3A80               	xorlw	128
 10353     0C0F  00FF               	movwf	btemp+1
 10354     0C10  3080               	movlw	128
 10355     0C11  027F               	subwf	btemp+1,w
 10356     0C12  1D03               	skipz
 10357     0C13  2C16               	goto	u496_25
 10358     0C14  30FF               	movlw	255
 10359     0C15  0232               	subwf	i1___fldiv@new_exp,w
 10360     0C16                     u496_25:
 10361     0C16  1C03               	skipc
 10362     0C17  2C19               	goto	u496_21
 10363     0C18  2C1A               	goto	u496_20
 10364     0C19                     u496_21:
 10365     0C19  2C28               	goto	i1l3574
 10366     0C1A                     u496_20:
 10367     0C1A                     i1l3572:
 10368     0C1A  30FF               	movlw	255
 10369     0C1B  1283               	bcf	3,5	;RP0=0, select bank0
 10370     0C1C  1303               	bcf	3,6	;RP1=0, select bank0
 10371     0C1D  00B2               	movwf	i1___fldiv@new_exp
 10372     0C1E  3000               	movlw	0
 10373     0C1F  00B3               	movwf	i1___fldiv@new_exp+1
 10374     0C20  3000               	movlw	0
 10375     0C21  00A7               	movwf	i1___fldiv@b+3
 10376     0C22  3000               	movlw	0
 10377     0C23  00A6               	movwf	i1___fldiv@b+2
 10378     0C24  3000               	movlw	0
 10379     0C25  00A5               	movwf	i1___fldiv@b+1
 10380     0C26  3000               	movlw	0
 10381     0C27  00A4               	movwf	i1___fldiv@b
 10382     0C28                     i1l3574:
 10383     0C28  1283               	bcf	3,5	;RP0=0, select bank0
 10384     0C29  1303               	bcf	3,6	;RP1=0, select bank0
 10385     0C2A  0833               	movf	i1___fldiv@new_exp+1,w
 10386     0C2B  3A80               	xorlw	128
 10387     0C2C  00FF               	movwf	btemp+1
 10388     0C2D  3080               	movlw	128
 10389     0C2E  027F               	subwf	btemp+1,w
 10390     0C2F  1D03               	skipz
 10391     0C30  2C33               	goto	u497_25
 10392     0C31  3001               	movlw	1
 10393     0C32  0232               	subwf	i1___fldiv@new_exp,w
 10394     0C33                     u497_25:
 10395     0C33  1803               	skipnc
 10396     0C34  2C36               	goto	u497_21
 10397     0C35  2C37               	goto	u497_20
 10398     0C36                     u497_21:
 10399     0C36  2C44               	goto	i1l840
 10400     0C37                     u497_20:
 10401     0C37                     i1l3576:
 10402     0C37  1283               	bcf	3,5	;RP0=0, select bank0
 10403     0C38  1303               	bcf	3,6	;RP1=0, select bank0
 10404     0C39  01B2               	clrf	i1___fldiv@new_exp
 10405     0C3A  01B3               	clrf	i1___fldiv@new_exp+1
 10406     0C3B                     i1l3578:
 10407     0C3B  3000               	movlw	0
 10408     0C3C  00A7               	movwf	i1___fldiv@b+3
 10409     0C3D  3000               	movlw	0
 10410     0C3E  00A6               	movwf	i1___fldiv@b+2
 10411     0C3F  3000               	movlw	0
 10412     0C40  00A5               	movwf	i1___fldiv@b+1
 10413     0C41  3000               	movlw	0
 10414     0C42  00A4               	movwf	i1___fldiv@b
 10415     0C43                     i1l3580:
 10416     0C43  01B1               	clrf	i1___fldiv@sign
 10417     0C44                     i1l840:
 10418     0C44  1283               	bcf	3,5	;RP0=0, select bank0
 10419     0C45  1303               	bcf	3,6	;RP1=0, select bank0
 10420     0C46  0832               	movf	i1___fldiv@new_exp,w
 10421     0C47  00B8               	movwf	i1___fldiv@bexp
 10422     0C48                     i1l3582:
 10423     0C48  1C38               	btfss	i1___fldiv@bexp,0
 10424     0C49  2C4B               	goto	u498_21
 10425     0C4A  2C4C               	goto	u498_20
 10426     0C4B                     u498_21:
 10427     0C4B  2C4E               	goto	i1l3586
 10428     0C4C                     u498_20:
 10429     0C4C                     i1l3584:
 10430     0C4C  17A6               	bsf	i1___fldiv@b+2,7
 10431     0C4D  2C50               	goto	i1l842
 10432     0C4E                     i1l3586:
 10433     0C4E  307F               	movlw	127
 10434     0C4F  05A6               	andwf	i1___fldiv@b+2,f
 10435     0C50                     i1l842:
 10436     0C50  0838               	movf	i1___fldiv@bexp,w
 10437     0C51  00A8               	movwf	??i1___fldiv
 10438     0C52  1003               	clrc
 10439     0C53  0C28               	rrf	??i1___fldiv,w
 10440     0C54  00A7               	movwf	i1___fldiv@b+3
 10441     0C55  0831               	movf	i1___fldiv@sign,w
 10442     0C56  04A7               	iorwf	i1___fldiv@b+3,f
 10443     0C57  2AFA               	goto	i1l3494
 10444     0C58                     i1l820:
 10445     0C58  0008               	return
 10446     0C59                     __end_ofi1___fldiv:
 10447                           
 10448                           	psect	text48
 10449     1653                     __ptext48:	
 10450 ;; *************** function ___fltol *****************
 10451 ;; Defined at:
 10452 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  f1              4   26[BANK0 ] unsigned char 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;  exp1            1   35[BANK0 ] unsigned char 
 10457 ;;  sign1           1   34[BANK0 ] unsigned char 
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  4   26[BANK0 ] long 
 10460 ;; Registers used:
 10461 ;;		wreg, status,2, status,0
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10467 ;;      Params:         0       4       0       0       0
 10468 ;;      Locals:         0       2       0       0       0
 10469 ;;      Temps:          0       4       0       0       0
 10470 ;;      Totals:         0      10       0       0       0
 10471 ;;Total ram usage:       10 bytes
 10472 ;; Hardware stack levels used: 1
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_echoTime
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480     1653                     ___fltol:	
 10481                           ;psect for function ___fltol
 10482                           
 10483     1653                     i1l3412:	
 10484                           ;incstack = 0
 10485 ;; hardware stack exceeded
 10486                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10487                           
 10488     1653  1003               	clrc
 10489     1654  1283               	bcf	3,5	;RP0=0, select bank0
 10490     1655  1303               	bcf	3,6	;RP1=0, select bank0
 10491     1656  0D3C               	rlf	___fltol@f1+2,w
 10492     1657  0D3D               	rlf	___fltol@f1+3,w
 10493     1658  00C3               	movwf	___fltol@exp1
 10494     1659  0843               	movf	___fltol@exp1,w
 10495     165A  1D03               	btfss	3,2
 10496     165B  2E5D               	goto	u460_21
 10497     165C  2E5E               	goto	u460_20
 10498     165D                     u460_21:
 10499     165D  2E67               	goto	i1l3418
 10500     165E                     u460_20:
 10501     165E                     i1l3414:
 10502     165E  3000               	movlw	0
 10503     165F  00BD               	movwf	?___fltol+3
 10504     1660  3000               	movlw	0
 10505     1661  00BC               	movwf	?___fltol+2
 10506     1662  3000               	movlw	0
 10507     1663  00BB               	movwf	?___fltol+1
 10508     1664  3000               	movlw	0
 10509     1665  00BA               	movwf	?___fltol
 10510     1666  2EC8               	goto	i1l655
 10511     1667                     i1l3418:
 10512     1667  083A               	movf	___fltol@f1,w
 10513     1668  00BE               	movwf	??___fltol
 10514     1669  083B               	movf	___fltol@f1+1,w
 10515     166A  00BF               	movwf	??___fltol+1
 10516     166B  083C               	movf	___fltol@f1+2,w
 10517     166C  00C0               	movwf	??___fltol+2
 10518     166D  083D               	movf	___fltol@f1+3,w
 10519     166E  00C1               	movwf	??___fltol+3
 10520     166F  301F               	movlw	31
 10521     1670                     u461_25:
 10522     1670  1003               	clrc
 10523     1671  0CC1               	rrf	??___fltol+3,f
 10524     1672  0CC0               	rrf	??___fltol+2,f
 10525     1673  0CBF               	rrf	??___fltol+1,f
 10526     1674  0CBE               	rrf	??___fltol,f
 10527     1675                     u461_20:
 10528     1675  3EFF               	addlw	-1
 10529     1676  1D03               	skipz
 10530     1677  2E70               	goto	u461_25
 10531     1678  083E               	movf	??___fltol,w
 10532     1679  00C2               	movwf	___fltol@sign1
 10533     167A                     i1l3420:
 10534     167A  17BC               	bsf	___fltol@f1+2,7
 10535     167B                     i1l3422:
 10536     167B  30FF               	movlw	255
 10537     167C  05BA               	andwf	___fltol@f1,f
 10538     167D  30FF               	movlw	255
 10539     167E  05BB               	andwf	___fltol@f1+1,f
 10540     167F  30FF               	movlw	255
 10541     1680  05BC               	andwf	___fltol@f1+2,f
 10542     1681  3000               	movlw	0
 10543     1682  05BD               	andwf	___fltol@f1+3,f
 10544     1683                     i1l3424:
 10545     1683  3096               	movlw	150
 10546     1684  02C3               	subwf	___fltol@exp1,f
 10547     1685                     i1l3426:
 10548     1685  1FC3               	btfss	___fltol@exp1,7
 10549     1686  2E88               	goto	u462_21
 10550     1687  2E89               	goto	u462_20
 10551     1688                     u462_21:
 10552     1688  2EA1               	goto	i1l3436
 10553     1689                     u462_20:
 10554     1689                     i1l3428:
 10555     1689  0843               	movf	___fltol@exp1,w
 10556     168A  3A80               	xorlw	128
 10557     168B  3E97               	addlw	151
 10558     168C  1803               	skipnc
 10559     168D  2E8F               	goto	u463_21
 10560     168E  2E90               	goto	u463_20
 10561     168F                     u463_21:
 10562     168F  2E91               	goto	i1l3434
 10563     1690                     u463_20:
 10564     1690  2E5E               	goto	i1l3414
 10565     1691                     i1l3434:
 10566     1691  3001               	movlw	1
 10567     1692                     u464_25:
 10568     1692  1003               	clrc
 10569     1693  0CBD               	rrf	___fltol@f1+3,f
 10570     1694  0CBC               	rrf	___fltol@f1+2,f
 10571     1695  0CBB               	rrf	___fltol@f1+1,f
 10572     1696  0CBA               	rrf	___fltol@f1,f
 10573     1697  3EFF               	addlw	-1
 10574     1698  1D03               	skipz
 10575     1699  2E92               	goto	u464_25
 10576     169A  3001               	movlw	1
 10577     169B  07C3               	addwf	___fltol@exp1,f
 10578     169C  1D03               	btfss	3,2
 10579     169D  2E9F               	goto	u465_21
 10580     169E  2EA0               	goto	u465_20
 10581     169F                     u465_21:
 10582     169F  2E91               	goto	i1l3434
 10583     16A0                     u465_20:
 10584     16A0  2EB8               	goto	i1l3444
 10585     16A1                     i1l3436:
 10586     16A1  3020               	movlw	32
 10587     16A2  0243               	subwf	___fltol@exp1,w
 10588     16A3  1C03               	skipc
 10589     16A4  2EA6               	goto	u466_21
 10590     16A5  2EA7               	goto	u466_20
 10591     16A6                     u466_21:
 10592     16A6  2EB3               	goto	i1l662
 10593     16A7                     u466_20:
 10594     16A7  2E5E               	goto	i1l3414
 10595     16A8                     i1l3442:
 10596     16A8  3001               	movlw	1
 10597     16A9  00BE               	movwf	??___fltol
 10598     16AA                     u467_25:
 10599     16AA  1003               	clrc
 10600     16AB  0DBA               	rlf	___fltol@f1,f
 10601     16AC  0DBB               	rlf	___fltol@f1+1,f
 10602     16AD  0DBC               	rlf	___fltol@f1+2,f
 10603     16AE  0DBD               	rlf	___fltol@f1+3,f
 10604     16AF  0BBE               	decfsz	??___fltol,f
 10605     16B0  2EAA               	goto	u467_25
 10606     16B1  3001               	movlw	1
 10607     16B2  02C3               	subwf	___fltol@exp1,f
 10608     16B3                     i1l662:
 10609     16B3  0843               	movf	___fltol@exp1,w
 10610     16B4  1D03               	btfss	3,2
 10611     16B5  2EB7               	goto	u468_21
 10612     16B6  2EB8               	goto	u468_20
 10613     16B7                     u468_21:
 10614     16B7  2EA8               	goto	i1l3442
 10615     16B8                     u468_20:
 10616     16B8                     i1l3444:
 10617     16B8  0842               	movf	___fltol@sign1,w
 10618     16B9  1903               	btfsc	3,2
 10619     16BA  2EBC               	goto	u469_21
 10620     16BB  2EBD               	goto	u469_20
 10621     16BC                     u469_21:
 10622     16BC  2EC8               	goto	i1l665
 10623     16BD                     u469_20:
 10624     16BD                     i1l3446:
 10625     16BD  09BA               	comf	___fltol@f1,f
 10626     16BE  09BB               	comf	___fltol@f1+1,f
 10627     16BF  09BC               	comf	___fltol@f1+2,f
 10628     16C0  09BD               	comf	___fltol@f1+3,f
 10629     16C1  0ABA               	incf	___fltol@f1,f
 10630     16C2  1903               	skipnz
 10631     16C3  0ABB               	incf	___fltol@f1+1,f
 10632     16C4  1903               	skipnz
 10633     16C5  0ABC               	incf	___fltol@f1+2,f
 10634     16C6  1903               	skipnz
 10635     16C7  0ABD               	incf	___fltol@f1+3,f
 10636     16C8                     i1l665:
 10637     16C8                     i1l655:
 10638     16C8  0008               	return
 10639     16C9                     __end_of___fltol:
 10640     0002                     ___latbits      equ	2
 10641     007E                     btemp           set	126	;btemp
 10642     007E                     wtemp0          set	126
 10643                           
 10644                           	psect	config
 10645                           
 10646                           ;Config register CONFIG1 @ 0x2007
 10647                           ;	Oscillator Selection bits
 10648                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10649                           ;	Watchdog Timer Enable bit
 10650                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10651                           ;	Power-up Timer Enable bit
 10652                           ;	PWRTE = OFF, PWRT disabled
 10653                           ;	RE3/MCLR pin function select bit
 10654                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10655                           ;	Code Protection bit
 10656                           ;	CP = OFF, Program memory code protection is disabled
 10657                           ;	Data Code Protection bit
 10658                           ;	CPD = OFF, Data memory code protection is disabled
 10659                           ;	Brown Out Reset Selection bits
 10660                           ;	BOREN = OFF, BOR disabled
 10661                           ;	Internal External Switchover bit
 10662                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10663                           ;	Fail-Safe Clock Monitor Enabled bit
 10664                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10665                           ;	Low Voltage Programming Enable bit
 10666                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10667                           ;	In-Circuit Debugger Mode bit
 10668                           ;	DEBUG = 0x1, unprogrammed default
 10669     2007                     	org	8199
 10670     2007  20F2               	dw	8434
 10671                           
 10672                           ;Config register CONFIG2 @ 0x2008
 10673                           ;	Brown-out Reset Selection bit
 10674                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10675                           ;	Flash Program Memory Self Write Enable bits
 10676                           ;	WRT = OFF, Write protection off
 10677     2008                     	org	8200
 10678     2008  3FFF               	dw	16383

Data Sizes:
    Strings     242
    Constant    0
    Data        10
    BSS         109
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     41      66
    BANK1            80     80      80
    BANK3            96     48      74
    BANK2            96      0      72

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> out(BANK3[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> out(BANK3[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 20
		 -> out(BANK3[20]), STR_11(CODE[20]), STR_3(CODE[15]), STR_4(CODE[18]), 
		 -> STR_5(CODE[18]), STR_6(CODE[20]), STR_7(CODE[11]), 

    S727$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> out(BANK3[20]), 

    S727$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> out(BANK3[20]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 53
		 -> out(BANK3[20]), STR_1(CODE[53]), STR_10(CODE[3]), STR_2(CODE[50]), 
		 -> STR_8(CODE[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _echoTime in COMMON

    _echoTime->i1___xxtofl
    i1___fldiv->i1___xxtofl
    ___fltol->i1___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _echoTime in BANK0

    _echoTime->___fltol
    ___fltol->i1___fldiv

Critical Paths under _main in BANK1

    _checkPauseButton->_SR04_Distance
    _SR04_Distance->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _UART_Write_Text->_UART_Write
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _BUZZER_MultipleBeeps->_custom_delay_ms
    _BUZZER_Beep->_custom_delay_ms
    _SR04_init->___fladd
    ___flmul->__Umul8_16
    ___fldiv->___flmul
    ___fladd->___fldiv
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _echoTime in BANK1

    None.

Critical Paths under _main in BANK3

    _checkPauseButton->_SR04_Distance
    _SR04_init->___fladd

Critical Paths under _echoTime in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echoTime in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8989
                                             77 BANK1      3     3      0
                        _BUTTON_Init
                        _BUZZER_Init
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           _LED_Init
                          _SR04_init
                       _UART_TX_Init
                    _UART_Write_Text
                   _checkPauseButton
 ---------------------------------------------------------------------------------
 (1) _checkPauseButton                                     3     3      0    3130
                                             56 BANK1      3     3      0
                            _LED_Off
                             _LED_On
                      _SR04_Distance
 ---------------------------------------------------------------------------------
 (2) _SR04_Distance                                       50    50      0    3038
                                             54 BANK1      2     2      0
                                              0 BANK3     48    48      0
                        _BUZZER_Beep
               _BUZZER_MultipleBeeps
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _SR04_trigger
                    _UART_Write_Text
                            ___lwdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    15      5    1760
                                             36 BANK1     18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             7     2      5    1559
                                             29 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    12      4    1434
                                             13 BANK1     16    12      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                               13     9      4     230
                                              0 BANK1     13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 BANK1      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     164
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _UART_Write_Text                                      2     0      2      79
                                              1 BANK1      2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      29
                                              0 BANK1      1     1      0
                      _UART_TX_Empty
 ---------------------------------------------------------------------------------
 (5) _UART_TX_Empty                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SR04_trigger                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     7     5      2     273
                                              6 BANK1      7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       2     2      0     176
                                              4 BANK1      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       2     1      1     300
                                              6 BANK1      2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BUZZER_MultipleBeeps                                 8     4      4     201
                                              6 BANK1      8     4      4
                         _BUZZER_Off
                          _BUZZER_On
                    _custom_delay_ms
 ---------------------------------------------------------------------------------
 (3) _BUZZER_Beep                                          2     0      2      74
                                              6 BANK1      2     0      2
                         _BUZZER_Off
                          _BUZZER_On
                    _custom_delay_ms
 ---------------------------------------------------------------------------------
 (4) _custom_delay_ms                                      6     4      2      49
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _BUZZER_On                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BUZZER_Off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SR04_init                                            8     8      0    4768
                                              4 BANK3      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    1608
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     139
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1126
                                             35 BANK1     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    1988
                                             61 BANK1     16     8      8
                                              0 BANK3      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     263
                                              6 BANK1      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     176
                                              6 BANK1      1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              2     2      0     176
                                              4 BANK1      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (5) _LCD_Write_4Bit                                       2     2      0     118
                                              2 BANK1      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (6) _IO_Expander_Write                                    1     1      0      58
                                              1 BANK1      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Write                                     1     1      0      29
                                              0 BANK1      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUZZER_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTON_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _echoTime                                             5     5      0    1714
                                             36 BANK0      5     5      0
                            ___fltol
                          i1___fldiv
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (10) i1___xxtofl                                         14    10      4     337
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) i1___fldiv                                          26    18      8    1124
                                              0 BANK0     26    18      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            10     6      4     230
                                             26 BANK0     10     6      4
                          i1___fldiv (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BUTTON_Init
   _BUZZER_Init
   _I2C_Master_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   _LED_Init
   _SR04_init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
       ___flmul (ARG)
     ___fldiv
     ___flmul
   _UART_TX_Init
   _UART_Write_Text
     _UART_Write
       _UART_TX_Empty
   _checkPauseButton
     _LED_Off
     _LED_On
     _SR04_Distance
       _BUZZER_Beep
         _BUZZER_Off
         _BUZZER_On
         _custom_delay_ms
       _BUZZER_MultipleBeeps
         _BUZZER_Off
         _BUZZER_On
         _custom_delay_ms
       _LCD_Set_Cursor
       _LCD_Write_String
       _SR04_trigger
       _UART_Write_Text
       ___lwdiv
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch

 _echoTime (ROOT)
   ___fltol
     i1___fldiv (ARG)
       i1___xxtofl (ARG)
     i1___xxtofl (ARG)
   i1___fldiv
   i1___xxtofl

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96     48      74     77.1%
BITBANK3            96      0       0      0.0%
BANK2               96      0      72     75.0%
BITBANK2            96      0       0      0.0%
BANK1               80     80      80    100.0%
BITBANK1            80      0       0      0.0%
BANK0               80     41      66     82.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     306      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Mar 25 15:30:18 2025

                      ___fldiv@aexp 00DC                        ___fldiv@bexp 00DB  
                                 pc 0002                        ___fldiv@sign 00D4  
                       i1___fldiv@a 0020                         i1___fldiv@b 0024  
                                l41 116B                                  l50 118B  
                                l44 1150                                  l47 1193  
                                l58 15ED                                  _RS 0051  
                      ___awdiv@sign 00A5                                  fsr 0004  
               __Umul8_16@word_mpld 00A6                          i1___xxtofl 091A  
                  custom_delay_ms@i 00A4                                 l210 113D  
                               l132 12FE                                 l213 1124  
                               l221 12D4                                 l222 12D5  
                               l231 1159                                 l216 1130  
                               l225 1162                                 l129 0A8E  
                               l330 14A2                                 l219 12D0  
                               l315 1123                                 l252 1334  
                               l324 12E9                                 l156 0FFF  
                               l261 153A                                 l246 17FF  
                               l318 1181                                 l255 13BD  
                               l264 1377                                 l249 1355  
                               l353 1390                                 l273 143B  
                               l362 118F                                 l356 139A  
                               l365 1186                                 l614 1652  
                               l359 117B                                 l375 14E6  
                               l288 07FF                                 l368 1314  
                               l627 1593                                 l804 065E  
                               l820 0E22                                 l805 0670  
                               l741 07F2                                 l840 0E0E  
                               l762 0400                                 l842 0E1A  
                               l834 0D9C                                 l818 0CAE  
                               l924 13E2                                 l757 03BE  
                               l766 04BC                                 l870 0376  
                               l783 0599                                 l775 0670  
                               l768 048C                                 l864 02F2  
                               l793 05F0                                 l858 0380  
                               l962 07AE                                 l787 05C6  
                               l796 0634                                 l877 13F9  
                               l879 140B                                 l975 12AE  
                               l968 146C                                 l987 0919  
                               _GIE 005F                                 l998 0003  
                               _RB0 0030                                 _RB1 0031  
                               _PEN 048A                                 _SEN 0488  
                               _abs 129C                        ?_BUTTON_Init 0070  
                               fsr0 0004                                 _out 01C6  
                       ?_BUZZER_Off 0070                                 indf 0000  
                      ___awmod@sign 00A5                        ___flmul@aexp 00BB  
                      ___flmul@bexp 00BC                        ___flmul@sign 00B6  
                      ___flmul@temp 00C1                        ___flmul@prod 00BD  
                   __end_of_LCD_CMD 1378                     __end_of_LED_Off 1194  
                     i1___fldiv@grs 0034                 LCD_Write_String@Str 00A6  
                    _LCD_Set_Cursor 140C                       i1___fldiv@rem 002D  
                      ___fltol@exp1 0043                                ?_abs 00A6  
                              l3010 0632                                l3002 05F7  
                              l3020 0652                                l3012 063B  
                              l3004 05FE                                l3100 0D1E  
                              l3022 0656                                l3014 0640  
                              l3006 060E                                l3110 0D3F  
                              l3102 0D22                                l3030 0C59  
                              l3024 065A                                l3016 064A  
                              l3008 0612                                l3120 0D5F  
                              l3112 0D4D                                l3104 0D23  
                              l3040 0C68                                l3032 0C5D  
                              l3200 0075                                l2410 12C5  
                              l3026 0667                                l3018 0651  
                              l3122 0D68                                l3130 0D7C  
                              l3106 0D2C                                l3114 0D4F  
                              l3042 0C6D                                l3050 0C7D  
                              l3034 0C5F                                l3210 008A  
                              l3202 0076                                l2420 1156  
                              l2412 12CA                                l3028 066D  
                              l3132 0D80                                l3124 0D6C  
                              l3116 0D55                                l3108 0D3E  
                              l3060 0C91                                l3052 0C85  
                              l3044 0C72                                l3036 0C63  
                              l3300 0354                                l3220 00A5  
                              l3212 0092                                l3204 007B  
                              l2500 158A                                l2406 1124  
                              l2414 115A                                l2422 1338  
                              l3150 0DD1                                l3142 0DA1  
                              l3134 0D81                                l3126 0D6D  
                              l3118 0D5D                                l3062 0C96  
                              l3070 0CA6                                l3054 0C88  
                              l3046 0C7A                                l3038 0C67  
                              l3310 0371                                l3302 035E  
                              l3230 0121                                l3222 00B3  
                              l3214 0097                                l3206 0080  
                              l2430 15FA                                l2502 158F  
                              l2510 0888                                l2408 112A  
                              l2416 115F                                l3400 17CC  
                              l3160 0E05                                l3144 0DA6  
                              l3152 0DD7                                l3136 0D85  
                              l3128 0D76                                l3072 0CB6  
                              l3080 0CCD                                l3064 0C9B  
                              l3056 0C8C                                l3048 0C7B  
                              l3312 0378                                l3304 0360  
                              l3240 018D                                l3232 013D  
                              l3224 00C0                                l3216 009C  
                              l3208 0088                                l2600 12D9  
                              l2440 1609                                l2432 15FC  
                              l2424 15EE                                l2520 129C  
                              l2512 088F                                l3320 1594  
                              l2418 1151                                l2530 131E  
                              l3410 07F9                                l3402 17D2  
                              l3162 0E0D                                l3154 0DE4  
                              l3146 0DB4                                l3138 0D99  
                              l3090 0CF5                                l3082 0CD2  
                              l3074 0CC2                                l3066 0CA3  
                              l3058 0C90                                l3306 036C  
                              l3250 0217                                l3242 019B  
                              l3234 0159                                l3226 00DB  
                              l2610 118C                                l2602 12D9  
                              l2450 161F                                l2442 160F  
                              l2434 1600                                l2426 15F1  
                              l2522 12A2                                l2514 08A7  
                              l2506 087A                                l3330 15B7  
                              l3322 159A                                l3316 1163  
                              l2532 1325                                l3404 17E3  
                              l3164 0E12                                l3156 0DF2  
                              l3148 0DB8                                l3092 0CFD  
                              l3076 0CC4                                l3068 0CA4  
                              l3308 0370                                l3260 02A7  
                              l3252 0225                                l3244 01B8  
                              l3236 0162                                l3228 00F7  
                              l3180 0049                                l2612 1182  
                              l2604 12E3                                l2700 07BC  
                              l2452 1630                                l2444 1612  
                              l2460 1644                                l2436 1605  
                              l2428 15F5                                l2524 12A3  
                              l2516 08D9                                l2508 0882  
                              l2540 068F                                l2620 1468  
                              l3340 15DB                                l3332 15BF  
                              l3324 159C                                l3406 17EE  
                              l3318 1148                                l3166 0E16  
                              l3158 0E01                                l3094 0D05  
                              l3086 0CDB                                l3270 02CC  
                              l3262 02B5                                l3254 0250  
                              l3246 01CF                                l3238 0170  
                              l3190 0060                                l3182 004D  
                              l3174 003F                                l3350 09D4  
                              l2606 1378                                l2534 117C  
                              l2630 148C                                l2710 07E0  
                              l2702 07C3                                l2462 1649  
                              l2454 1636                                l2446 1619  
                              l2438 1607                                l2470 153E  
                              l2550 06C1                                l2542 0699  
                              l2614 143C                                l3342 15E2  
                              l3334 15C5                                l3326 15A4  
                              l2528 1318                                l3408 07F3  
                              l3168 0E18                                l3096 0D07  
                              l3088 0CED                                l2720 13E6  
                              l3280 02EF                                l3264 02BE  
                              l3272 02D2                                l3256 0276  
                              l3248 01EC                                l3192 0062  
                              l3184 004E                                l3176 0043  
                              l3360 09DC                                l3352 09D5  
                              l2608 137D                                l2640 1428  
                              l2632 140F                                l2624 146D  
                              l2712 07E1                                l2704 07C5  
                              l2464 164E                                l2456 1637  
                              l2448 161B                                l2480 1552  
                              l2472 1542                                l2560 0705  
                              l2552 06D7                                l2544 069F  
                              l2616 1443                                l2800 0F29  
                              l3344 15E8                                l3336 15CC  
                              l3328 15B5                                l3098 0D0C  
                              l2730 1407                                l2722 13E8  
                              l3290 030E                                l3274 02D6  
                              l3266 02C2                                l3258 029E  
                              l3194 006A                                l3186 0053  
                              l3178 0045                                l3362 09E6  
                              l3354 09D6                                l3346 09CE  
                              l3370 1112                                l2634 1410  
                              l2642 1430                                l2650 1518  
                              l2626 146E                                l2714 07E8  
                              l2706 07C9                                l2458 163E  
                              l2490 1568                                l2482 1558  
                              l2474 1547                                l2570 074B  
                              l2562 0728                                l2554 06E7  
                              l2546 06A3                                l2538 0671  
                              l2618 1452                                l2810 0F6E  
                              l2802 0F34                                l3338 15D6  
                              l3380 113C                                l3372 1131  
                              l2900 0432                                l2724 13EF  
                              l3292 0327                                l3284 02F7  
                              l3276 02D7                                l3268 02C3  
                              l3196 006D                                l3188 0058  
                              l3364 0A21                                l3356 09D7  
                              l3348 09D1                                l2636 1418  
                              l2644 14E7                                l2660 12F5  
                              l2652 12EA                                l2628 1484  
                              l2708 07DA                                l2716 07EE  
                              l2492 1572                                l2484 155B  
                              l2476 1549                                l2468 153B  
                              l2572 0750                                l2564 073B  
                              l2556 06FC                                l2580 0778  
                              l2548 06AD                                l2820 0FA8  
                              l2812 0F79                                l2804 0F40  
                              l2740 0E2C                   custom_delay_ms@ms 00A0  
                              l3366 1174                                l3374 1135  
                              l2590 1359                                l3390 178B  
                              l3382 1766                                l2910 0448  
                              l2902 0436                                l2726 13F3  
                              l3286 02FC                                l3294 032D  
                              l3278 02DB                                l3198 0071  
                              l3358 09D8                                l2734 1190  
                              l2638 1420                                l2646 14EC  
                              l2662 12FB                                l2654 12EE  
                              l2494 1578                                l2486 1562  
                              l2478 154D                                l2574 0759  
                              l2566 0741                                l2558 06FE  
                              l2670 13C2                                l2830 0FF4  
                              l2822 0FB4                                l2814 0F84  
                              l2806 0F59                                l2750 0E34  
                              l2742 0E30                                l3368 1178  
                              l3376 1139                                l2592 135C  
                              l3392 179B                                l3384 176A  
                              l2920 049B                                l2904 043A  
                              l2912 044E                                l2840 0397  
                              l2832 0381                                l2728 1402  
                              l3296 033A                                l3288 030A  
                              l2736 1187                                l2664 12FF  
                              l2648 1510                                l2656 12EF  
                              l2496 157F                                l2488 1564  
                              l2576 076D                                l2568 0746  
                              l2584 0783                                l2672 13C6  
                              l2824 0FC3                                l2816 0F93  
                              l2808 0F63                                l2760 0E5A  
                              l2752 0E38                                l2744 0E32  
                              l3640 16D8                                l3378 113B  
                              l2594 1365                                l3394 17A1  
                              l3386 1770                                l2922 049D  
                              l2930 04B4                                l2914 0451  
                              l2906 0440                                l2850 03B2  
                              l2842 039A                                l2834 0387  
                              l3298 0345                                l2666 130F  
                              l2690 14DC                                l2682 14A6  
                              l2658 12F2                                l2498 1585  
                              l2578 0771                                l2674 13C8  
                              l2826 0FD4                                l2818 0F9D  
                              l2770 0E86                                l2762 0E63  
                              l2754 0E3D                                l2738 0E23  
                              l3650 16FD                                l3642 16DD  
                              l3634 16C9                                l3396 17B1  
                              l3388 1781                                l2940 04E9  
                              l2932 04C0                                l2924 04A3  
                              l2916 046E                                l2908 0444  
                              l2860 03CB                                l2844 03A1  
                              l2852 03B4                                l2836 0389  
                              l2684 14A8                                l2692 14E0  
                              l2596 139E                                l2676 13CA  
                              l2668 13BE                                l2828 0FE3  
                              l2780 0EB2                                l2772 0E8C  
                              l2764 0E68                                l2756 0E42  
                              l3660 1726                                l3652 1703  
                              l3644 16E2                                l3636 16CE  
                              l3398 17BB                                l2950 0506  
                              l2942 04ED                                l2934 04C5  
                              l2926 04A6                                l2918 0490  
                              l2870 03E8                                l2862 03D3  
                              l2854 03C2                                l2846 03A6  
                              l2838 0391                                l2686 14B8  
                              l2598 13A2                                l2694 07AF  
                              l2678 13D9                                l2790 0EF7  
                              l2782 0EBA                                l2766 0E6E  
                              l2774 0E92                                l2758 0E55  
                              l3670 175A                                l3662 1731  
                              l3654 1708                                l3646 16ED  
                              l3638 16D3                                l2960 056E  
                              l2952 0509                                l2944 04F3  
                              l2928 04B0                                l2880 040C  
                              l2872 03F2                                l2864 03D9  
                              l2856 03C4                                l2848 03B0  
                              l2688 14D1                                l2696 07B3  
                              l2792 0F01                                l2784 0EE2  
                              l2776 0E9D                                l2768 0E77  
                              l3664 1740                                l3656 1712  
                              l3648 16F8                                l2970 05A2  
                              l2962 0572                                l2954 0513  
                              l2946 04FE                                l2938 04D0  
                              l2890 041A                                l2882 040E  
                              l2874 03F4                                l2866 03DC  
                              l2858 03CA                                l2698 07B9  
                              l2794 0F0C                                l2786 0EE4  
                              l2778 0EA5                                l3666 1745  
                              l3658 171D                                l2980 05C3  
                              l2972 05A9                                l2964 0575  
                              l2948 0500                                l2956 0518  
                              l2892 041E                                l2884 0410  
                              l2868 03E3                                l2876 03F6  
                              l2796 0F14                                l2788 0EF1  
                              l3668 174F                                l2982 05CC  
                              l2990 05D9                                l2966 057A  
                              l2958 0530                                l2894 0424  
                              l2886 0412                                l2878 0408  
                              l2798 0F1E                                l2984 05D0  
                              l2976 05B4                                l2968 058B  
                              l2992 05DE                                l2896 0428  
                              l2888 0414                                l2994 05E1  
                              l2986 05D2                                l2978 05BD  
                              l2898 042C                                l2996 05E5  
                              l2988 05D7                                l2998 05EB  
                              STR_1 1000                                STR_2 1035  
                              STR_3 10D8                                STR_4 10B5  
                              STR_5 10A3                                STR_6 107B  
                              STR_7 10E7                                STR_8 1067  
                              STR_9 10C7                                _BRGH 04C2  
                              _CREN 00C4                                u3000 06D7  
                              u3001 06D6                                u3010 0703  
                              u3011 0701                                u3100 12E3  
                              u3020 0704                                u3101 12E2  
                              u3110 139A                                u3030 0741  
                              u3111 1399                                u3031 0740  
                              u3040 0746                                u3120 1468  
                              u3041 0745                                u3121 1467  
                              u4010 0D3E                                u3130 14A2  
                              u3210 07C9                                u3050 074B  
                              u4011 0D3D                                u3115 1396  
                              u3131 14A1                                u3211 07C8  
                              u3051 074A                                u4100 0DA0  
                              u4020 0D55                                u3140 14F8  
                              u3060 0750                                u3300 0E5A  
                              u4101 0D9F                                u4021 0D54  
                              u4005 0D25                                u3205 07BD  
                              u3061 074F                                u3301 0E59  
                              u4110 0DA6                                u4030 0D5D  
                              u3150 1522                                u3230 07DA  
                              u3070 0777                                u3310 0E63  
                              u4111 0DA5                                u4031 0D5C  
                              u4015 0D3A                                u3231 07D9  
                              u3071 0776                                u3311 0E62  
                              u4120 0DB8                                u4200 0075  
                              u3160 153A                                u3400 0FC3  
                              u3320 0E68                                u4121 0DB7  
                              u4201 0074                                u3161 1539  
                              u3225 07CA                                u3401 0FC2  
                              u3321 0E67                                u4130 0DC7  
                              u4050 0D6C                                u4210 007B  
                              u3170 14D1                                u3250 07EE  
                              u3410 0FE3                                u3330 0E6E  
                              u4051 0D6B                                u4211 007A  
                              u3171 14D0                                u3251 07ED  
                              u3235 07D6                                u3411 0FE2  
                              u3331 0E6D                                u2700 112A  
                              u3500 040C                                u3420 0397  
                              u4140 0DE4                                u3260 13F3  
                              u4220 0080                                u3180 14E6  
                              u3340 0E77                                u2701 1129  
                              u3085 136A                                u3501 040B  
                              u3421 0396                                u4141 0DE3  
                              u4045 0D61                                u3261 13F2  
                              u4301 017F                                u4221 007F  
                              u3181 14E5                                u3245 07E2  
                              u3405 0FBF                                u3341 0E76  
                              u2710 1130                                u3510 046E  
                              u3430 03A1                                u4150 0E01  
                              u4070 0D80                                u4302 0186  
                              u4230 0097                                u3190 07B9  
                              u3350 0EB2                                u2711 112F  
                              u3511 046D                                u3431 03A0  
                              u4151 0E00                                u4135 0DC2  
                              u4071 0D7F                                u4311 01AA  
                              u4303 018D                                u4231 0096  
                              u3175 14CD                                u3095 13B0  
                              u3191 07B8                                u3415 0FDF  
                              u3351 0EB1                                u2720 12D4  
                              u3520 0479                                u3440 03A6  
                              u4160 0E16                                u4080 0D85  
                              u3280 1407                                u4312 01B1  
                              u4240 009C                                u3360 0EBA  
                              u2721 12D3                                u3601 04DB  
                              u3521 0477                                u3441 03A5  
                              u4161 0E15                                u4145 0DE0  
                              u4081 0D84                                u4065 0D6F  
                              u3281 1406                                u4313 01B8  
                              u4241 009B                                u3361 0EB9  
                              u3610 04ED                                u3602 04E2  
                              u3530 047A                                u3450 03CA  
                              u4090 0D99                                u4170 004D  
                              u2810 1644                                u2730 15F5  
                              u3370 0EF1                                u3290 0E27  
                              u3611 04EC                                u3603 04E9  
                              u3515 046A                                u3451 03C9  
                              u4155 0DFD                                u4091 0D98  
                              u3275 13FA                                u4331 01DE  
                              u4251 00E9                                u4171 004C  
                              u2811 1643                                u2731 15F4  
                              u3371 0EF0                                u3355 0EAE  
                              u3700 05A9                                u3620 04F3  
                              u3540 0490                                u3460 03D9  
                              u4500 031D                                u4420 02C2  
                              u4332 01E5                                u4252 00F0  
                              u4180 0053                                u2820 1649  
                              u2740 1600                                u2900 1585  
                              u3380 0F14                                u3701 05A8  
                              u3621 04F2                                u3541 048F  
                              u3461 03D8                                u4421 02C1  
                              u4405 02A0                                u4341 0209  
                              u4333 01EC                                u4325 01BA  
                              u4261 0105                                u4253 00F7  
                              u4181 0052                                u2821 1648  
                              u2805 1638                                u2741 15FF  
                              u2901 1584                                u3381 0F13  
                              u3630 0506                                u3550 04A3  
                              u3470 03E3                                u4510 033A  
                              u4342 0210                                u4262 010C  
                              u4190 0058                                u2750 160F  
                              u2910 158A                                u2830 1542  
                              u3390 0F93                                u3631 0505  
                              u3551 04A2                                u3471 03E2  
                              u4511 0339                                u4415 02B7  
                              u4351 0234                                u4343 0217  
                              u4271 012F                                u4263 0113  
                              u4191 0057                                u2751 160E  
                              u2911 1589                                u2831 1541  
                              u3391 0F92                                u3375 0EED  
                              u3800 0612                                u3720 05C3  
                              u3480 03E8                                u4520 0354  
                              u4440 02D6                                u4360 025C  
                              u4352 023B                                u4272 0136  
                              u2840 154D                                u2920 0882  
                              u3801 0611                                u3721 05C2  
                              u3481 03E7                                u4521 0353  
                              u4505 0318                                u4441 02D5  
                              u4353 0242                                u4281 014B  
                              u4273 013D                                u2841 154C  
                              u2921 0881                                u3810 0621  
                              u3730 05CC                                u3650 0530  
                              u3570 04BC                                u3490 0408  
                              u4530 0370                                u4450 02DB  
                              u4282 0152                                u2770 161F  
                              u2850 1558                                u2930 0888  
                              u3731 05CB                                u3715 05B6  
                              u3651 052F                                u3571 04BB  
                              u3491 0407                                u4531 036F  
                              u4515 0336                                u4451 02DA  
                              u4435 02C5                                u4371 0268  
                              u4283 0159                                u2771 161E  
                              u2851 1557                                u2931 0887  
                              u3395 0F8F                                u3820 0632  
                              u3740 05D7                                u3580 04C0  
                              u3900 0C72                                u4460 02EF  
                              u4380 0284                                u4372 026F  
                              u2940 08A7                                u4540 15A4  
                              u3821 0631                                u3741 05D6  
                              u3661 0547                                u3653 052C  
                              u3645 050C                                u3581 04BF  
                              u3565 04A9                                u3901 0C71  
                              u4525 0350                                u4461 02EE  
                              u4373 0276                                u4365 0257  
                              u2765 1613                                u2941 08A6  
                              u4541 15A3                                u3830 063B  
                              u3750 05DE                                u3670 055B  
                              u3662 0548                                u3590 04C5  
                              u3910 0C90                                u4470 02F6  
                              u2790 1630                                u2870 1568  
                              u2950 08D9                                u4550 15BF  
                              u5407 1787                                u3831 063A  
                              u3815 061C                                u3751 05DD  
                              u3671 055C                                u3663 054D  
                              u3591 04C4                                u3911 0C8F  
                              u4471 02F5                                u4391 0290  
                              u4295 015B                                u2791 162F  
                              u2871 1567                                u2951 08D8  
                              u4551 15BE                                _RBIE 005B  
                              u3840 0640                                u3760 05E5  
                              u3680 057A                                u3672 0561  
                              u3664 054E                                u3920 0C96  
                              u4480 02FC                                u4392 0297  
                              u2880 1572                                u2960 08FC  
                              u4560 15CC                                _RBIF 0058  
                              u5417 1797                                u3841 063F  
                              u3761 05E4                                u3681 0579  
                              u3673 0562                                u3665 0553  
                              u3921 0C95                                u4481 02FB  
                              u4393 029E                                u4385 027F  
                              u2785 1620                                u2881 1571  
                              u2865 155C                                u4561 15CB  
                              u5337 1739                                u3850 0651  
                              u3770 05EB                                u3690 05A2  
                              u3666 0554                                u3930 0C9B  
                              u4490 030E                                u2970 12A2  
                              u4570 15D4                                u5427 17A7  
                              u3851 0650                                u3771 05EA  
                              u3691 05A1                                u3931 0C9A  
                              u4491 030D                                u2795 162C  
                              u2971 12A1                                u2955 08D5  
                              u4571 15D2                                u5347 15AA  
                              u3860 0656                                u3780 05F6  
                              u3940 0CB6                                u2980 068F  
                              u4580 15D5                                _RCEN 048B  
                              _RCIF 0065                                u5437 17B7  
                              u3861 0655                                u3781 05F5  
                              u3941 0CB5                                u2885 156E  
                              u2981 068E                                u5357 0E48  
                              u3870 066D                                u3790 05FE  
                              u3950 0CD2                                u2990 06C1  
                              u4590 15E2                                u5447 17C7  
                              u3871 066C                                u3791 05FD  
                              u3951 0CD1                                u2895 1579  
                              u2991 06C0                                u5367 0E98  
                              u4591 15E1                                u3960 0D0C  
                              u3880 0C67                                u5457 17D8  
                              u3961 0D0B                                u3881 0C66  
                              u5377 12F9                                u3890 0C6D  
                              u5467 17E9                                u3891 0C6C  
                              u5387 1383                                u5477 17FA  
                              u5397 1776                                u3990 0D22  
                              u5487 07FD                                u3991 0D21  
                              u3975 0D0E                                u5497 1332  
                              u3985 0D17                                _SPEN 00C7  
                              _RSEN 0489                                _TRMT 04C1  
                              _TXEN 04C5                                _SYNC 04C4  
                 ?_LCD_Write_String 00A6                                abs@a 00A6  
                              _dbuf 0138                                _main 16C9  
                      ?_BUZZER_Beep 00A6                     _division_factor 005E  
                              _prec 004B                                btemp 007E  
                      ?_BUZZER_Init 0070                                start 0010  
                ??_LCD_Write_String 00A8                     ___fldiv@new_exp 00D5  
          __end_of_checkPauseButton 15EE                LCD_Write_4Bit@Nibble 00A3  
           __end_of_UART_Write_Text 14A3                               ??_abs 00A8  
                  __end_of_LCD_Init 1800                    ?_I2C_Master_Init 0070  
                    i1___fldiv@aexp 0039                      i1___fldiv@bexp 0038  
                  ?_I2C_Master_Wait 0070                    __end_of_LED_Init 1151  
                  ?_I2C_Master_Stop 0070                      i1___fldiv@sign 0031  
                     ___fltol@sign1 0042                     __end_of___fladd 0671  
                             ?_main 0070                               _ACKEN 048C  
                             _ACKDT 048D                     __end_of___fldiv 0E23  
                   __end_of___awdiv 1653                               STR_10 1078  
                             STR_11 108F                     __end_of___awmod 1594  
                   __end_of___flmul 0381                     __end_of___fltol 16C9  
                   ___awdiv@divisor 00A0                               _T1CON 0010  
                             _IOCB0 04B0                     __end_of___lwdiv 07F3  
                             i1l162 0819                               i1l165 086F  
                             i1l820 0C58                               i1l662 16B3  
                             i1l902 093C                               i1l655 16C8  
                             i1l903 094D                               i1l840 0C44  
                             i1l904 09CD                               i1l665 16C8  
                             i1l842 0C50                               i1l834 0BD2  
                             i1l818 0AE4                               i1l915 0997  
                             i1l916 09A3                               i1l908 097B  
                   ___awdiv@counter 00A4                               _RCREG 001A  
                      vfpfcnvrt@fmt 00AF                               _TMR1H 000F  
                             _TMR1L 000E                               _SPBRG 0099  
                             _PORTC 0007                               _PORTD 0008  
                SR04_Distance@F1975 0110                               _TRISC 0087  
                             _TRISD 0088                               _SSPIF 0063  
                             _TXREG 0019              __end_of_LCD_Set_Cursor 143C  
                       ?_UART_Write 0070              ??_BUZZER_MultipleBeeps 00AA  
                             _flags 004F                               _distn 01C2  
                             _fputc 087A                               _width 0049  
                             _putch 0003                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __end_of_sprintf 13E3                      _LCD_Write_4Bit 1315  
                    _LCD_Write_Char 139B                     __initialization 0013  
                      __end_of_main 1763                   _IO_Expander_Write 1335  
                ?_IO_Expander_Write 0070           SR04_init@instruction_freq 0194  
                            ??_main 00ED                         ?i1___xxtofl 0070  
                 __end_of_LCD_Clear 0800                           ??_LCD_CMD 00A4  
                         ??_LED_Off 00A0                   ?_I2C_Master_Start 0070  
                 ?_I2C_Master_Write 0070                 ??_IO_Expander_Write 00A1  
                   ?_LCD_Set_Cursor 00A6                   __end_of_BUZZER_On 1187  
                ??_I2C_Master_Start 00A0                  ??_I2C_Master_Write 00A0  
                            ?_fputc 00A0                    ___awdiv@dividend 00A2  
                            ?_putch 0070                              _ANSELH 0189  
                            i1l3420 167A                              i1l3412 1653  
                            i1l3500 0B08                              i1l3422 167B  
                            i1l3414 165E                              i1l3510 0B33  
                            i1l3424 1683                              i1l3520 0B58  
                            i1l3512 0B3B                              i1l3504 0B11  
                            i1l3600 0944                              i1l3442 16A8  
                            i1l3434 1691                              i1l3426 1685  
                            i1l3418 1667                              i1l3530 0B83  
                            i1l3522 0B59                              i1l3514 0B3D  
                            i1l3506 0B23                              i1l3450 0A93  
                            i1l3610 0964                              i1l3444 16B8  
                            i1l3428 1689                              i1l3436 16A1  
                            i1l3540 0B9E                              i1l3516 0B42  
                            i1l3524 0B62                              i1l3532 0B85  
                            i1l3508 0B2B                              i1l3460 0AA3  
                            i1l3452 0A95                              i1l3620 099B  
                            i1l3612 0972                              i1l3604 0950  
                            i1l3700 086E                              i1l3446 16BD  
                            i1l3550 0BB6                              i1l3542 0BA2  
                            i1l3534 0B8B                              i1l3526 0B74  
                            i1l3518 0B54                              i1l3470 0ABB  
                            i1l3462 0AA8                              i1l3454 0A99  
                            i1l3630 09C5                              i1l3622 09A5  
                            i1l3614 0982                              i1l3606 095B  
                            i1l3560 0BD7                              i1l3552 0BB7  
                            i1l3544 0BA3                              i1l3536 0B93  
                            i1l3528 0B75                              i1l3480 0ACC  
                            i1l3472 0ABE                              i1l3464 0AB0  
                            i1l3456 0A9D                              i1l3448 0A8F  
                            i1l3624 09BB                              i1l3616 098D  
                            i1l3608 0962                              i1l3562 0BDC  
                            i1l3570 0C0D                              i1l3554 0BBB  
                            i1l3546 0BAC                              i1l3538 0B95  
                            i1l3490 0AEC                              i1l3482 0AD1  
                            i1l3474 0AC2                              i1l3466 0AB1  
                            i1l3458 0A9E                              i1l3626 09C0  
                            i1l3618 0991                              i1l3580 0C43  
                            i1l3572 0C1A                              i1l3564 0BEA  
                            i1l3556 0BCF                              i1l3548 0BB2  
                            i1l3492 0AF8                              i1l3484 0AD9  
                            i1l3476 0AC6                              i1l3468 0AB3  
                            i1l3628 09C4                              i1l3582 0C48  
                            i1l3574 0C28                              i1l3566 0BEE  
                            i1l3494 0AFA                              i1l3486 0ADA  
                            i1l3478 0AC7                              i1l3584 0C4C  
                            i1l3576 0C37                              i1l3568 0C07  
                            i1l3488 0ADC                              i1l3592 091B  
                            i1l3680 0808                              i1l3586 0C4E  
                            i1l3578 0C3B                              i1l3498 0B03  
                            i1l3594 0920                              i1l3690 0826  
                            i1l3682 080F                              i1l3596 0924  
                            i1l3692 0829                              i1l3684 0813  
                            i1l3676 0800                              i1l3598 0934  
                            i1l3694 082D                              i1l3686 0814  
                            i1l3678 0804                              i1l3696 086B  
                            i1l3688 081F                              _LED_On 1187  
                            i1l3698 086C                   __end_of_SR04_init 0A8F  
                            u500_20 0924                              u500_21 0923  
                            u501_20 0944                              u501_21 0943  
                            u510_20 09B0                              u510_25 09AB  
                            u502_25 0953                              u511_20 09C0  
                            u503_20 0961                              u511_21 09BF  
                            u503_21 0960                              u512_20 09C4  
                            u512_21 09C3                              u504_25 0973  
                            u505_20 0981                              u513_20 0804  
                            u505_21 0980                              u513_21 0803  
                            u514_20 0808                              u514_21 0807  
                            u506_25 0986                              u507_20 0991  
                            u515_20 080F                              u507_21 0990  
                            u515_21 080E                              u460_20 165E  
                            u508_20 0997                              u516_20 081F  
                            u460_21 165D                              u508_21 0996  
                            u516_21 081E                              u461_20 1675  
                            u509_20 099B                              u517_20 0826  
                            u509_21 099A                              u517_21 0825  
                            u461_25 1670                              u462_20 1689  
                            u470_20 0A9D                              u462_21 1688  
                            u470_21 0A9C                              u463_20 1690  
                            u471_20 0AA3                              u463_21 168F  
                            u471_21 0AA2                              u472_20 0AA8  
                            u472_21 0AA7                              u464_25 1692  
                            u480_25 0B4D                              u465_20 16A0  
                            u481_20 0B58                              u473_20 0AC6  
                            u465_21 169F                              u481_21 0B57  
                            u473_21 0AC5                              u466_20 16A7  
                            u490_20 0BBB                              u474_20 0ACC  
                            u466_21 16A6                              u490_21 0BBA  
                            u474_21 0ACB                              u482_25 0B5B  
                            u491_20 0BCF                              u483_20 0B74  
                            u475_20 0AD1                              u491_21 0BCE  
                            u483_21 0B73                              u475_21 0AD0  
                            u467_25 16AA                              u483_25 0B70  
                            u468_20 16B8                              u492_20 0BD6  
                            u484_20 0B8B                              u476_20 0AEC  
                            u468_21 16B7                              u492_21 0BD5  
                            u484_21 0B8A                              u476_21 0AEB  
                            u469_20 16BD                              u493_20 0BDC  
                            u485_20 0B93                              u477_20 0B08  
                            u469_21 16BC                              u493_21 0BDB  
                            u485_21 0B92                              u477_21 0B07  
                            u494_20 0BEE                              u478_20 0B42  
                            u494_21 0BED                              u478_21 0B41  
                            u486_25 0B97                              u495_20 0BFD  
                            u487_20 0BA2                              u487_21 0BA1  
                            u495_25 0BF8                              u479_25 0B44  
                            u496_20 0C1A                              u496_21 0C19  
                            u496_25 0C16                              u488_25 0BA5  
                     vfpfcnvrt@done 00B5                              u497_20 0C37  
                            u489_20 0BB6                              u497_21 0C36  
                            u489_21 0BB5                              u497_25 0C33  
                            u498_20 0C4C                              u498_21 0C4B  
                            u499_20 0920                              u499_21 091F  
                            _TMR1ON 0080                              _SSPADD 0093  
                            _TRISB0 0430                              _TRISB1 0431  
                            _TRISC3 043B                              _TRISC4 043C  
                            _TRISC6 043E                              _TRISC7 043F  
                            _SSPCON 0014                              _SSPBUF 0013  
            __end_of_LCD_Write_4Bit 1335                    __end_of_echoTime 087A  
         SR04_init@time_per_tick_us 0198              __end_of_LCD_Write_Char 13BE  
         __end_of_IO_Expander_Write 1356                        vfprintf@cfmt 00C2  
                         ??___fladd 00E5                           ??___fldiv 00CB  
                         ??___awdiv 00A4                           ??___awmod 00A4  
                         ??___flmul 00B1                    ?_UART_Write_Text 00A1  
                         ??___fltol 003E  checkPauseButton@currentButtonState 00DA  
                         ??___lwdiv 00A4                    ___awdiv@quotient 00A6  
                   ___awmod@divisor 00A0                     ___awmod@counter 00A4  
             __end_of_UART_TX_Empty 1182                   ??_custom_delay_ms 00A2  
                 __end_ofi1___fldiv 0C59                              fputc@c 00A0  
                     ?_SR04_trigger 0070                              saved_w 007E  
                     _last_distance 01C0                              putch@c 0070  
                  __end_of_vfprintf 146D                           ??_sprintf 00C9  
         BUZZER_MultipleBeeps@count 00AC             __end_of__initialization 003B  
                         ?_LCD_Init 0070                           ?_LED_Init 0070  
                   ?_LCD_Write_4Bit 0070                          ___fltol@f1 003A  
                   ?_LCD_Write_Char 0070                      __pcstackCOMMON 0070  
                      __pidataBANK0 113E                       __end_of_fputc 091A  
                     __end_of_putch 0004                       _SR04_Distance 0E23  
                    ??_SR04_trigger 00A0                        ??_BUZZER_Off 00A0  
                           ??_fputc 00A4                             ??_putch 00A0  
                        __pbssBANK0 0049                          __pbssBANK2 0110  
                        __pbssBANK3 01C0                             ?_LED_On 0070  
                        ??_LCD_Init 00A6                          ??_LED_Init 00A0  
                    i1___xxtofl@arg 007A                      i1___xxtofl@exp 0079  
                    i1___xxtofl@val 0070                          _echo_state 01C4  
                        _echo_start 004D                   __end_of__Umul8_16 140C  
                        __pmaintext 16C9                  __end_of_BUZZER_Off 1190  
                 ?_checkPauseButton 0070                          __pintentry 0004  
                ??_checkPauseButton 00D8                             _ACKSTAT 048E  
                    ?_SR04_Distance 0070   BUZZER_MultipleBeeps@beep_duration 00A6  
                           _LCD_CMD 1356                             _LED_Off 1190  
                         ?_echoTime 0070                        ??_UART_Write 00A0  
                           _SSPCON2 0091                             _SSPSTAT 0094  
                     ?_UART_TX_Init 0070                          __stringtab 1100  
                           _i2c_add 0050                             ___fladd 0381  
                           ___fldiv 0C59                             ___awdiv 15EE  
                           ___awmod 153B                             ___flmul 003F  
                           ___fltol 1653                  __end_of_UART_Write 12EA  
                           ___lwdiv 07AF                           ?_vfprintf 00BD  
                  ??_LCD_Set_Cursor 00A7                        ??i1___xxtofl 0074  
                           __ptext1 1594                             __ptext2 0E23  
                           __ptext3 13BE                             __ptext4 143C  
                           __ptext5 0671                             __ptext6 087A  
                           __ptext7 0003                             __ptext8 129C  
                           __ptext9 153B                    ___awmod@dividend 00A2  
                        ??_echoTime 0044           SR04_Distance@measurements 0190  
                         _LCD_Clear 07F3                      ??_UART_TX_Init 00A0  
                           _sprintf 13BE                             clrloop0 116D  
              end_of_initialization 003B                           _BUZZER_On 1182  
                           fputc@fp 00A2                           _SR04_init 09CE  
              __end_of_SR04_trigger 12FF                  __end_ofi1___xxtofl 09CE  
                   _custom_delay_ms 1378                   __end_of_vfpfcnvrt 07AF  
                  vfpfcnvrt@convarg 00B8                SR04_Distance@timeout 01BA  
                      __pstringtext 1000                          ??_vfprintf 00C2  
                   ??_SR04_Distance 00D6                      UART_Write@data 00A0  
                        LCD_CMD@CMD 00A5                         ___fladd@grs 0193  
                        ?_LCD_Clear 0070                           i1___fldiv 0A8F  
                       ___fldiv@grs 00D7                         ___fldiv@rem 00D0  
                  ??_LCD_Write_4Bit 00A2                   LCD_Write_String@i 00AB  
                  ??_LCD_Write_Char 00A4                          ?_BUZZER_On 0070  
                       ___flmul@grs 00B7                      __end_of_LED_On 118C  
                        ?_SR04_init 0070                         vfpfcnvrt@ap 00B0  
                       vfpfcnvrt@cp 00B6                         vfpfcnvrt@fp 00AD  
                  _LCD_Write_String 14E7                       ??_BUTTON_Init 00A0  
               start_initialization 0013                     _timer_prescaler 005D  
                       __end_of_abs 12AF                          ?i1___fldiv 0020  
                          ??_LED_On 00A0             __end_of_custom_delay_ms 139B  
                 ??_I2C_Master_Init 00A0                   ??_I2C_Master_Wait 00A0  
                     ??_BUZZER_Beep 00A8                   ??_I2C_Master_Stop 00A0  
               BUZZER_Beep@duration 00A6                       ??_BUZZER_Init 00A0  
                     _echo_complete 01C5                         vfprintf@fmt 00BF  
                        init_fetch0 12AF                           __Umul8_16 13E3  
              __end_of_UART_TX_Init 1124                         __pdataBANK0 0054  
                         ___fladd@a 00E1                           ___fladd@b 00DD  
                          ?_LCD_CMD 0070                           ___fldiv@a 00C3  
                         ___fldiv@b 00C7                            ?_LED_Off 0070  
                         ___flmul@a 00AD                           ___flmul@b 00A9  
                         ___latbits 0002                     _lastButtonState 0052  
                     __pcstackBANK0 0020                       __pcstackBANK1 00A0  
                     __pcstackBANK3 0190                         ??_LCD_Clear 00A6  
               __end_of_BUTTON_Init 116C                     i1___xxtofl@sign 0078  
                       ??_BUZZER_On 00A0                   i1___fldiv@new_exp 0032  
                         __pnvBANK0 005E         SR04_Distance@valid_readings 01BC  
                  _I2C_Master_Start 115A                         ??_SR04_init 00ED  
                  _I2C_Master_Write 12C2                    ___lwdiv@dividend 00A2  
             IO_Expander_Write@Data 00A1                 __end_of_BUZZER_Beep 1315  
               __end_of_BUZZER_Init 117C                            ?___fladd 00DD  
                          ?___fldiv 00C3                            ?___awdiv 00A0  
                          ?___awmod 00A0                            ?___flmul 00A9  
                          ?___fltol 003A                          ?__Umul8_16 00A0  
                          ?___lwdiv 00A0                I2C_Master_Write@data 00A0  
                         __pstrings 1100                       _UART_TX_Empty 117C  
                    SR04_Distance@i 01BE                        _SR04_trigger 12EA  
                       ??i1___fldiv 0028                    ___lwdiv@quotient 00A4  
                          ?_sprintf 00C4                   ??_UART_Write_Text 00A3  
                  ?_custom_delay_ms 00A0                     _sound_speed_cms 0054  
                 interrupt_function 0004                            _LCD_Init 1763  
                          _LED_Init 1148                           clear_ram0 116C  
      __end_of_BUZZER_MultipleBeeps 14E7                           _vfpfcnvrt 0671  
                       __stringbase 1112                      ?_UART_TX_Empty 0070  
                       _BUTTON_Init 1163                          vfpfcnvrt@c 00BC  
                  SR04_Distance@sum 01B8            __end_of_LCD_Write_String 153B  
                       _BUZZER_Beep 12FF                         _BUZZER_Init 1174  
             BUZZER_MultipleBeeps@i 00AD                          vfprintf@ap 00C1  
                        vfprintf@fp 00BD                         ??__Umul8_16 00A2  
                        ?_vfpfcnvrt 00AD               __end_of_SR04_Distance 1000  
                __end_of__stringtab 1112                          sprintf@fmt 00C5  
                   _I2C_Master_Init 1131                     _I2C_Master_Wait 1124  
                   _I2C_Master_Stop 1151                            _echoTime 0800  
                  _checkPauseButton 1594                     ___lwdiv@divisor 00A0  
                   ___lwdiv@counter 00A6                            __ptext10 15EE  
                          __ptext11 07AF                            __ptext20 12FF  
                          __ptext12 146D                            __ptext21 1378  
                          __ptext13 12D6                            __ptext30 0C59  
                          __ptext22 1182                            __ptext14 117C  
                          __ptext31 0381                            __ptext23 118C  
                          __ptext15 12EA                            __ptext40 115A  
                          __ptext32 1148                            __ptext24 1187  
                          __ptext16 14E7                            __ptext41 1124  
                          __ptext33 1763                            __ptext25 1190  
                          __ptext17 139B                            __ptext42 1131  
                          __ptext34 07F3                            __ptext26 1112  
                          __ptext18 140C                            __ptext43 1174  
                          __ptext35 1356                            __ptext27 09CE  
                          __ptext19 14A3                            __ptext44 1163  
                          __ptext36 1315                            __ptext28 003F  
                          __ptext45 0800                            __ptext37 1335  
                          __ptext29 13E3                            __ptext46 091A  
                          __ptext38 12C2                            __ptext47 0A8F  
                          __ptext39 1151                            __ptext48 1653  
                       echoTime@TMR 0047                            _isPaused 0053  
                      _UART_TX_Init 1112                     _BackLight_State 005C  
               UART_Write_Text@text 00A1                            _vfprintf 143C  
                   ??_UART_TX_Empty 00A0            __end_of_I2C_Master_Start 1163  
          __end_of_I2C_Master_Write 12D6                          _BUZZER_Off 118C  
                LCD_Write_Char@Data 00A5                            init_ram0 12B3  
                          intlevel1 0000                _BUZZER_MultipleBeeps 14A3  
                         sprintf@ap 00CA                    _crystal_freq_mhz 0058  
                         stringcode 110A  BUZZER_MultipleBeeps@pause_duration 00A8  
           __end_of_I2C_Master_Init 113E             __end_of_I2C_Master_Wait 1131  
           __end_of_I2C_Master_Stop 115A                         ??_vfpfcnvrt 00B1  
                   LCD_Init@I2C_Add 00A8              __Umul8_16@multiplicand 00A0  
                   _UART_Write_Text 146D                            sprintf@f 00CB  
                          sprintf@s 00C4                            stringtab 1100  
                        _UART_Write 12D6                   LCD_Set_Cursor@COL 00A6  
                 LCD_Set_Cursor@ROW 00A7                       ___fladd@signs 0190  
             ?_BUZZER_MultipleBeeps 00A6                        ___fladd@aexp 0191  
                      ___fladd@bexp 0192                __Umul8_16@multiplier 00A8  
                 __Umul8_16@product 00A4  
